<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>目录</title>
    <url>/2024/09/12/a01-root-catalog/</url>
    <content><![CDATA[<h1 id="todo"><a href="#todo" class="headerlink" title="todo"></a>todo</h1><p><a href="https://gitee.com/starblues/springboot-plugin-framework-parent">spring-brick</a></p>
<p><a href="https://cloud.tencent.com/developer/article/2310456">基于spring-plugin做插件化开发</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzAxNDMwMTMwMw==&mid=2247550522&idx=1&sn=9e9e7dd60609c831965c4e404148bd35&chksm=9b972722ace0ae34f7375865ac3172ccd3c4c33f170ae03e4038eb770229d56edc240d78ebc2&scene=126&sessionid=0">重磅：Spring Boot推出插件化开发，彻底炸裂了！</a><br><a href="https://blog.csdn.net/qq_17231297/article/details/131255683">重磅：Spring Boot推出插件化开发，彻底炸裂了！</a></p>
<p><a href="https://blog.csdn.net/ZsbJava/article/details/120764957">SpringPlugin-Core在业务中的应用</a></p>
<p><a href="https://blog.csdn.net/liubenlong007/article/details/107043615">google aviator：轻量级Java公式引擎</a></p>
<p><a href="https://groovy-lang.cn/documentation.html">Apache Groovy</a></p>
<p><a href="https://daichangya.github.io/flexmark-java-doc/#/">flexmark-java 中文文档</a><br><a href="https://www.cnblogs.com/libaoquan/p/7442843.html">使用 java 实现一个简单的 markdown 语法解析器</a></p>
<p><a href="https://www.bilibili.com/video/BV1854y1i7pr">京东首屏实战–静态页面部分</a></p>
<h1 id="996-icu"><a href="#996-icu" class="headerlink" title="996.icu"></a>996.icu</h1><h2 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h2><p><a href="/2024/09/15/nginx-note/">nginx 笔记</a></p>
<h2 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h2><h3 id="centos"><a href="#centos" class="headerlink" title="centos"></a>centos</h3><p><a href="/2024/09/15/centos-note/">centos 笔记</a></p>
<h1 id="java"><a href="#java" class="headerlink" title="java"></a>java</h1><p><a href="/2024/09/12/java-%E5%A4%A7%E9%A1%B9%E7%9B%AE/">java 大项目</a><br><a href="/2024/09/13/java-new-feature/">java 新特性</a></p>
<h2 id="maven"><a href="#maven" class="headerlink" title="maven"></a>maven</h2><p><a href="/2024/09/15/maven-note/">maven 笔记</a></p>
<h2 id="gradle"><a href="#gradle" class="headerlink" title="gradle"></a>gradle</h2><p><a href="/2024/09/12/gradle-study/">gradle 基本使用</a></p>
<h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><p><a href="/2024/09/12/juc-base/">java 多线程基本使用</a></p>
<h2 id="认证与鉴权"><a href="#认证与鉴权" class="headerlink" title="认证与鉴权"></a>认证与鉴权</h2><h3 id="jwt"><a href="#jwt" class="headerlink" title="jwt"></a>jwt</h3><p><a href="/2024/09/21/jwt/">jwt</a></p>
<h1 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h1><h2 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h2><p><a href="/2024/09/19/webpack-note/">webpack 笔记</a></p>
<h2 id="vue"><a href="#vue" class="headerlink" title="vue"></a>vue</h2><p><a href="/2024/09/21/vue3-with-prismjs/">vue3 使用 prismjs</a></p>
<h1 id="c"><a href="#c" class="headerlink" title="c++"></a>c++</h1><h1 id="php"><a href="#php" class="headerlink" title="php"></a>php</h1><p><a href="/2024/09/16/php-setup/">php 环境搭建</a></p>
<h1 id="gui"><a href="#gui" class="headerlink" title="gui"></a>gui</h1><h2 id="javafx"><a href="#javafx" class="headerlink" title="javafx"></a>javafx</h2><p><a href="/2024/09/14/javafx-001-hello-world/">javafx 001 hello world</a><br><a href="/2024/09/14/javafx-002-start-type/">javafx 002 启动方式</a><br><a href="/2024/09/14/javafx-003-lifecycle/">javafx 003 生命周期</a></p>
<h1 id="器"><a href="#器" class="headerlink" title="器"></a>器</h1>]]></content>
  </entry>
  <entry>
    <title>gradle 基本使用</title>
    <url>/2024/09/12/gradle-study/</url>
    <content><![CDATA[<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>在这里 <a href="https://services.gradle.org/distributions/">https://services.gradle.org/distributions/</a> 可以下载所有版本的 gralde , 我下载的是 <a href="https://services.gradle.org/distributions/gradle-8.10-all.zip">https://services.gradle.org/distributions/gradle-8.10-all.zip</a></p>
<h1 id="关于文档"><a href="#关于文档" class="headerlink" title="关于文档"></a>关于文档</h1><h2 id="一些文档汇总"><a href="#一些文档汇总" class="headerlink" title="一些文档汇总"></a>一些文档汇总</h2><p><a href="https://docs.gradle.org/8.10/userguide/userguide.html">gradle 8.10 官方文档</a></p>
<p><a href="https://doc.qzxdp.cn/gradle/8.1.1/userguide/userguide.html">gradle 用户手册</a></p>
<p><a href="https://gradle.github.net.cn/">gradle 中文网</a> 目测像是机翻</p>
<h2 id="怎么查找每个版本对应的官方文档"><a href="#怎么查找每个版本对应的官方文档" class="headerlink" title="怎么查找每个版本对应的官方文档"></a>怎么查找每个版本对应的官方文档</h2><p>第一种就是在官网上看, 在这个地址: <a href="https://gradle.org/releases/">https://gradle.org/releases/</a>, 有每个版本对应的手册</p>
<p><img src="/images/2024-09-12-gradle-study/001.png"></p>
<p>第二种就是在下载的 <code>gradle-xxx-all.zip</code> 中</p>
<div class="note info no-icon simple"><p>打开 <code>userguide.html</code> 即可, 那个 <code>userguide_single.html</code> 并不好用<br><code>userguide.pdf</code> 是 pdf 版本</p>
</div>

<p><img src="/images/2024-09-12-gradle-study/002.png"></p>
<h2 id="一个视频教程"><a href="#一个视频教程" class="headerlink" title="一个视频教程"></a>一个视频教程</h2><p><a href="https://www.bilibili.com/video/BV1Fc411x7xF">Gradle 教程 已完结 (基于Kotlin DSL讲解) 4K蓝光画质 超强的脚本式项目依赖和构建工具</a></p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ol>
<li>解压后将 <code>bin</code> 目录添加到环境变量</li>
<li>添加 <code>GRADLE_USER_HOME</code> 环境变量, 关于此环境变量的作用可参考: <a href="https://blog.csdn.net/LG_15011399296/article/details/134333647">GRADLE_USER_HOME用法指南</a></li>
</ol>
<h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h1><h2 id="直接命令行新建"><a href="#直接命令行新建" class="headerlink" title="直接命令行新建"></a>直接命令行新建</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">md spring-hello</span><br><span class="line">cd spring-hello</span><br><span class="line">gradle init</span><br></pre></td></tr></table></figure>

<p>选项如下</p>
<table>
<thead>
<tr>
<th>步骤</th>
<th>我的选择</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>Select type of build to generate</td>
<td>1</td>
<td>一个应用程序</td>
</tr>
<tr>
<td>Select implementation language</td>
<td>1</td>
<td>语言为 java</td>
</tr>
<tr>
<td>Enter target Java version</td>
<td>8</td>
<td>当前我主要使用 java8</td>
</tr>
<tr>
<td>project name</td>
<td>默认</td>
<td></td>
</tr>
<tr>
<td>Select application structure</td>
<td>1</td>
<td>先学会使用单模块项目</td>
</tr>
<tr>
<td>Select build script DSL</td>
<td>1</td>
<td>官方推荐 kotlin dsl</td>
</tr>
<tr>
<td>Select test framework</td>
<td>2</td>
<td>个人习惯使用 testng</td>
</tr>
<tr>
<td>Generate build using new APIs and behavior</td>
<td>默认(即 no)</td>
<td>gradle API 变更极快, 不建议使用哪些尚不稳定的 API</td>
</tr>
</tbody></table>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\github\gradle-study\spring-hello&gt;gradle init</span><br><span class="line">Starting a Gradle Daemon (subsequent builds will be faster)</span><br><span class="line"></span><br><span class="line">Select type of build to generate:</span><br><span class="line">  1: Application</span><br><span class="line">  2: Library</span><br><span class="line">  3: Gradle plugin</span><br><span class="line">  4: Basic (build structure only)</span><br><span class="line">Enter selection (default: Application) [1..4] 1</span><br><span class="line"></span><br><span class="line">Select implementation language:</span><br><span class="line">  1: Java</span><br><span class="line">  2: Kotlin</span><br><span class="line">  3: Groovy</span><br><span class="line">  4: Scala</span><br><span class="line">  5: C++</span><br><span class="line">  6: Swift</span><br><span class="line">Enter selection (default: Java) [1..6] 1</span><br><span class="line"></span><br><span class="line">Enter target Java version (min: 7, default: 21): 8</span><br><span class="line"></span><br><span class="line">Project name (default: spring-hello):</span><br><span class="line"></span><br><span class="line">Select application structure:</span><br><span class="line">  1: Single application project</span><br><span class="line">  2: Application and library project</span><br><span class="line">Enter selection (default: Single application project) [1..2] 1</span><br><span class="line"></span><br><span class="line">Select build script DSL:</span><br><span class="line">  1: Kotlin</span><br><span class="line">  2: Groovy</span><br><span class="line">Enter selection (default: Kotlin) [1..2] 1</span><br><span class="line"></span><br><span class="line">Select test framework:</span><br><span class="line">  1: JUnit 4</span><br><span class="line">  2: TestNG</span><br><span class="line">  3: Spock</span><br><span class="line">  4: JUnit Jupiter</span><br><span class="line">Enter selection (default: JUnit Jupiter) [1..4] 2</span><br><span class="line"></span><br><span class="line">Generate build using new APIs and behavior (some features may change in the next minor release)? (default: no) [yes, no]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; Task :init</span><br><span class="line">Learn more about Gradle by exploring our Samples at https://docs.gradle.org/8.10/samples/sample_building_java_applications.html</span><br><span class="line"></span><br><span class="line">Deprecated Gradle features were used in this build, making it incompatible with Gradle 9.0.</span><br><span class="line"></span><br><span class="line">You can use &#x27;--warning-mode all&#x27; to show the individual deprecation warnings and determine if they come from your own scripts or plugins.</span><br><span class="line"></span><br><span class="line">For more on this, please refer to https://docs.gradle.org/8.10/userguide/command_line_interface.html#sec:command_line_warnings in the Gradle documentation.</span><br><span class="line"></span><br><span class="line">BUILD SUCCESSFUL in 31s</span><br><span class="line">1 actionable task: 1 executed</span><br><span class="line">E:\github\gradle-study\spring-hello&gt;</span><br></pre></td></tr></table></figure>

<h2 id="新建后的一些配置"><a href="#新建后的一些配置" class="headerlink" title="新建后的一些配置"></a>新建后的一些配置</h2><p>不要着急用 <code>idea</code> 打开, 先修改一下 <code>gradle/wrapper/gradle-wrapper.properties</code></p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">distributionBase</span>=<span class="string">GRADLE_USER_HOME</span></span><br><span class="line"><span class="attr">distributionPath</span>=<span class="string">wrapper/dists</span></span><br><span class="line"> <span class="attr">distributionUrl</span>=<span class="string">https\://services.gradle.org/distributions/gradle-8.10-bin.zip</span></span><br><span class="line"></span><br><span class="line"> <span class="attr">使用腾讯云镜像下载</span> <span class="string">gradle</span></span><br><span class="line"><span class="attr">distributionUrl</span>=<span class="string">https\://mirrors.cloud.tencent.com/gradle/gradle-8.10-bin.zip</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networkTimeout</span>=<span class="string">10000</span></span><br><span class="line"><span class="attr">validateDistributionUrl</span>=<span class="string">true</span></span><br><span class="line"><span class="attr">zipStoreBase</span>=<span class="string">GRADLE_USER_HOME</span></span><br><span class="line"><span class="attr">zipStorePath</span>=<span class="string">wrapper/dists</span></span><br></pre></td></tr></table></figure>

<p>修改 <code>spring-hello/app/build.gradle.kts</code>, 添加阿里云镜像</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">repositories &#123;</span><br><span class="line">    maven(&quot;https://maven.aliyun.com/repository/public/&quot;)</span><br><span class="line">    maven(&quot;https://maven.aliyun.com/repository/spring/&quot;)</span><br><span class="line">    mavenLocal()</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后用 <code>idea</code> 打开, 修改一下项目配置 File -&gt; Settings -&gt; Build, Execution, Deployment -&gt; Build Tools -&gt; Gradle</p>
<p><img src="/images/2024-09-12-gradle-study/003.png"></p>
<p>开始运行</p>
<p><img src="/images/2024-09-12-gradle-study/004.png"></p>
<h1 id="单模块项目的基本操作"><a href="#单模块项目的基本操作" class="headerlink" title="单模块项目的基本操作"></a>单模块项目的基本操作</h1><h2 id="修改结构"><a href="#修改结构" class="headerlink" title="修改结构"></a>修改结构</h2><p>其实 <code>gradle</code> 新建的单模块项目还是一个多模块结构的, 这与我在 <code>maven</code> 中的使用习惯不一致</p>
<ol>
<li>直接复制 <code>app</code> 目录中的所有内容到根目录</li>
<li>删除 <code>app</code> 目录</li>
</ol>
<h2 id="添加依赖并测试"><a href="#添加依赖并测试" class="headerlink" title="添加依赖并测试"></a>添加依赖并测试</h2><h3 id="关于-version-catalog"><a href="#关于-version-catalog" class="headerlink" title="关于 version catalog"></a>关于 version catalog</h3><p>目前 <code>gradle</code> 在新建项目时会自动创建 <code>gradle/libs.versions.toml</code>, 这个目录就是所谓的 <code>version catalog</code>, 关于这个文件的作用可参考: </p>
<p><a href="https://doc.qzxdp.cn/gradle/8.1.1/userguide/platforms.html">gradle 用户手册 - 在项目之间共享依赖版本</a></p>
<p><a href="https://blog.csdn.net/qq_24889033/article/details/125307004">如何使用Gradle7.0+的VERSION_CATALOG</a></p>
<p>我们可以在 <code>libs.versions.toml</code> 中添加新的依赖并引用</p>
<h3 id="libs-versions-toml"><a href="#libs-versions-toml" class="headerlink" title="libs.versions.toml"></a>libs.versions.toml</h3><figure class="highlight toml"><table><tr><td class="code"><pre><span class="line"><span class="section">[versions]</span></span><br><span class="line"><span class="attr">lombok-version</span> = <span class="string">&quot;1.18.30&quot;</span></span><br><span class="line"><span class="attr">guava-version</span> = <span class="string">&quot;23.0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logback-version</span> = <span class="string">&quot;1.2.12&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">testng-version</span> = <span class="string">&quot;6.14.3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[libraries]</span></span><br><span class="line"><span class="attr">lombok</span> = &#123; module = <span class="string">&quot;org.projectlombok:lombok&quot;</span>, version.ref = <span class="string">&quot;lombok-version&quot;</span> &#125;</span><br><span class="line"><span class="attr">guava</span> = &#123; module = <span class="string">&quot;com.google.guava:guava&quot;</span>, version.ref = <span class="string">&quot;guava-version&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">logback-classic</span> = &#123;module = <span class="string">&quot;ch.qos.logback:logback-classic&quot;</span>,version.ref = <span class="string">&quot;logback-version&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">testng</span> = &#123; module = <span class="string">&quot;org.testng:testng&quot;</span>, version.ref = <span class="string">&quot;testng-version&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="section">[bundles]</span></span><br><span class="line"><span class="attr">logback</span> = [<span class="string">&quot;logback-classic&quot;</span>]</span><br></pre></td></tr></table></figure>

<h3 id="build-gradle-kts"><a href="#build-gradle-kts" class="headerlink" title="build.gradle.kts"></a>build.gradle.kts</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.gradle.api.tasks.testing.logging.TestExceptionFormat</span><br><span class="line"></span><br><span class="line">plugins &#123;</span><br><span class="line">    application</span><br><span class="line">    jacoco</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">repositories &#123;</span><br><span class="line">    maven(<span class="string">&quot;https://maven.aliyun.com/repository/public/&quot;</span>)</span><br><span class="line">    maven(<span class="string">&quot;https://maven.aliyun.com/repository/spring/&quot;</span>)</span><br><span class="line">    mavenLocal()</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    compileOnly(libs.lombok)</span><br><span class="line">    annotationProcessor(libs.lombok)</span><br><span class="line">    implementation(libs.guava)</span><br><span class="line"></span><br><span class="line">    implementation(libs.bundles.logback)</span><br><span class="line"></span><br><span class="line">    testImplementation(libs.testng)</span><br><span class="line">    testCompileOnly(libs.lombok)</span><br><span class="line">    testAnnotationProcessor(libs.lombok)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">java &#123;</span><br><span class="line">    toolchain &#123;</span><br><span class="line">        languageVersion = JavaLanguageVersion.of(<span class="number">8</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">application &#123;</span><br><span class="line">    mainClass = <span class="string">&quot;com.laolang.jx.SpringHelloApp&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;Test&gt;(<span class="string">&quot;test&quot;</span>) &#123;</span><br><span class="line">    useTestNG &#123;</span><br><span class="line">        suites(<span class="string">&quot;testng.xml&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 输出详细日志</span></span><br><span class="line">    testLogging &#123;</span><br><span class="line">        <span class="comment">// 记录日志的事件类型</span></span><br><span class="line">        events(<span class="string">&quot;FAILED&quot;</span>, <span class="string">&quot;PASSED&quot;</span>, <span class="string">&quot;SKIPPED&quot;</span>, <span class="string">&quot;STANDARD_ERROR&quot;</span>, <span class="string">&quot;STANDARD_OUT&quot;</span>, <span class="string">&quot;STARTED&quot;</span>)</span><br><span class="line">        <span class="comment">// 记录测试异常的格式</span></span><br><span class="line">        <span class="comment">// FULL: 完整显示异常</span></span><br><span class="line">        <span class="comment">// SHORT: 异常的简短显示</span></span><br><span class="line">        exceptionFormat = TestExceptionFormat.FULL</span><br><span class="line">        <span class="comment">// 是否记录标准输出和标准错误的输出</span></span><br><span class="line">        showStandardStreams = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    finalizedBy(tasks.jacocoTestReport)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * jacoco 任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;JacocoReport&gt;(<span class="string">&quot;jacocoTestReport&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">// 依赖于测试任务</span></span><br><span class="line">    dependsOn(tasks.test)</span><br><span class="line"></span><br><span class="line">    reports &#123;</span><br><span class="line">        <span class="comment">// 把不需要的报告去掉</span></span><br><span class="line">        xml.required.<span class="keyword">set</span>(<span class="literal">false</span>)</span><br><span class="line">        csv.required.<span class="keyword">set</span>(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 只启用 html 报告</span></span><br><span class="line">        html.required.<span class="keyword">set</span>(<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// jacoco 报告位置</span></span><br><span class="line">        html.outputLocation.<span class="keyword">set</span>(layout.buildDirectory.dir(<span class="string">&quot;jacocoHtml&quot;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="解决中文乱码"><a href="#解决中文乱码" class="headerlink" title="解决中文乱码"></a>解决中文乱码</h3><p>如果此时直接运行, 在 <code>jacoco</code> 报告中查看代码时会有中文乱码的问题, 可以修改 <code>gradlew.bat</code> , 避免中文乱码, 同时也建议使用 <code>gradlew.bat</code> 来运行, 即通过 <code>wrapper</code> 运行 <code>gradle</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set DEFAULT_JVM_OPTS=&quot;-Xmx64m&quot; &quot;-Xms64m&quot; &quot;-Dfile.encoding=UTF-8&quot;</span><br></pre></td></tr></table></figure>

<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p>此时直接运行 <code>gradlew.bat clean test</code> 即可, 运行之后可以查看如下两个报告</p>
<ol>
<li><code>build/jacocoHtml/index.html</code> 是 <code>jacoco</code> 的报告</li>
<li><code>build/reports/tests/test/index.html</code> 是 <code>gradle</code> 的测试报告</li>
</ol>
<p><img src="/images/2024-09-12-gradle-study/005.png"></p>
<p><img src="/images/2024-09-12-gradle-study/006.png"></p>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ol>
<li><code>lombok</code> 需要同时添加编译依赖和测试依赖</li>
<li><code>gradle</code> 默认不会输出测试日志, 需要配置</li>
<li>尽量使用 <code>wrapper</code> 运行</li>
</ol>
<h2 id="打包与发布"><a href="#打包与发布" class="headerlink" title="打包与发布"></a>打包与发布</h2><h3 id="build-gradle-kts-1"><a href="#build-gradle-kts-1" class="headerlink" title="build.gradle.kts"></a>build.gradle.kts</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar</span><br><span class="line"><span class="keyword">import</span> org.gradle.api.tasks.testing.logging.TestExceptionFormat</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加插件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">plugins &#123;</span><br><span class="line">    application</span><br><span class="line">    jacoco</span><br><span class="line">    id(<span class="string">&quot;maven-publish&quot;</span>)</span><br><span class="line">    id(<span class="string">&quot;com.github.johnrengelman.shadow&quot;</span>) version <span class="string">&quot;7.0.0&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 配置仓库</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">repositories &#123;</span><br><span class="line">    maven(<span class="string">&quot;https://maven.aliyun.com/repository/public/&quot;</span>)</span><br><span class="line">    maven(<span class="string">&quot;https://maven.aliyun.com/repository/spring/&quot;</span>)</span><br><span class="line">    mavenLocal()</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 项目坐标</span></span><br><span class="line">group = <span class="string">&quot;com.laolang.jx&quot;</span></span><br><span class="line">version = <span class="string">&quot;0.1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 声明启动类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">application &#123;</span><br><span class="line">    mainClass = <span class="string">&quot;com.laolang.jx.SpringHelloApp&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置依赖</span></span><br><span class="line">dependencies &#123;</span><br><span class="line">    compileOnly(libs.lombok)</span><br><span class="line">    annotationProcessor(libs.lombok)</span><br><span class="line">    implementation(libs.guava)</span><br><span class="line"></span><br><span class="line">    implementation(libs.bundles.logback)</span><br><span class="line"></span><br><span class="line">    testImplementation(libs.testng)</span><br><span class="line">    testCompileOnly(libs.lombok)</span><br><span class="line">    testAnnotationProcessor(libs.lombok)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 打包时生成 source.jar 和 javadoc.jar</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">configure&lt;JavaPluginExtension&gt; &#123;</span><br><span class="line">    withSourcesJar()</span><br><span class="line">    withJavadocJar()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * java 编译配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.withType&lt;JavaCompile&gt; &#123;</span><br><span class="line">    options.encoding = Charsets.UTF_8.name()</span><br><span class="line">    sourceCompatibility = JavaVersion.VERSION_1_8.toString()</span><br><span class="line">    targetCompatibility = JavaVersion.VERSION_1_8.toString()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * javadoc</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.withType&lt;Javadoc&gt; &#123;</span><br><span class="line">    options &#123;</span><br><span class="line">        encoding = Charsets.UTF_8.name()</span><br><span class="line">        charset(Charsets.UTF_8.name())</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 忽略 javadoc 报错</span></span><br><span class="line">    isFailOnError = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;Test&gt;(<span class="string">&quot;test&quot;</span>) &#123;</span><br><span class="line">    useTestNG &#123;</span><br><span class="line">        suites(<span class="string">&quot;testng.xml&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 输出详细日志</span></span><br><span class="line">    testLogging &#123;</span><br><span class="line">        <span class="comment">// 记录日志的事件类型</span></span><br><span class="line">        events(<span class="string">&quot;FAILED&quot;</span>, <span class="string">&quot;PASSED&quot;</span>, <span class="string">&quot;SKIPPED&quot;</span>, <span class="string">&quot;STANDARD_ERROR&quot;</span>, <span class="string">&quot;STANDARD_OUT&quot;</span>, <span class="string">&quot;STARTED&quot;</span>)</span><br><span class="line">        <span class="comment">// 记录测试异常的格式</span></span><br><span class="line">        <span class="comment">// FULL: 完整显示异常</span></span><br><span class="line">        <span class="comment">// SHORT: 异常的简短显示</span></span><br><span class="line">        exceptionFormat = TestExceptionFormat.FULL</span><br><span class="line">        <span class="comment">// 是否记录标准输出和标准错误的输出</span></span><br><span class="line">        showStandardStreams = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    finalizedBy(tasks.jacocoTestReport)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * jacoco 任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;JacocoReport&gt;(<span class="string">&quot;jacocoTestReport&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">// 依赖于测试任务</span></span><br><span class="line">    dependsOn(tasks.test)</span><br><span class="line"></span><br><span class="line">    reports &#123;</span><br><span class="line">        <span class="comment">// 把不需要的报告去掉</span></span><br><span class="line">        xml.required.<span class="keyword">set</span>(<span class="literal">false</span>)</span><br><span class="line">        csv.required.<span class="keyword">set</span>(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 只启用 html 报告</span></span><br><span class="line">        html.required.<span class="keyword">set</span>(<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// jacoco 报告位置</span></span><br><span class="line">        html.outputLocation.<span class="keyword">set</span>(layout.buildDirectory.dir(<span class="string">&quot;jacocoHtml&quot;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 打包可执行 jar</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;ShadowJar&gt;(<span class="string">&quot;shadowJar&quot;</span>) &#123;</span><br><span class="line">    archiveBaseName.<span class="keyword">set</span>(project.name)</span><br><span class="line">    archiveVersion.<span class="keyword">set</span>(project.version.toString())</span><br><span class="line">    archiveFileName.<span class="keyword">set</span>(project.name + <span class="string">&quot;.jar&quot;</span>)</span><br><span class="line"></span><br><span class="line">    destinationDirectory.<span class="keyword">set</span>(layout.buildDirectory.dir(<span class="string">&quot;shaded&quot;</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 发布到本地</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">publishing &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        mavenLocal()</span><br><span class="line">    &#125;</span><br><span class="line">    publications &#123;</span><br><span class="line">        create&lt;MavenPublication&gt;(<span class="string">&quot;maven&quot;</span>) &#123;</span><br><span class="line">            groupId = project.group.toString()</span><br><span class="line">            artifactId = project.name</span><br><span class="line">            version = project.version.toString()</span><br><span class="line"></span><br><span class="line">            from(components[<span class="string">&quot;java&quot;</span>])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h3><ol>
<li>执行 <code>gradlew.bat build</code>, 可在 <code>build/shaded</code> 目录下生成可执行 jar</li>
<li>执行 <code>gradlew.bat publish</code> 可以发布到本地 maven 仓库</li>
</ol>
<h3 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h3><p>如果没有在家目录的 <code>.m2/settings.xml</code> 中指定本地仓库路径, 那么默认会发布到 C 盘</p>
<h2 id="使用-bom"><a href="#使用-bom" class="headerlink" title="使用 bom"></a>使用 bom</h2><h3 id="如何引入-maven-bom"><a href="#如何引入-maven-bom" class="headerlink" title="如何引入 maven bom"></a>如何引入 maven bom</h3><p>在 <code>maven</code> 项目中经常使用如下代码</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-framework-bom<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在 <code>gradle</code> 中同样具备此功能</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line"></span><br><span class="line">    implementation(platform(&quot;org.springframework:spring-framework-bom:5.3.31&quot;))</span><br><span class="line"></span><br><span class="line">    implementation(&quot;org.springframework:spring-context&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://doc.qzxdp.cn/gradle/8.1.1/userguide/platforms.html#sub:bom_import">gradle 中文手册 导入 Maven BOM</a></p>
<p><a href="https://stackoverflow.com/questions/53619890/how-to-use-a-maven-bom-for-spring-in-gradle">stack overflow How to use a maven BOM for Spring in Gradle?</a></p>
<p><a href="https://developer.aliyun.com/article/1025091">Gradle-04：BOM管理依赖版本</a></p>
<h2 id="查看和解决依赖冲突"><a href="#查看和解决依赖冲突" class="headerlink" title="查看和解决依赖冲突"></a>查看和解决依赖冲突</h2><h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><p>例如引入如下依赖</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">implementation(&quot;com.baomidou:mybatis-plus:3.5.1&quot;)</span><br><span class="line">implementation(&quot;com.github.pagehelper:pagehelper:5.3.0&quot;)</span><br></pre></td></tr></table></figure>

<h3 id="查看方式一"><a href="#查看方式一" class="headerlink" title="查看方式一"></a>查看方式一</h3><p>运行 <code>gradle dependencies</code> 可以看到 <code>pagehelper</code> 和 <code>mybatis-plus</code> 同时引入了 <code>jsqlparser</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------</span><br><span class="line">Root project &#x27;spring-hello&#x27;</span><br><span class="line">------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">annotationProcessor - Annotation processors and their dependencies for source set &#x27;main&#x27;.</span><br><span class="line">\--- org.projectlombok:lombok:1.18.30</span><br><span class="line"></span><br><span class="line">apiElements - API elements for main. (n)</span><br><span class="line">No dependencies</span><br><span class="line"></span><br><span class="line">archives - Configuration for archive artifacts. (n)</span><br><span class="line">No dependencies</span><br><span class="line"></span><br><span class="line">compileClasspath - Compile classpath for source set &#x27;main&#x27;.</span><br><span class="line">+--- org.projectlombok:lombok:1.18.30</span><br><span class="line">+--- ch.qos.logback:logback-classic:1.2.12</span><br><span class="line">|    +--- ch.qos.logback:logback-core:1.2.12</span><br><span class="line">|    \--- org.slf4j:slf4j-api:1.7.32</span><br><span class="line">+--- com.google.guava:guava:23.0</span><br><span class="line">|    +--- com.google.code.findbugs:jsr305:1.3.9</span><br><span class="line">|    +--- com.google.errorprone:error_prone_annotations:2.0.18</span><br><span class="line">|    +--- com.google.j2objc:j2objc-annotations:1.1</span><br><span class="line">|    \--- org.codehaus.mojo:animal-sniffer-annotations:1.14</span><br><span class="line">+--- com.baomidou:mybatis-plus:3.5.1</span><br><span class="line">|    \--- com.baomidou:mybatis-plus-extension:3.5.1</span><br><span class="line">|         +--- com.baomidou:mybatis-plus-core:3.5.1</span><br><span class="line">|         |    +--- com.baomidou:mybatis-plus-annotation:3.5.1</span><br><span class="line">|         |    +--- com.github.jsqlparser:jsqlparser:4.3</span><br><span class="line">|         |    \--- org.mybatis:mybatis:3.5.9</span><br><span class="line">|         \--- org.mybatis:mybatis-spring:2.0.6</span><br><span class="line">\--- com.github.pagehelper:pagehelper:5.3.0</span><br><span class="line">     \--- com.github.jsqlparser:jsqlparser:4.2 -&gt; 4.3</span><br><span class="line"></span><br><span class="line">compileOnly - Compile only dependencies for source set &#x27;main&#x27;. (n)</span><br><span class="line">\--- org.projectlombok:lombok:1.18.30 (n)</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="查看方式二"><a href="#查看方式二" class="headerlink" title="查看方式二"></a>查看方式二</h3><p>也可以运行命令 <code>gradle dependencyInsight --dependency jsqlparser --configuration compileClasspath</code> 查看</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\github\ghost-hello-project\gradle-study\spring-hello&gt;gradle dependencyInsight --dependency jsqlparser --configuration compileClasspath</span><br><span class="line"></span><br><span class="line">&gt; Task :dependencyInsight</span><br><span class="line">com.github.jsqlparser:jsqlparser:4.3</span><br><span class="line">  Variant compile:</span><br><span class="line">    | Attribute Name                 | Provided | Requested    |</span><br><span class="line">    |--------------------------------|----------|--------------|</span><br><span class="line">    | org.gradle.status              | release  |              |</span><br><span class="line">    | org.gradle.category            | library  | library      |</span><br><span class="line">    | org.gradle.libraryelements     | jar      | classes      |</span><br><span class="line">    | org.gradle.usage               | java-api | java-api     |</span><br><span class="line">    | org.gradle.dependency.bundling |          | external     |</span><br><span class="line">    | org.gradle.jvm.environment     |          | standard-jvm |</span><br><span class="line">    | org.gradle.jvm.version         |          | 8            |</span><br><span class="line">   Selection reasons:</span><br><span class="line">      - By conflict resolution: between versions 4.3 and 4.2</span><br><span class="line"></span><br><span class="line">com.github.jsqlparser:jsqlparser:4.3</span><br><span class="line">\--- com.baomidou:mybatis-plus-core:3.5.1</span><br><span class="line">     \--- com.baomidou:mybatis-plus-extension:3.5.1</span><br><span class="line">          \--- com.baomidou:mybatis-plus:3.5.1</span><br><span class="line">               \--- compileClasspath</span><br><span class="line"></span><br><span class="line">com.github.jsqlparser:jsqlparser:4.2 -&gt; 4.3</span><br><span class="line">\--- com.github.pagehelper:pagehelper:5.3.0</span><br><span class="line">     \--- compileClasspath</span><br><span class="line"></span><br><span class="line">A web-based, searchable dependency report is available by adding the --scan option.</span><br><span class="line"></span><br><span class="line">BUILD SUCCESSFUL in 1s</span><br><span class="line">1 actionable task: 1 executed</span><br><span class="line">E:\github\ghost-hello-project\gradle-study\spring-hello&gt;</span><br></pre></td></tr></table></figure>

<h3 id="排除依赖"><a href="#排除依赖" class="headerlink" title="排除依赖"></a>排除依赖</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">implementation(&quot;com.baomidou:mybatis-plus:3.5.1&quot;)</span><br><span class="line">implementation(&quot;com.github.pagehelper:pagehelper:5.3.0&quot;) &#123;</span><br><span class="line">    exclude(group = &quot;com.github.jsqlparser&quot;, module = &quot;jsqlparser&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>运行命令 <code>gradle dependencies --configuration compileClasspath</code> 再次查看</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\github\ghost-hello-project\gradle-study\spring-hello&gt;gradle dependencies --configuration compileClasspath</span><br><span class="line"></span><br><span class="line">&gt; Task :dependencies</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------</span><br><span class="line">Root project &#x27;spring-hello&#x27;</span><br><span class="line">------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">compileClasspath - Compile classpath for source set &#x27;main&#x27;.</span><br><span class="line">+--- org.projectlombok:lombok:1.18.30</span><br><span class="line">+--- ch.qos.logback:logback-classic:1.2.12</span><br><span class="line">|    +--- ch.qos.logback:logback-core:1.2.12</span><br><span class="line">|    \--- org.slf4j:slf4j-api:1.7.32</span><br><span class="line">+--- com.google.guava:guava:23.0</span><br><span class="line">|    +--- com.google.code.findbugs:jsr305:1.3.9</span><br><span class="line">|    +--- com.google.errorprone:error_prone_annotations:2.0.18</span><br><span class="line">|    +--- com.google.j2objc:j2objc-annotations:1.1</span><br><span class="line">|    \--- org.codehaus.mojo:animal-sniffer-annotations:1.14</span><br><span class="line">+--- com.baomidou:mybatis-plus:3.5.1</span><br><span class="line">|    \--- com.baomidou:mybatis-plus-extension:3.5.1</span><br><span class="line">|         +--- com.baomidou:mybatis-plus-core:3.5.1</span><br><span class="line">|         |    +--- com.baomidou:mybatis-plus-annotation:3.5.1</span><br><span class="line">|         |    +--- com.github.jsqlparser:jsqlparser:4.3</span><br><span class="line">|         |    \--- org.mybatis:mybatis:3.5.9</span><br><span class="line">|         \--- org.mybatis:mybatis-spring:2.0.6</span><br><span class="line">\--- com.github.pagehelper:pagehelper:5.3.0</span><br><span class="line"></span><br><span class="line">A web-based, searchable dependency report is available by adding the --scan option.</span><br><span class="line"></span><br><span class="line">BUILD SUCCESSFUL in 1s</span><br><span class="line">1 actionable task: 1 executed</span><br><span class="line">E:\github\ghost-hello-project\gradle-study\spring-hello&gt;</span><br></pre></td></tr></table></figure>

<h3 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h3><p><a href="https://doc.qzxdp.cn/gradle/8.1.1/userguide/viewing_debugging_dependencies.html">gradle 中文文档 查看和调试依赖项</a></p>
<p><a href="https://blog.csdn.net/Jason847/article/details/76849680">使用Gradle命令查看项目中库的依赖关系</a></p>
<h2 id="查看任务依赖关系"><a href="#查看任务依赖关系" class="headerlink" title="查看任务依赖关系"></a>查看任务依赖关系</h2><h3 id="引入插件"><a href="#引入插件" class="headerlink" title="引入插件"></a>引入插件</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    application</span><br><span class="line">    jacoco</span><br><span class="line">    id(<span class="string">&quot;com.github.johnrengelman.shadow&quot;</span>) version <span class="string">&quot;7.0.0&quot;</span></span><br><span class="line">    id(<span class="string">&quot;com.dorongold.task-tree&quot;</span>) version <span class="string">&quot;3.0.0&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h3><p>执行 <code>gradle &lt;task 1&gt;...&lt;task N&gt; taskTree</code> 即可查看任务依赖关系, 例如 <code>gradle build taskTree</code> 输出如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\github\ghost-hello-project\gradle-study\spring-hello&gt;gradle build taskTree</span><br><span class="line"></span><br><span class="line">&gt; Task :taskTree</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------</span><br><span class="line">Root project &#x27;spring-hello&#x27;</span><br><span class="line">------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">:build</span><br><span class="line">+--- :assemble</span><br><span class="line">|    +--- :distTar</span><br><span class="line">|    |    +--- :jar</span><br><span class="line">|    |    |    \--- :classes</span><br><span class="line">|    |    |         +--- :compileJava</span><br><span class="line">|    |    |         \--- :processResources</span><br><span class="line">|    |    \--- :startScripts</span><br><span class="line">|    |         \--- :jar *</span><br><span class="line">|    +--- :distZip</span><br><span class="line">|    |    +--- :jar *</span><br><span class="line">|    |    \--- :startScripts *</span><br><span class="line">|    +--- :jar *</span><br><span class="line">|    +--- :shadowDistTar</span><br><span class="line">|    |    +--- :shadowJar</span><br><span class="line">|    |    |    \--- :classes *</span><br><span class="line">|    |    \--- :startShadowScripts</span><br><span class="line">|    |         \--- :shadowJar *</span><br><span class="line">|    \--- :shadowDistZip</span><br><span class="line">|         +--- :shadowJar *</span><br><span class="line">|         \--- :startShadowScripts *</span><br><span class="line">\--- :check</span><br><span class="line">     \--- :test</span><br><span class="line">          +--- :classes *</span><br><span class="line">          \--- :testClasses</span><br><span class="line">               +--- :compileTestJava</span><br><span class="line">               |    \--- :classes *</span><br><span class="line">               \--- :processTestResources</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(*) - subtree omitted (printed previously)</span><br><span class="line">Add --repeat to allow printing a subtree of the same task more than once.</span><br><span class="line"></span><br><span class="line">To see task dependency tree for a specific task, run gradle &lt;project-path&gt;:&lt;task&gt; &lt;project-path&gt;:taskTree [--depth &lt;depth&gt;] [--with-inputs] [--with-outputs] [--with-description] [--repeat]</span><br><span class="line">Executions of all tasks except for taskTree are skipped. They are used for building the task graph only.</span><br><span class="line">For example, try running gradle :build :taskTree</span><br><span class="line"></span><br><span class="line">BUILD SUCCESSFUL in 822ms</span><br><span class="line">1 actionable task: 1 executed</span><br><span class="line">E:\github\ghost-hello-project\gradle-study\spring-hello&gt;</span><br></pre></td></tr></table></figure>

<h3 id="参考-2"><a href="#参考-2" class="headerlink" title="参考"></a>参考</h3><p><a href="https://github.com/dorongold/gradle-task-tree">gradle-task-tree github</a></p>
<h2 id="profile"><a href="#profile" class="headerlink" title="profile"></a>profile</h2><h3 id="添加-buildSrc"><a href="#添加-buildSrc" class="headerlink" title="添加 buildSrc"></a>添加 buildSrc</h3><p>关于 <code>buildSrc</code> 可参考 <a href="https://gradle.github.net.cn/current/userguide/sharing_build_logic_between_subprojects.html">在子项目之间共享构建逻辑</a></p>
<p><code>buildSrc/build.gradle.kts</code> 内容如下</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    `kotlin-dsl`</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">repositories &#123;</span><br><span class="line">    maven &#123;</span><br><span class="line">        setUrl(<span class="string">&quot;https://maven.aliyun.com/repository/public/&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    maven &#123;</span><br><span class="line">        setUrl(<span class="string">&quot;https://maven.aliyun.com/repository/spring/&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    gradlePluginPortal()</span><br><span class="line">    mavenLocal()</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在 <code>buildSrc</code> 中添加一个单例类</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.gradle</span><br><span class="line"></span><br><span class="line"><span class="keyword">object</span> GradleUtil &#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">getProfile</span><span class="params">(defaultProfile: <span class="type">String</span>)</span></span>: String &#123;</span><br><span class="line">        <span class="keyword">var</span> profile: String? = System.getProperty(<span class="string">&quot;profile&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> (profile.isNullOrBlank()) &#123;</span><br><span class="line">            profile = defaultProfile</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> profile</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="修改目录结构"><a href="#修改目录结构" class="headerlink" title="修改目录结构"></a>修改目录结构</h3><p>删除 <code>src/main/resources</code> 中的所有文件, 并新建 <code>src/main/resources/dev</code> 和 <code>src/main/resources/test</code>. 将配置文件放在对应的目录, 例如 <code>src/main/resources/dev/spring-context.xml</code> 内容如下</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span> <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.laolang.jx&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.laolang.jx.bean.HelloService&quot;</span> <span class="attr">p:msg</span>=<span class="string">&quot;dev msg&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="修改根目录-build-gradle-kts"><a href="#修改根目录-build-gradle-kts" class="headerlink" title="修改根目录 build.gradle.kts"></a>修改根目录 build.gradle.kts</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.gradle.GradleUtil</span><br><span class="line"><span class="keyword">import</span> org.gradle.api.tasks.testing.logging.TestExceptionFormat</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加插件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">plugins &#123;</span><br><span class="line">    application</span><br><span class="line">    jacoco</span><br><span class="line">    id(<span class="string">&quot;maven-publish&quot;</span>)</span><br><span class="line">    id(<span class="string">&quot;com.github.johnrengelman.shadow&quot;</span>) version <span class="string">&quot;7.0.0&quot;</span></span><br><span class="line">    id(<span class="string">&quot;com.dorongold.task-tree&quot;</span>) version <span class="string">&quot;3.0.0&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 配置仓库</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">repositories &#123;</span><br><span class="line">    maven(<span class="string">&quot;https://maven.aliyun.com/repository/public/&quot;</span>)</span><br><span class="line">    maven(<span class="string">&quot;https://maven.aliyun.com/repository/spring/&quot;</span>)</span><br><span class="line">    mavenLocal()</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 项目坐标</span></span><br><span class="line">group = <span class="string">&quot;com.laolang.jx&quot;</span></span><br><span class="line">version = <span class="string">&quot;0.1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 声明启动类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">application &#123;</span><br><span class="line">    mainClass = <span class="string">&quot;com.laolang.jx.SpringHelloApp&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// profile</span></span><br><span class="line"><span class="keyword">val</span> profile: String = GradleUtil.getProfile(<span class="string">&quot;dev&quot;</span>)</span><br><span class="line"><span class="comment">// 资源目录</span></span><br><span class="line"><span class="keyword">val</span> resourceDir = <span class="string">&quot;src/main/resources/<span class="variable">$profile</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置资源目录</span></span><br><span class="line">sourceSets &#123;</span><br><span class="line">    main &#123;</span><br><span class="line">        resources &#123;</span><br><span class="line">            srcDir(resourceDir)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置依赖</span></span><br><span class="line">dependencies &#123;</span><br><span class="line"></span><br><span class="line">    implementation(platform(<span class="string">&quot;org.springframework:spring-framework-bom:5.3.31&quot;</span>))</span><br><span class="line"></span><br><span class="line">    implementation(<span class="string">&quot;org.springframework:spring-context&quot;</span>)</span><br><span class="line"></span><br><span class="line">    compileOnly(libs.lombok)</span><br><span class="line">    annotationProcessor(libs.lombok)</span><br><span class="line">    implementation(libs.guava)</span><br><span class="line"></span><br><span class="line">    implementation(libs.bundles.logback)</span><br><span class="line"></span><br><span class="line">    testImplementation(libs.testng)</span><br><span class="line">    testCompileOnly(libs.lombok)</span><br><span class="line">    testAnnotationProcessor(libs.lombok)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 打包时生成 source.jar 和 javadoc.jar</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">configure&lt;JavaPluginExtension&gt; &#123;</span><br><span class="line">    withSourcesJar()</span><br><span class="line">    withJavadocJar()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * java 编译配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.withType&lt;JavaCompile&gt; &#123;</span><br><span class="line">    options.encoding = Charsets.UTF_8.name()</span><br><span class="line">    sourceCompatibility = JavaVersion.VERSION_1_8.toString()</span><br><span class="line">    targetCompatibility = JavaVersion.VERSION_1_8.toString()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 排除 dev 目录和 test 目录</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.withType&lt;ProcessResources&gt; &#123;</span><br><span class="line">    exclude(<span class="string">&quot;dev/**&quot;</span>)</span><br><span class="line">    exclude(<span class="string">&quot;test/**&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * javadoc</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.withType&lt;Javadoc&gt; &#123;</span><br><span class="line">    options &#123;</span><br><span class="line">        encoding = Charsets.UTF_8.name()</span><br><span class="line">        charset(Charsets.UTF_8.name())</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 忽略 javadoc 报错</span></span><br><span class="line">    isFailOnError = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;Test&gt;(<span class="string">&quot;test&quot;</span>) &#123;</span><br><span class="line">    useTestNG &#123;</span><br><span class="line">        suites(<span class="string">&quot;testng.xml&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 输出详细日志</span></span><br><span class="line">    testLogging &#123;</span><br><span class="line">        <span class="comment">// 记录日志的事件类型</span></span><br><span class="line">        events(<span class="string">&quot;FAILED&quot;</span>, <span class="string">&quot;PASSED&quot;</span>, <span class="string">&quot;SKIPPED&quot;</span>, <span class="string">&quot;STANDARD_ERROR&quot;</span>, <span class="string">&quot;STANDARD_OUT&quot;</span>, <span class="string">&quot;STARTED&quot;</span>)</span><br><span class="line">        <span class="comment">// 记录测试异常的格式</span></span><br><span class="line">        <span class="comment">// FULL: 完整显示异常</span></span><br><span class="line">        <span class="comment">// SHORT: 异常的简短显示</span></span><br><span class="line">        exceptionFormat = TestExceptionFormat.FULL</span><br><span class="line">        <span class="comment">// 是否记录标准输出和标准错误的输出</span></span><br><span class="line">        showStandardStreams = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    finalizedBy(tasks.jacocoTestReport)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * jacoco 任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;JacocoReport&gt;(<span class="string">&quot;jacocoTestReport&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">// 依赖于测试任务</span></span><br><span class="line">    dependsOn(tasks.test)</span><br><span class="line"></span><br><span class="line">    reports &#123;</span><br><span class="line">        <span class="comment">// 把不需要的报告去掉</span></span><br><span class="line">        xml.required.<span class="keyword">set</span>(<span class="literal">false</span>)</span><br><span class="line">        csv.required.<span class="keyword">set</span>(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 只启用 html 报告</span></span><br><span class="line">        html.required.<span class="keyword">set</span>(<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// jacoco 报告位置</span></span><br><span class="line">        html.outputLocation.<span class="keyword">set</span>(layout.buildDirectory.dir(<span class="string">&quot;jacocoHtml&quot;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 打包可执行 jar</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;ShadowJar&gt;(<span class="string">&quot;shadowJar&quot;</span>) &#123;</span><br><span class="line">    archiveBaseName.<span class="keyword">set</span>(project.name)</span><br><span class="line">    archiveVersion.<span class="keyword">set</span>(project.version.toString())</span><br><span class="line">    archiveFileName.<span class="keyword">set</span>(project.name + <span class="string">&quot;.jar&quot;</span>)</span><br><span class="line"></span><br><span class="line">    destinationDirectory.<span class="keyword">set</span>(layout.buildDirectory.dir(<span class="string">&quot;shaded&quot;</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 发布到本地</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">publishing &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        mavenLocal()</span><br><span class="line">    &#125;</span><br><span class="line">    publications &#123;</span><br><span class="line">        create&lt;MavenPublication&gt;(<span class="string">&quot;maven&quot;</span>) &#123;</span><br><span class="line">            groupId = project.group.toString()</span><br><span class="line">            artifactId = project.name</span><br><span class="line">            version = project.version.toString()</span><br><span class="line"></span><br><span class="line">            from(components[<span class="string">&quot;java&quot;</span>])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p><code>gradlew.bat -Dprofile=test run</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\github\gradle-study\spring-hello&gt;gradlew.bat -Dprofile=test run</span><br><span class="line"></span><br><span class="line">&gt; Configure project :</span><br><span class="line">profile:test</span><br><span class="line"></span><br><span class="line">&gt; Task :run</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">2024-09-11 09:08:51.229 [main] INFO  com.laolang.jx.SpringHelloApp            - bean.msg:test msg</span><br><span class="line"></span><br><span class="line">Deprecated Gradle features were used in this build, making it incompatible with Gradle 9.0.</span><br><span class="line"></span><br><span class="line">You can use &#x27;--warning-mode all&#x27; to show the individual deprecation warnings and determine if they come from your own scripts or plugins.</span><br><span class="line"></span><br><span class="line">For more on this, please refer to https://docs.gradle.org/8.10/userguide/command_line_interface.html#sec:command_line_warnings in the Gradle documentation.</span><br><span class="line"></span><br><span class="line">BUILD SUCCESSFUL in 2s</span><br><span class="line">7 actionable tasks: 2 executed, 5 up-to-date</span><br><span class="line">E:\github\gradle-study\spring-hello&gt;</span><br></pre></td></tr></table></figure>

<p><code>gradlew.bat -Dprofile=dev run</code> 或者 <code>gradlew.bat run</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\github\gradle-study\spring-hello&gt;gradlew.bat run</span><br><span class="line"></span><br><span class="line">&gt; Configure project :</span><br><span class="line">profile:dev</span><br><span class="line"></span><br><span class="line">&gt; Task :run</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">2024-09-11 09:10:03.309 [main] INFO  com.laolang.jx.SpringHelloApp            - bean.msg:dev msg</span><br><span class="line"></span><br><span class="line">Deprecated Gradle features were used in this build, making it incompatible with Gradle 9.0.</span><br><span class="line"></span><br><span class="line">You can use &#x27;--warning-mode all&#x27; to show the individual deprecation warnings and determine if they come from your own scripts or plugins.</span><br><span class="line"></span><br><span class="line">For more on this, please refer to https://docs.gradle.org/8.10/userguide/command_line_interface.html#sec:command_line_warnings in the Gradle documentation.</span><br><span class="line"></span><br><span class="line">BUILD SUCCESSFUL in 1s</span><br><span class="line">7 actionable tasks: 2 executed, 5 up-to-date</span><br><span class="line">E:\github\gradle-study\spring-hello&gt;</span><br></pre></td></tr></table></figure>


<h3 id="参考-3"><a href="#参考-3" class="headerlink" title="参考"></a>参考</h3><p><a href="https://gradle.github.net.cn/current/userguide/build_environment.html#sec:gradle_system_properties">gradle 中文手册 · 配置构建环境</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1798260">Gradle构建时像Maven那样根据profile环境打包</a></p>
<p><a href="https://www.cnblogs.com/yjmyzz/p/gradle-profile.html">gradle项目中profile的实现</a></p>
<p><a href="https://blog.gradle.org/maven-pom-profiles">Gradle’s Support for Maven POM Profiles</a></p>
<h2 id="单模块项目总结与代码地址"><a href="#单模块项目总结与代码地址" class="headerlink" title="单模块项目总结与代码地址"></a>单模块项目总结与代码地址</h2><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol>
<li>遇事不决, google</li>
<li>多看官方文档</li>
<li>理论与实践相结合</li>
<li>profile 的实现有很多种方式, 我只是选了其中一种</li>
</ol>
<h3 id="代码地址"><a href="#代码地址" class="headerlink" title="代码地址"></a>代码地址</h3><p><a href="https://github.com/laolang2016/gradle-study/tree/master/spring-hello">https://github.com/laolang2016/gradle-study/tree/master/spring-hello</a></p>
<h1 id="spring-mvc-schema-项目示例"><a href="#spring-mvc-schema-项目示例" class="headerlink" title="spring mvc schema 项目示例"></a>spring mvc schema 项目示例</h1><h2 id="代码地址-1"><a href="#代码地址-1" class="headerlink" title="代码地址"></a>代码地址</h2><p><a href="https://github.com/laolang2016/gradle-study/tree/master/jx-schema">https://github.com/laolang2016/gradle-study/tree/master/jx-schema</a></p>
<h2 id="gradle-配置说明"><a href="#gradle-配置说明" class="headerlink" title="gradle 配置说明"></a>gradle 配置说明</h2><h3 id="libs-version-toml"><a href="#libs-version-toml" class="headerlink" title="libs.version.toml"></a>libs.version.toml</h3><div class="note info simple"><p>使用 bom 之后, 这个文件就不需要写 <code>spring</code> 依赖的版本号了</p>
</div>

<figure class="highlight toml"><table><tr><td class="code"><pre><span class="line"><span class="section">[versions]</span></span><br><span class="line"><span class="attr">javax-servlet-api-version</span> = <span class="string">&quot;3.1.0&quot;</span></span><br><span class="line"><span class="attr">jackson-version</span> = <span class="string">&quot;2.13.5&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logback-version</span> = <span class="string">&quot;1.2.12&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">lombok-version</span> = <span class="string">&quot;1.18.30&quot;</span></span><br><span class="line"><span class="attr">hutool-version</span> = <span class="string">&quot;5.8.11&quot;</span></span><br><span class="line"><span class="attr">vavr-version</span> = <span class="string">&quot;0.10.4&quot;</span></span><br><span class="line"><span class="attr">mapstruct-version</span> = <span class="string">&quot;1.4.2.Final&quot;</span></span><br><span class="line"><span class="attr">guava-version</span> = <span class="string">&quot;23.0&quot;</span></span><br><span class="line"><span class="attr">commons-lang3-version</span> = <span class="string">&quot;3.12.0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">testng-version</span> = <span class="string">&quot;6.14.3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[libraries]</span></span><br><span class="line"><span class="attr">javax-servlet-api</span> = &#123; module = <span class="string">&quot;javax.servlet:javax.servlet-api&quot;</span>, version.ref = <span class="string">&quot;javax-servlet-api-version&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">spring-context</span> = &#123; module = <span class="string">&quot;org.springframework:spring-context&quot;</span> &#125;</span><br><span class="line"><span class="attr">spring-context-support</span> = &#123; module = <span class="string">&quot;org.springframework:spring-context-support&quot;</span> &#125;</span><br><span class="line"><span class="attr">spring-webmvc</span> = &#123; module = <span class="string">&quot;org.springframework:spring-webmvc&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">jackson-databind</span> = &#123; module = <span class="string">&quot;com.fasterxml.jackson.core:jackson-databind&quot;</span>, version.ref = <span class="string">&quot;jackson-version&quot;</span> &#125;</span><br><span class="line"><span class="attr">jackson-datatype-jdk8</span> = &#123; module = <span class="string">&quot;com.fasterxml.jackson.datatype:jackson-datatype-jdk8&quot;</span>, version.ref = <span class="string">&quot;jackson-version&quot;</span> &#125;</span><br><span class="line"><span class="attr">jackson-datatype-jsr310</span> = &#123; module = <span class="string">&quot;com.fasterxml.jackson.datatype:jackson-datatype-jsr310&quot;</span>, version.ref = <span class="string">&quot;jackson-version&quot;</span> &#125;</span><br><span class="line"><span class="attr">jackson-module-parameter-names</span> = &#123; module = <span class="string">&quot;com.fasterxml.jackson.module:jackson-module-parameter-names&quot;</span>, version.ref = <span class="string">&quot;jackson-version&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">logback-classic</span> = &#123; module = <span class="string">&quot;ch.qos.logback:logback-classic&quot;</span>, version.ref = <span class="string">&quot;logback-version&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">lombok</span> = &#123; module = <span class="string">&quot;org.projectlombok:lombok&quot;</span>, version.ref = <span class="string">&quot;lombok-version&quot;</span> &#125;</span><br><span class="line"><span class="attr">hutool-all</span> = &#123; module = <span class="string">&quot;cn.hutool:hutool-all&quot;</span>, version.ref = <span class="string">&quot;hutool-version&quot;</span> &#125;</span><br><span class="line"><span class="attr">vavr</span> = &#123; module = <span class="string">&quot;io.vavr:vavr&quot;</span>, version.ref = <span class="string">&quot;vavr-version&quot;</span> &#125;</span><br><span class="line"><span class="attr">mapstruct-mapstruct</span> = &#123; module = <span class="string">&quot;org.mapstruct:mapstruct&quot;</span>, version.ref = <span class="string">&quot;mapstruct-version&quot;</span> &#125;</span><br><span class="line"><span class="attr">mapstruct-jdk8</span> = &#123; module = <span class="string">&quot;org.mapstruct:mapstruct-jdk8&quot;</span>, version.ref = <span class="string">&quot;mapstruct-version&quot;</span> &#125;</span><br><span class="line"><span class="attr">mapstruct-processor</span> = &#123; module = <span class="string">&quot;org.mapstruct:mapstruct-processor&quot;</span>, version.ref = <span class="string">&quot;mapstruct-version&quot;</span> &#125;</span><br><span class="line"><span class="attr">guava</span> = &#123; module = <span class="string">&quot;com.google.guava:guava&quot;</span>, version.ref = <span class="string">&quot;guava-version&quot;</span> &#125;</span><br><span class="line"><span class="attr">commons-lang3</span> = &#123; module = <span class="string">&quot;org.apache.commons:commons-lang3&quot;</span>, version.ref = <span class="string">&quot;commons-lang3-version&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">testng</span> = &#123; module = <span class="string">&quot;org.testng:testng&quot;</span>, version.ref = <span class="string">&quot;testng-version&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="section">[bundles]</span></span><br><span class="line"><span class="attr">spring</span> = [<span class="string">&quot;spring-context&quot;</span>, <span class="string">&quot;spring-context-support&quot;</span>, <span class="string">&quot;spring-webmvc&quot;</span>]</span><br><span class="line"><span class="attr">jackson</span> = [<span class="string">&quot;jackson-databind&quot;</span>, <span class="string">&quot;jackson-datatype-jdk8&quot;</span>, <span class="string">&quot;jackson-datatype-jsr310&quot;</span>, <span class="string">&quot;jackson-module-parameter-names&quot;</span>]</span><br><span class="line"><span class="attr">mapstruct</span> = [<span class="string">&quot;mapstruct-mapstruct&quot;</span>, <span class="string">&quot;mapstruct-jdk8&quot;</span>, <span class="string">&quot;mapstruct-processor&quot;</span>]</span><br><span class="line"><span class="attr">logback</span> = [<span class="string">&quot;logback-classic&quot;</span>]</span><br></pre></td></tr></table></figure>

<h3 id="build-gradle-kts-2"><a href="#build-gradle-kts-2" class="headerlink" title="build.gradle.kts"></a>build.gradle.kts</h3><p><code>maven</code> 有 <code>jetty</code> 插件, <code>gradle</code> 则有 <code>gretty</code>, 运行方式都一样, 但是 <code>gretty</code> debug 需要使用远程调试, 目前还没找到 idea 直接 debug 的方式</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.gradle.api.tasks.testing.logging.TestExceptionFormat</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加插件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">plugins &#123;</span><br><span class="line">    war</span><br><span class="line">    id(<span class="string">&quot;org.gretty&quot;</span>) version <span class="string">&quot;3.0.9&quot;</span></span><br><span class="line">    jacoco</span><br><span class="line">    id(<span class="string">&quot;maven-publish&quot;</span>)</span><br><span class="line">    id(<span class="string">&quot;com.dorongold.task-tree&quot;</span>) version <span class="string">&quot;3.0.0&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 配置仓库</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">repositories &#123;</span><br><span class="line">    maven(<span class="string">&quot;https://maven.aliyun.com/repository/public/&quot;</span>)</span><br><span class="line">    maven(<span class="string">&quot;https://maven.aliyun.com/repository/spring/&quot;</span>)</span><br><span class="line">    mavenLocal()</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 项目坐标</span></span><br><span class="line">group = <span class="string">&quot;com.laolang.jx&quot;</span></span><br><span class="line">version = <span class="string">&quot;0.1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置依赖</span></span><br><span class="line">dependencies &#123;</span><br><span class="line"></span><br><span class="line">    implementation(platform(<span class="string">&quot;org.springframework:spring-framework-bom:5.3.31&quot;</span>))</span><br><span class="line"></span><br><span class="line">    implementation(libs.javax.servlet.api)</span><br><span class="line">    implementation(libs.bundles.spring)</span><br><span class="line">    implementation(libs.bundles.jackson)</span><br><span class="line"></span><br><span class="line">    implementation(libs.bundles.logback)</span><br><span class="line"></span><br><span class="line">    compileOnly(libs.lombok)</span><br><span class="line">    annotationProcessor(libs.lombok)</span><br><span class="line">    implementation(libs.hutool.all)</span><br><span class="line">    implementation(libs.vavr)</span><br><span class="line">    implementation(libs.bundles.mapstruct)</span><br><span class="line">    implementation(libs.guava)</span><br><span class="line">    implementation(libs.commons.lang3)</span><br><span class="line"></span><br><span class="line">    testImplementation(libs.testng)</span><br><span class="line">    testCompileOnly(libs.lombok)</span><br><span class="line">    testAnnotationProcessor(libs.lombok)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 打包时生成 source.jar 和 javadoc.jar</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">configure&lt;JavaPluginExtension&gt; &#123;</span><br><span class="line">    withSourcesJar()</span><br><span class="line">    withJavadocJar()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * java 编译配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.withType&lt;JavaCompile&gt; &#123;</span><br><span class="line">    options.encoding = Charsets.UTF_8.name()</span><br><span class="line">    sourceCompatibility = JavaVersion.VERSION_1_8.toString()</span><br><span class="line">    targetCompatibility = JavaVersion.VERSION_1_8.toString()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * javadoc</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.withType&lt;Javadoc&gt; &#123;</span><br><span class="line">    options &#123;</span><br><span class="line">        encoding = Charsets.UTF_8.name()</span><br><span class="line">        charset(Charsets.UTF_8.name())</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 忽略 javadoc 报错</span></span><br><span class="line">    isFailOnError = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;Test&gt;(<span class="string">&quot;test&quot;</span>) &#123;</span><br><span class="line">    useTestNG &#123;</span><br><span class="line">        suites(<span class="string">&quot;testng.xml&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 输出详细日志</span></span><br><span class="line">    testLogging &#123;</span><br><span class="line">        <span class="comment">// 记录日志的事件类型</span></span><br><span class="line">        events(<span class="string">&quot;FAILED&quot;</span>, <span class="string">&quot;PASSED&quot;</span>, <span class="string">&quot;SKIPPED&quot;</span>, <span class="string">&quot;STANDARD_ERROR&quot;</span>, <span class="string">&quot;STANDARD_OUT&quot;</span>, <span class="string">&quot;STARTED&quot;</span>)</span><br><span class="line">        <span class="comment">// 记录测试异常的格式</span></span><br><span class="line">        <span class="comment">// FULL: 完整显示异常</span></span><br><span class="line">        <span class="comment">// SHORT: 异常的简短显示</span></span><br><span class="line">        exceptionFormat = TestExceptionFormat.FULL</span><br><span class="line">        <span class="comment">// 是否记录标准输出和标准错误的输出</span></span><br><span class="line">        showStandardStreams = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    finalizedBy(tasks.jacocoTestReport)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * war 任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.withType&lt;War&gt;&#123;</span><br><span class="line">    archiveBaseName = project.name</span><br><span class="line">    version = project.version</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * jacoco 任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;JacocoReport&gt;(<span class="string">&quot;jacocoTestReport&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">// 依赖于测试任务</span></span><br><span class="line">    dependsOn(tasks.test)</span><br><span class="line"></span><br><span class="line">    reports &#123;</span><br><span class="line">        <span class="comment">// 把不需要的报告去掉</span></span><br><span class="line">        xml.required.<span class="keyword">set</span>(<span class="literal">false</span>)</span><br><span class="line">        csv.required.<span class="keyword">set</span>(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 只启用 html 报告</span></span><br><span class="line">        html.required.<span class="keyword">set</span>(<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// jacoco 报告位置</span></span><br><span class="line">        html.outputLocation.<span class="keyword">set</span>(layout.buildDirectory.dir(<span class="string">&quot;jacocoHtml&quot;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 发布到本地</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">publishing &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        mavenLocal()</span><br><span class="line">    &#125;</span><br><span class="line">    publications &#123;</span><br><span class="line">        create&lt;MavenPublication&gt;(<span class="string">&quot;maven&quot;</span>) &#123;</span><br><span class="line">            groupId = project.group.toString()</span><br><span class="line">            artifactId = project.name</span><br><span class="line">            version = project.version.toString()</span><br><span class="line"></span><br><span class="line">            from(components[<span class="string">&quot;java&quot;</span>])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * gretty</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">gretty&#123;</span><br><span class="line">    <span class="comment">// 服务端口号</span></span><br><span class="line">    httpPort = <span class="number">8096</span></span><br><span class="line">    <span class="comment">// 服务根路径</span></span><br><span class="line">    contextPath = <span class="string">&#x27;/&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 远程调试端口号</span></span><br><span class="line">    debugPort = <span class="number">8098</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>直接执行 <code>gretty</code> 的 <code>appRun</code> 即可</p>
<p><img src="/images/2024-09-12-gradle-study/007.png"></p>
<h2 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h2><p>首先执行 <code>gretty</code> 的 <code>appRunDebug</code></p>
<p><img src="/images/2024-09-12-gradle-study/008.png"></p>
<p>然后配置 remote debug 并启动</p>
<p><img src="/images/2024-09-12-gradle-study/009.png"></p>
<p>然后切换到 <code>appRunDebug</code>, 稍等一两秒就会看到项目成功启动了, 此时断点已经可以正常使用</p>
<p><img src="/images/2024-09-12-gradle-study/010.png"></p>
<h2 id="参考-4"><a href="#参考-4" class="headerlink" title="参考"></a>参考</h2><p><a href="https://doc.qzxdp.cn/gradle/8.1.1/userguide/war_plugin.html">gradle 中文文档 war 插件</a></p>
<p>gretty 官网: <a href="https://gretty-gradle-plugin.github.io/gretty-doc/">https://gretty-gradle-plugin.github.io/gretty-doc/</a></p>
<p><a href="https://www.cnblogs.com/qrlozte/p/8734512.html">IDEA community + Gradle + Gretty 调试 servlet 应用 + war包部署到tomcat</a></p>
<p><a href="https://www.cnblogs.com/gzdaijie/p/5267166.html">Java Gradle入门指南之gretty插件（安装、命令与核心特性）</a></p>
<h1 id="spring-单体项目"><a href="#spring-单体项目" class="headerlink" title="spring 单体项目"></a>spring 单体项目</h1><h2 id="根目录-build-gradle-kts"><a href="#根目录-build-gradle-kts" class="headerlink" title="根目录 build.gradle.kts"></a>根目录 build.gradle.kts</h2><p>与 <a href="https://github.com/laolang2016/gradle-study/tree/master/jx-schema">spring mvc schema</a> 项目比起来并没有太大的区别</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.laolang.gradle.mavenAlibaba</span><br><span class="line"><span class="keyword">import</span> com.laolang.gradle.util.GradleUtil</span><br><span class="line"><span class="keyword">import</span> org.gradle.api.tasks.testing.logging.TestExceptionFormat</span><br><span class="line"><span class="keyword">import</span> org.gradle.<span class="keyword">internal</span>.classpath.Instrumented.systemProperty</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.gradle.tasks.bundling.BootJar</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">repositories &#123;</span><br><span class="line">    mavenAlibaba()</span><br><span class="line">    mavenLocal()</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">plugins &#123;</span><br><span class="line">    application</span><br><span class="line">    jacoco</span><br><span class="line">    id(<span class="string">&quot;com.dorongold.task-tree&quot;</span>) version <span class="string">&quot;3.0.0&quot;</span></span><br><span class="line">    id(<span class="string">&quot;maven-publish&quot;</span>)</span><br><span class="line">    id(<span class="string">&quot;org.springframework.boot&quot;</span>) version <span class="string">&quot;2.7.6&quot;</span></span><br><span class="line">    id(<span class="string">&quot;io.spring.dependency-management&quot;</span>) version <span class="string">&quot;1.0.15.RELEASE&quot;</span></span><br><span class="line">    id(<span class="string">&quot;my-plugin&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 项目坐标</span></span><br><span class="line">group = <span class="string">&quot;com.laolang.jx&quot;</span></span><br><span class="line">version = <span class="string">&quot;0.1&quot;</span></span><br><span class="line"></span><br><span class="line">application &#123;</span><br><span class="line">    mainClass.<span class="keyword">set</span>(<span class="string">&quot;com.laolang.jx.JxApplication&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// profile</span></span><br><span class="line"><span class="keyword">val</span> profile: String = GradleUtil.getProfile(<span class="string">&quot;dev&quot;</span>)</span><br><span class="line"><span class="comment">// 资源目录</span></span><br><span class="line"><span class="keyword">val</span> resourceDir = <span class="string">&quot;src/main/resources/<span class="variable">$profile</span>&quot;</span></span><br><span class="line"></span><br><span class="line">println(<span class="string">&quot;profile:<span class="variable">$profile</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置资源目录</span></span><br><span class="line">sourceSets &#123;</span><br><span class="line">    main &#123;</span><br><span class="line">        resources &#123;</span><br><span class="line">            srcDir(resourceDir)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    implementation(<span class="string">&quot;org.springframework.boot:spring-boot-starter-web&quot;</span>)</span><br><span class="line">    implementation(<span class="string">&quot;org.springframework.boot:spring-boot-starter-log4j2&quot;</span>)</span><br><span class="line">    implementation(<span class="string">&quot;org.springframework.boot:spring-boot-starter-json&quot;</span>)</span><br><span class="line">    annotationProcessor(<span class="string">&quot;org.springframework.boot:spring-boot-configuration-processor&quot;</span>)</span><br><span class="line">    compileOnly(<span class="string">&quot;org.springframework.boot:spring-boot-configuration-processor&quot;</span>)</span><br><span class="line"></span><br><span class="line">    implementation(libs.tlog)</span><br><span class="line"></span><br><span class="line">    implementation(libs.hutool.all)</span><br><span class="line">    implementation(libs.vavr)</span><br><span class="line">    implementation(libs.bundles.mapstruct)</span><br><span class="line">    implementation(libs.guava)</span><br><span class="line">    compileOnly(<span class="string">&quot;org.projectlombok:lombok&quot;</span>)</span><br><span class="line">    annotationProcessor(<span class="string">&quot;org.projectlombok:lombok&quot;</span>)</span><br><span class="line">    implementation(<span class="string">&quot;org.apache.commons:commons-lang3&quot;</span>)</span><br><span class="line"></span><br><span class="line">    testImplementation(libs.testng)</span><br><span class="line">    testCompileOnly(<span class="string">&quot;org.projectlombok:lombok&quot;</span>)</span><br><span class="line">    testAnnotationProcessor(<span class="string">&quot;org.projectlombok:lombok&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 由于引入了 log4j2 , 故此处排除 spring-boot 默认的 logback 日志依赖</span></span><br><span class="line">    configurations &#123;</span><br><span class="line">        all &#123;</span><br><span class="line">            exclude(group = <span class="string">&quot;org.springframework.boot&quot;</span>, module = <span class="string">&quot;spring-boot-starter-logging&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 打包时生成 source.jar 和 javadoc.jar</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">configure&lt;JavaPluginExtension&gt; &#123;</span><br><span class="line">    withSourcesJar()</span><br><span class="line">    withJavadocJar()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * java 编译配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.withType&lt;JavaCompile&gt; &#123;</span><br><span class="line">    options.encoding = Charsets.UTF_8.name()</span><br><span class="line">    sourceCompatibility = JavaVersion.VERSION_1_8.toString()</span><br><span class="line">    targetCompatibility = JavaVersion.VERSION_1_8.toString()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tasks.named&lt;Test&gt;(<span class="string">&quot;test&quot;</span>) &#123;</span><br><span class="line">    useTestNG &#123;</span><br><span class="line">        suites(<span class="string">&quot;testng.xml&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 输出详细日志</span></span><br><span class="line">    testLogging &#123;</span><br><span class="line">        <span class="comment">// 记录日志的事件类型</span></span><br><span class="line">        events(<span class="string">&quot;FAILED&quot;</span>, <span class="string">&quot;PASSED&quot;</span>, <span class="string">&quot;SKIPPED&quot;</span>, <span class="string">&quot;STANDARD_ERROR&quot;</span>, <span class="string">&quot;STANDARD_OUT&quot;</span>, <span class="string">&quot;STARTED&quot;</span>)</span><br><span class="line">        <span class="comment">// 记录测试异常的格式</span></span><br><span class="line">        <span class="comment">// FULL: 完整显示异常</span></span><br><span class="line">        <span class="comment">// SHORT: 异常的简短显示</span></span><br><span class="line">        exceptionFormat = TestExceptionFormat.FULL</span><br><span class="line">        <span class="comment">// 是否记录标准输出和标准错误的输出</span></span><br><span class="line">        showStandardStreams = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    finalizedBy(tasks.jacocoTestReport)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * javadoc</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.withType&lt;Javadoc&gt; &#123;</span><br><span class="line">    options &#123;</span><br><span class="line">        encoding = Charsets.UTF_8.name()</span><br><span class="line">        charset(Charsets.UTF_8.name())</span><br><span class="line">        windowTitle = <span class="string">&quot;spring-hello&quot;</span></span><br><span class="line">        header = <span class="string">&quot;spring-hello&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 忽略 javadoc 报错</span></span><br><span class="line">    isFailOnError = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * jacoco 任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;JacocoReport&gt;(<span class="string">&quot;jacocoTestReport&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">// 依赖于测试任务</span></span><br><span class="line">    dependsOn(tasks.test)</span><br><span class="line"></span><br><span class="line">    reports &#123;</span><br><span class="line">        xml.required.<span class="keyword">set</span>(<span class="literal">false</span>)</span><br><span class="line">        csv.required.<span class="keyword">set</span>(<span class="literal">false</span>)</span><br><span class="line">        html.required.<span class="keyword">set</span>(<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">        html.outputLocation.<span class="keyword">set</span>(layout.buildDirectory.dir(<span class="string">&quot;jacocoHtml&quot;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * spring-boot 打包</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;BootJar&gt;(<span class="string">&quot;bootJar&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">// jar 包名称</span></span><br><span class="line">    archiveBaseName.<span class="keyword">set</span>(<span class="string">&quot;jx-boot&quot;</span>)</span><br><span class="line">    <span class="comment">// 版本号设置为空</span></span><br><span class="line">    archiveVersion.<span class="keyword">set</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 发布到本地</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">publishing &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        mavenLocal()</span><br><span class="line">    &#125;</span><br><span class="line">    publications &#123;</span><br><span class="line">        create&lt;MavenPublication&gt;(<span class="string">&quot;maven&quot;</span>) &#123;</span><br><span class="line">            groupId = project.group.toString()</span><br><span class="line">            artifactId = project.name</span><br><span class="line">            version = project.version.toString()</span><br><span class="line"></span><br><span class="line">            from(components[<span class="string">&quot;java&quot;</span>])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="spring-配置文件"><a href="#spring-配置文件" class="headerlink" title="spring 配置文件"></a>spring 配置文件</h2><p>在每个 <code>profile</code> 目录中直接写死 <code>spring.profiles.active</code>, 例如 <code>resources/dev/application.yml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8096</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">context-path:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">jx-boot</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">config:</span> <span class="string">classpath:log4j2.xml</span></span><br></pre></td></tr></table></figure>

<h2 id="代码地址-2"><a href="#代码地址-2" class="headerlink" title="代码地址"></a>代码地址</h2><p><a href="https://github.com/laolang2016/gradle-study/tree/master/jx-boot">https://github.com/laolang2016/gradle-study/tree/master/jx-boot</a></p>
<h2 id="参考-5"><a href="#参考-5" class="headerlink" title="参考"></a>参考</h2><p><a href="https://gist.github.com/jakzal/1ff82e1c4c2a83805c370c17cc7308bc">Run a Spring Boot application with the dev profile (Gradle Kotlin DSL)</a></p>
<h1 id="spring-boot-多模块项目"><a href="#spring-boot-多模块项目" class="headerlink" title="spring boot 多模块项目"></a>spring boot 多模块项目</h1><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><p><img src="/images/2024-09-12-gradle-study/011.png"></p>
<h2 id="settings-gradle-kts"><a href="#settings-gradle-kts" class="headerlink" title="settings.gradle.kts"></a>settings.gradle.kts</h2><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">pluginManagement &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        <span class="comment">// 插件使用阿里云 maven 源</span></span><br><span class="line">        maven(<span class="string">&quot;https://maven.aliyun.com/repository/gradle-plugin&quot;</span>)</span><br><span class="line">        gradlePluginPortal()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rootProject.name = <span class="string">&quot;jx-boot-multi&quot;</span></span><br><span class="line"></span><br><span class="line">include(<span class="string">&quot;:jx-app&quot;</span>)</span><br><span class="line"></span><br><span class="line">include(<span class="string">&quot;:jx-framework:jx-common&quot;</span>)</span><br><span class="line">include(<span class="string">&quot;:jx-framework:jx-spring-boot-starter-web&quot;</span>)</span><br><span class="line"></span><br><span class="line">include(<span class="string">&quot;:jx-module:jx-module-system:jx-module-system-api&quot;</span>)</span><br><span class="line">include(<span class="string">&quot;:jx-module:jx-module-system:jx-module-system-biz&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="根目录-build-gradle-kts【重要】"><a href="#根目录-build-gradle-kts【重要】" class="headerlink" title="根目录 build.gradle.kts【重要】"></a>根目录 build.gradle.kts【重要】</h2><div class="note info simple"><p>重要文件</p>
</div>


<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.laolang.gradle.Version</span><br><span class="line"><span class="keyword">import</span> com.laolang.gradle.mavenAlibaba</span><br><span class="line"><span class="keyword">import</span> io.spring.gradle.dependencymanagement.dsl.DependencyManagementExtension</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用插件之前需要先声明</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">plugins &#123;</span><br><span class="line">    id(<span class="string">&quot;org.springframework.boot&quot;</span>) version <span class="string">&quot;2.7.18&quot;</span></span><br><span class="line">    id(<span class="string">&quot;io.spring.dependency-management&quot;</span>) version <span class="string">&quot;1.0.14.RELEASE&quot;</span></span><br><span class="line">    id(<span class="string">&quot;maven-publish&quot;</span>)</span><br><span class="line">    id(<span class="string">&quot;java&quot;</span>)</span><br><span class="line">    id(<span class="string">&quot;com.dorongold.task-tree&quot;</span>) version <span class="string">&quot;3.0.0&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 所有工程的配置, 包含根项目</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        mavenAlibaba()</span><br><span class="line">        mavenLocal()</span><br><span class="line">        mavenCentral()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 所有子工程的配置, 不包含根项目</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">subprojects &#123;</span><br><span class="line">    <span class="comment">// 不处理主工程, 主工程单独写构建文件</span></span><br><span class="line">    <span class="keyword">if</span> (name != <span class="string">&quot;jx-app&quot;</span>) &#123;</span><br><span class="line">        apply(plugin = <span class="string">&quot;java-library&quot;</span>)</span><br><span class="line">        apply(plugin = <span class="string">&quot;maven-publish&quot;</span>)</span><br><span class="line">        apply(plugin = <span class="string">&quot;com.dorongold.task-tree&quot;</span>)</span><br><span class="line">        apply(plugin = <span class="string">&quot;io.spring.dependency-management&quot;</span>)</span><br><span class="line"></span><br><span class="line">        group = <span class="string">&quot;com.laolang.jx&quot;</span></span><br><span class="line">        version = <span class="string">&quot;0.1&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 导入 Spring Boot 的 bom</span></span><br><span class="line">        the&lt;DependencyManagementExtension&gt;().apply &#123;</span><br><span class="line">            imports &#123;</span><br><span class="line">                mavenBom(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 注意这里 全局导入 lombok</span></span><br><span class="line">        dependencies &#123;</span><br><span class="line">            compileOnly(rootProject.libs.lombok)</span><br><span class="line">            annotationProcessor(rootProject.libs.lombok)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 打包时生成 source.jar 和 javadoc.jar</span></span><br><span class="line">        configure&lt;JavaPluginExtension&gt; &#123;</span><br><span class="line">            withSourcesJar()</span><br><span class="line">            withJavadocJar()</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * java 编译配置</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        tasks.withType&lt;JavaCompile&gt; &#123;</span><br><span class="line">            options.encoding = Charsets.UTF_8.name()</span><br><span class="line">            sourceCompatibility = Version.sourceCompatibility.toString()</span><br><span class="line">            targetCompatibility = Version.targetCompatibility.toString()</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * javadoc</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        tasks.withType&lt;Javadoc&gt; &#123;</span><br><span class="line">            options &#123;</span><br><span class="line">                encoding = Charsets.UTF_8.name()</span><br><span class="line">                charset(Charsets.UTF_8.name())</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 忽略 javadoc 报错</span></span><br><span class="line">            isFailOnError = <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 发布到本地</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        publishing &#123;</span><br><span class="line">            repositories &#123;</span><br><span class="line">                mavenLocal()</span><br><span class="line">            &#125;</span><br><span class="line">            publications &#123;</span><br><span class="line">                create&lt;MavenPublication&gt;(<span class="string">&quot;maven&quot;</span>) &#123;</span><br><span class="line">                    groupId = project.group.toString()</span><br><span class="line">                    artifactId = project.name</span><br><span class="line">                    version = project.version.toString()</span><br><span class="line"></span><br><span class="line">                    from(components[<span class="string">&quot;java&quot;</span>])</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 注意这里</span></span><br><span class="line"><span class="comment"> * 由于根项目添加了 spring-boot 插件, 所有根项目在打包时也会执行 bootJar</span></span><br><span class="line"><span class="comment"> * 而根项目又没有 java 启动类, 就会导致打包报错</span></span><br><span class="line"><span class="comment"> * 下面的配置可忽略根项目的 bootJar 任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.bootJar &#123;</span><br><span class="line">    enabled = <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="主工程-build-gradle-kts【重要】"><a href="#主工程-build-gradle-kts【重要】" class="headerlink" title="主工程 build.gradle.kts【重要】"></a>主工程 build.gradle.kts【重要】</h2><p>其实和 <a href="https://github.com/laolang2016/gradle-study/tree/master/jx-boot">spring boot</a> 比起来并没有什么不同</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.laolang.gradle.Version</span><br><span class="line"><span class="keyword">import</span> com.laolang.gradle.util.GradleUtil</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.gradle.tasks.bundling.BootJar</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 已经在根项目声明过的插件,在子项目中使用时, 不需要写版本号</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">plugins &#123;</span><br><span class="line">    application</span><br><span class="line">    id(<span class="string">&quot;org.springframework.boot&quot;</span>)</span><br><span class="line">    id(<span class="string">&quot;io.spring.dependency-management&quot;</span>)</span><br><span class="line">    id(<span class="string">&quot;maven-publish&quot;</span>)</span><br><span class="line">    id(<span class="string">&quot;com.dorongold.task-tree&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置启动类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">application &#123;</span><br><span class="line">    mainClass.<span class="keyword">set</span>(<span class="string">&quot;com.laolang.jx.App&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// profile</span></span><br><span class="line"><span class="keyword">val</span> profile: String = GradleUtil.getProfile(<span class="string">&quot;dev&quot;</span>)</span><br><span class="line"><span class="comment">// 资源目录</span></span><br><span class="line"><span class="keyword">val</span> resourceDir = <span class="string">&quot;src/main/resources/<span class="variable">$profile</span>&quot;</span></span><br><span class="line"></span><br><span class="line">println(<span class="string">&quot;profile:<span class="variable">$profile</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置资源目录</span></span><br><span class="line">sourceSets &#123;</span><br><span class="line">    main &#123;</span><br><span class="line">        resources &#123;</span><br><span class="line">            srcDir(resourceDir)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 依赖</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">dependencies &#123;</span><br><span class="line">    implementation(project(<span class="string">&quot;:jx-module:jx-module-system:jx-module-system-biz&quot;</span>))</span><br><span class="line"></span><br><span class="line">    compileOnly(<span class="string">&quot;org.projectlombok:lombok&quot;</span>)</span><br><span class="line">    annotationProcessor(<span class="string">&quot;org.projectlombok:lombok&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 由于引入了 log4j2, 所以此处排除默认的 logback 依赖</span></span><br><span class="line">    configurations &#123;</span><br><span class="line">        all &#123;</span><br><span class="line">            exclude(group = <span class="string">&quot;org.springframework.boot&quot;</span>, module = <span class="string">&quot;spring-boot-starter-logging&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">group = <span class="string">&quot;com.laolang.jx&quot;</span></span><br><span class="line">version = <span class="string">&quot;0.1&quot;</span></span><br><span class="line"></span><br><span class="line">java &#123;</span><br><span class="line">    targetCompatibility = Version.targetCompatibility</span><br><span class="line">    sourceCompatibility = Version.sourceCompatibility</span><br><span class="line">    withSourcesJar()</span><br><span class="line">    withJavadocJar()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * java 编译配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.withType&lt;JavaCompile&gt; &#123;</span><br><span class="line">    options.encoding = Charsets.UTF_8.name()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * javadoc</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.withType&lt;Javadoc&gt; &#123;</span><br><span class="line">    options &#123;</span><br><span class="line">        encoding = Charsets.UTF_8.name()</span><br><span class="line">        charset(Charsets.UTF_8.name())</span><br><span class="line">    &#125;</span><br><span class="line">    isFailOnError = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 发布到本地</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">publishing &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        mavenLocal()</span><br><span class="line">    &#125;</span><br><span class="line">    publications &#123;</span><br><span class="line">        create&lt;MavenPublication&gt;(<span class="string">&quot;maven&quot;</span>) &#123;</span><br><span class="line">            groupId = project.group.toString()</span><br><span class="line">            artifactId = project.name</span><br><span class="line">            version = project.version.toString()</span><br><span class="line"></span><br><span class="line">            from(components[<span class="string">&quot;java&quot;</span>])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * spring-boot 打包</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;BootJar&gt;(<span class="string">&quot;bootJar&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">// jar 包名称</span></span><br><span class="line">    archiveBaseName.<span class="keyword">set</span>(<span class="string">&quot;jx-boot&quot;</span>)</span><br><span class="line">    <span class="comment">// 版本号设置为空</span></span><br><span class="line">    archiveVersion.<span class="keyword">set</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="common-build-gradle-kts"><a href="#common-build-gradle-kts" class="headerlink" title="common build.gradle.kts"></a>common build.gradle.kts</h2><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    compileOnlyApi(<span class="string">&quot;org.springframework.boot:spring-boot-starter-web&quot;</span>)</span><br><span class="line">    api(<span class="string">&quot;org.springframework.boot:spring-boot-starter-json&quot;</span>)</span><br><span class="line">    api(<span class="string">&quot;org.springframework.boot:spring-boot-starter-log4j2&quot;</span>)</span><br><span class="line"></span><br><span class="line">    compileOnlyApi(libs.knife4j)</span><br><span class="line"></span><br><span class="line">    api(libs.tlog)</span><br><span class="line"></span><br><span class="line">    api(libs.hutool.all)</span><br><span class="line">    api(libs.vavr)</span><br><span class="line">    api(libs.bundles.mapstruct)</span><br><span class="line">    api(libs.guava)</span><br><span class="line">    api(<span class="string">&quot;org.apache.commons:commons-lang3&quot;</span>)</span><br><span class="line"></span><br><span class="line">    compileOnly(<span class="string">&quot;org.projectlombok:lombok&quot;</span>)</span><br><span class="line">    annotationProcessor(<span class="string">&quot;org.projectlombok:lombok&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="jx-spring-boot-starter-web-build-gradle-kts"><a href="#jx-spring-boot-starter-web-build-gradle-kts" class="headerlink" title="jx-spring-boot-starter-web build.gradle.kts"></a>jx-spring-boot-starter-web build.gradle.kts</h2><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    api(project(<span class="string">&quot;:jx-framework:jx-common&quot;</span>))</span><br><span class="line"></span><br><span class="line">    api(<span class="string">&quot;org.springframework.boot:spring-boot-starter-web&quot;</span>)</span><br><span class="line">    api(libs.knife4j)</span><br><span class="line"></span><br><span class="line">    compileOnly(<span class="string">&quot;org.projectlombok:lombok&quot;</span>)</span><br><span class="line">    annotationProcessor(<span class="string">&quot;org.projectlombok:lombok&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="其他构建文件"><a href="#其他构建文件" class="headerlink" title="其他构建文件"></a>其他构建文件</h2><p><strong>略</strong></p>
<h2 id="几个小问题"><a href="#几个小问题" class="headerlink" title="几个小问题"></a>几个小问题</h2><h3 id="打包时-bootJar-找不到启动类"><a href="#打包时-bootJar-找不到启动类" class="headerlink" title="打包时 bootJar 找不到启动类"></a>打包时 bootJar 找不到启动类</h3><p><img src="/images/2024-09-12-gradle-study/012.png"></p>
<p>根项目忽略 <code>bootJar</code> 任务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 注意这里 </span><br><span class="line"> * 由于根项目添加了 spring-boot 插件, 所有根项目在打包时也会执行 bootJar</span><br><span class="line"> * 而根项目又没有 java 启动类, 就会导致打包报错</span><br><span class="line"> * 下面的配置可忽略根项目的 bootJar 任务</span><br><span class="line"> */</span><br><span class="line">tasks.bootJar &#123;</span><br><span class="line">    enabled = false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="idea-打包时-lombok-报错"><a href="#idea-打包时-lombok-报错" class="headerlink" title="idea 打包时 lombok 报错"></a>idea 打包时 lombok 报错</h3><p><img src="/images/2024-09-12-gradle-study/013.png"></p>
<p>此问题不一定每次都会出现, 在设置中使用 <code>wrapper</code> 构建打包即可</p>
<p><img src="/images/2024-09-12-gradle-study/014.png"></p>
<p>一个小发现: 如果 <code>lombok</code> 报错, 那么在 <code>idea</code> 中先用 <code>wrapper</code> 打包, 此时不报错, 再用 <code>Local installtion</code> 打包, 也不会再报错了</p>
<h3 id="关于-spring-boot-与-lombok-的引入"><a href="#关于-spring-boot-与-lombok-的引入" class="headerlink" title="关于 spring boot 与 lombok 的引入"></a>关于 spring boot 与 lombok 的引入</h3><p>按照 <a href="https://docs.springframework.org.cn/spring-boot/gradle-plugin/managing-dependencies.html">官方文档</a> 的描述, 引用方式是这样的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">	java</span><br><span class="line">	id(&quot;org.springframework.boot&quot;) version &quot;3.3.0&quot; apply false</span><br><span class="line">	id(&quot;io.spring.dependency-management&quot;) version &quot;1.1.5&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencyManagement &#123;</span><br><span class="line">	imports &#123;</span><br><span class="line">		mavenBom(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>但是我这样操作之后无法全局引入 <code>lombok</code>, 所以只好用一个比较丑陋的方式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">subprojects &#123;</span><br><span class="line">    // 不处理主工程, 主工程单独写构建文件</span><br><span class="line">    if (name != &quot;jx-app&quot;) &#123;</span><br><span class="line">        apply(plugin = &quot;java-library&quot;)</span><br><span class="line">        apply(plugin = &quot;maven-publish&quot;)</span><br><span class="line">        apply(plugin = &quot;com.dorongold.task-tree&quot;)</span><br><span class="line">        apply(plugin = &quot;io.spring.dependency-management&quot;)</span><br><span class="line"></span><br><span class="line">        group = &quot;com.laolang.jx&quot;</span><br><span class="line">        version = &quot;0.1&quot;</span><br><span class="line"></span><br><span class="line">        // 导入 Spring Boot 的 bom</span><br><span class="line">        the&lt;DependencyManagementExtension&gt;().apply &#123;</span><br><span class="line">            imports &#123;</span><br><span class="line">                mavenBom(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 注意这里 全局导入 lombok</span><br><span class="line">        dependencies &#123;</span><br><span class="line">            compileOnly(rootProject.libs.lombok)</span><br><span class="line">            annotationProcessor(rootProject.libs.lombok)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="关于-subproject-如何使用版本目录"><a href="#关于-subproject-如何使用版本目录" class="headerlink" title="关于 subproject 如何使用版本目录"></a>关于 subproject 如何使用版本目录</h3><p>可参考 <a href="https://stackoverflow.com/questions/77527617/using-version-catalog-in-gradle-kotlin-build-for-subprojects">这里</a>, 重点就是添加 <code>rootProject</code> 前缀</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">subprojects &#123;</span><br><span class="line">    // 不处理主工程, 主工程单独写构建文件</span><br><span class="line">    if (name != &quot;jx-app&quot;) &#123;</span><br><span class="line">        // 注意这里 全局导入 lombok</span><br><span class="line">        dependencies &#123;</span><br><span class="line">            compileOnly(rootProject.libs.lombok)</span><br><span class="line">            annotationProcessor(rootProject.libs.lombok)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="代码地址-3"><a href="#代码地址-3" class="headerlink" title="代码地址"></a>代码地址</h2><p><a href="https://github.com/laolang2016/gradle-study/tree/master/jx-boot-multi">https://github.com/laolang2016/gradle-study/tree/master/jx-boot-multi</a></p>
<h2 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h2><ol>
<li>多模块有很多比较有意思的问题, 比如依赖传递, 比如子项目公用构建逻辑等, 我这里只是给出了一个可行的例子, 并没有详细解释, 或者说我了解的太过流于表面</li>
<li>使用 gradle 进行多模块构建出了上面这种一个启动项目的, 还有一种就是多个启动项目, 比如 spring cloud 项目, 这个等之后再处理. 大致思路是这样的: 写一个自定义插件, 然后将这个插件应用到每个微服务的启动项目中, 在此插件的配置中填写依赖哪些子模块类似这样<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jxBootApp &#123;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        module(&quot;jx-module-system-api&quot;)</span><br><span class="line">        module(&quot;jx-module-auth-api&quot;)</span><br><span class="line">        module(&quot;jx-mall-product-api&quot;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 启动类就不用配置了, 由自定义插件根据项目名自动填充, 当然命名要有规律</span><br><span class="line">    // 比如项目名是 jx-mall-product-biz , 那么启动类应该是 JxMallProductBizApplication</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>为什么项目结构是这样的? 主要是为了和 <code>maven</code> 构建方式兼容, 如果不考虑兼用 <code>maven</code> , 其实所有子模块应该平铺而不是嵌套</li>
<li>尚未考虑 <code>gradle</code> 和 <code>docker</code> 或者 <code>jenkins</code> 如何结合</li>
<li>有些工程化的东西还没处理, 例如 <code>checkstyle</code></li>
</ol>
<h2 id="参考-6"><a href="#参考-6" class="headerlink" title="参考"></a>参考</h2><p><a href="https://zhuanlan.zhihu.com/p/354119928">SpringBoot+Gradle构建多模块项目</a></p>
<p><a href="https://blog.csdn.net/qq_36279799/article/details/131983818">springboot gradle kotlin 多模块（或微服务）统一依赖及版本管理和构建不同环境打包task,docker镜像构建task</a></p>
<p><a href="https://github.com/emmapatterson/multi-module-spring-boot">https://github.com/emmapatterson/multi-module-spring-boot</a></p>
<p><a href="https://docs.springframework.org.cn/spring-boot/gradle-plugin/managing-dependencies.html">spring 中文文档 gradle 插件 管理依赖项</a></p>
<p><a href="https://docs.spring.io/spring-boot/docs/2.4.5/gradle-plugin/reference/htmlsingle/">spring boot gradle 插件官方文档</a></p>
<p><a href="https://juejin.cn/post/6955854790027345934">Springboot 多模块依赖构建常见问题</a></p>
<p><a href="https://stackoverflow.com/questions/77527617/using-version-catalog-in-gradle-kotlin-build-for-subprojects">Using version catalog in Gradle Kotlin build for subprojects</a></p>
]]></content>
      <categories>
        <category>java</category>
        <category>gradle</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>gradle</tag>
      </tags>
  </entry>
  <entry>
    <title>资源汇总</title>
    <url>/2024/09/12/a02-resource/</url>
    <content><![CDATA[<h1 id="我的百度网盘"><a href="#我的百度网盘" class="headerlink" title="我的百度网盘"></a>我的百度网盘</h1><p>通过百度网盘分享的文件：java2016</p>
<p>链接：<a href="https://pan.baidu.com/s/1hq-nTf1o-tttNJCT2zeVGg">https://pan.baidu.com/s/1hq-nTf1o-tttNJCT2zeVGg</a> </p>
<p>提取码：2016 </p>
<p>–来自百度网盘超级会员V9的分享</p>
<h1 id="java"><a href="#java" class="headerlink" title="java"></a>java</h1><h2 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h2><h3 id="javaguide"><a href="#javaguide" class="headerlink" title="javaguide"></a>javaguide</h3><p><a href="https://javaguide.cn/books/">javaguide</a></p>
<h3 id="程序猿DD"><a href="#程序猿DD" class="headerlink" title="程序猿DD"></a>程序猿DD</h3><p>博客主页: <a href="https://www.didispace.com/">https://www.didispace.com/</a></p>
<h3 id="张开涛的博客"><a href="#张开涛的博客" class="headerlink" title="张开涛的博客"></a>张开涛的博客</h3><p>博客主页: <a href="https://www.iteye.com/blog/user/jinnianshilongnian">https://www.iteye.com/blog/user/jinnianshilongnian</a></p>
<p>系列博文</p>
<p><a href="https://www.iteye.com/blog/jinnianshilongnian-2018398">跟我学Shiro目录贴</a></p>
<p><a href="https://www.iteye.com/blog/jinnianshilongnian-1482071">跟我学spring3 目录贴及电子书下载</a></p>
<p><a href="https://www.iteye.com/blog/jinnianshilongnian-1752171">跟我学SpringMVC目录汇总贴、PDF下载、源码下载</a></p>
<h2 id="juc"><a href="#juc" class="headerlink" title="juc"></a>juc</h2><p><a href="https://www.yuque.com/chengxuyuanyideng/qnbyyf">Java多线程大全</a></p>
<h2 id="spring-系列"><a href="#spring-系列" class="headerlink" title="spring 系列"></a>spring 系列</h2><h3 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h3><p><a href="https://springjava.cn/">spring 中文文档</a></p>
<h3 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h3><h4 id="精通Spring-4-x-――企业应用开发实战"><a href="#精通Spring-4-x-――企业应用开发实战" class="headerlink" title="精通Spring 4.x ――企业应用开发实战"></a>精通Spring 4.x ――企业应用开发实战</h4><p><a href="https://item.jd.com/10101381454914.html">精通Spring 4.x ――企业应用开发实战 陈雄华 著</a></p>
<h2 id="maven"><a href="#maven" class="headerlink" title="maven"></a>maven</h2><p><a href="https://maven.org.cn/">maven 官方中文文档</a></p>
<h2 id="testng"><a href="#testng" class="headerlink" title="testng"></a>testng</h2><p><a href="https://www.yiibai.com/testng">TestNG教程 易百教程</a></p>
<p><a href="https://www.cnblogs.com/df888/p/15803356.html">单篇长文TestNG从入门到精通</a></p>
<p><a href="https://www.cnblogs.com/du-hong/category/1566525.html">Java自动化测试框架 （详细教程）</a></p>
<h2 id="gui"><a href="#gui" class="headerlink" title="gui"></a>gui</h2><h3 id="javafx"><a href="#javafx" class="headerlink" title="javafx"></a>javafx</h3><p><a href="https://space.bilibili.com/5096022/channel/seriesdetail?sid=394169">javafx 视频教程 极其完整</a><br><a href="https://www.bilibili.com/video/BV1H14y1g7ji">JavaFx 系列教程 2024版 整合SpringBoot3+MyBaitsPlus</a></p>
<h1 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h1><p><a href="https://blog.csdn.net/luyaran/article/details/80928666">mysql使用技巧之比较两个表是否有不同的数据</a></p>
<h1 id="编译原理"><a href="#编译原理" class="headerlink" title="编译原理"></a>编译原理</h1><p><a href="https://github.com/DoctorWkt/acwj">acwj</a><br><a href="https://www.youtube.com/playlist?list=PLwHDUsnIdlMy52QnKX-2Unl6Hmfm9A6jt">Compiler From Scratch</a></p>
<h1 id="c"><a href="#c" class="headerlink" title="c++"></a>c++</h1><h2 id="构建工具"><a href="#构建工具" class="headerlink" title="构建工具"></a>构建工具</h2><h3 id="makefile"><a href="#makefile" class="headerlink" title="makefile"></a>makefile</h3><p><a href="https://github.com/seisman/how-to-write-makefile">跟我一起写Makefile (PDF重制版)</a></p>
<h3 id="Autotools"><a href="#Autotools" class="headerlink" title="Autotools"></a>Autotools</h3><p>Autotools - GNU Autoconf, Automake与Libtool实践者指南 前三章的翻译: <a href="https://blog.csdn.net/cloud_desktop/category_1868475.html">https://blog.csdn.net/cloud_desktop&#x2F;category_1868475.html</a><br><a href="https://zhuanlan.zhihu.com/p/518876706">Autoconf 教程 Part-1 [翻译] - 红色的红的文章 - 知乎</a></p>
<h3 id="cmake"><a href="#cmake" class="headerlink" title="cmake"></a>cmake</h3><p><a href="https://cmake-doc.readthedocs.io/zh-cn/latest/index.html">cmake 中文文档</a><br><a href="https://www.bookstack.cn/read/Modern-CMake-CN-Modern-CMake-zh_CN/08ad6f6237beace2.md">Modern CMake 简体中文版</a></p>
<p><a href="https://www.hahack.com/codes/cmake/">CMake 入门实战</a></p>
<h2 id="c-资源"><a href="#c-资源" class="headerlink" title="c++ 资源"></a>c++ 资源</h2><p><a href="https://github.com/MeouSker77/Cpp17?tab=readme-ov-file">C++17完全指南 中文翻译版</a><br><a href="https://www.cnblogs.com/Evsward/p/Cpp.html">Efficient&amp;Elegant：Java程序员入门Cpp</a></p>
<h1 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h1><p>免费编程书籍: <a href="https://www.panziye.com/project/ebook">https://www.panziye.com/project/ebook</a></p>
<p><a href="https://zetcode.apachecn.org/">https://zetcode.apachecn.org/</a><br><a href="https://zetcode.apachecn.org/gui/">【布客】ZetCode 图形界面教程 包含 win32 qt swing等</a></p>
<p><a href="https://www.cnblogs.com/liuxianan/p/chrome-plugin-develop.html">【干货】Chrome插件(扩展)开发全攻略</a></p>
<h1 id="vscode"><a href="#vscode" class="headerlink" title="vscode"></a>vscode</h1><h2 id="插件开发"><a href="#插件开发" class="headerlink" title="插件开发"></a>插件开发</h2><p><a href="https://www.cnblogs.com/liuxianan/p/vscode-plugin-overview.html">VSCode插件开发全攻略（一）概览</a></p>
<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><h3 id="Markdown-Preview-Enhanced"><a href="#Markdown-Preview-Enhanced" class="headerlink" title="Markdown Preview Enhanced"></a>Markdown Preview Enhanced</h3><p>中文文档 : <a href="https://shd101wyy.github.io/markdown-preview-enhanced/#/zh-cn/">Markdown Preview Enhanced</a></p>
<p>pdf 预览插件, 可渲染 <code>mermaid</code> 、<code>plantuml</code>, 代码可带行号, 可高亮指定行, 可导入文件</p>
]]></content>
  </entry>
  <entry>
    <title>java 多线程基本使用</title>
    <url>/2024/09/12/juc-base/</url>
    <content><![CDATA[<h1 id="创建和运行线程"><a href="#创建和运行线程" class="headerlink" title="创建和运行线程"></a>创建和运行线程</h1><h2 id="直接使用-Thread"><a href="#直接使用-Thread" class="headerlink" title="直接使用 Thread"></a>直接使用 Thread</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.StrUtil;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JucHelloApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;juc hello is running...&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="string">&quot;t1&quot;</span>) &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        TimeUnit.SECONDS.sleep(<span class="number">5</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                    &#125;</span><br><span class="line">                    log.info(StrUtil.format(<span class="string">&quot;thread &#123;&#125; is running...&quot;</span>), Thread.currentThread().getName());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        t1.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="继承-Thread"><a href="#继承-Thread" class="headerlink" title="继承 Thread"></a>继承 Thread</h2><div class="tabs" id=""><ul class="nav-tabs"><button type="button" class="tab  active" data-href="-1">SimpleThread</button><button type="button" class="tab " data-href="-2">JucHelloApplication</button></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.StrUtil;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SimpleThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">SimpleThread</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                TimeUnit.SECONDS.sleep(<span class="number">5</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(StrUtil.format(<span class="string">&quot;thread &#123;&#125; is running...&quot;</span>), Thread.currentThread().getName());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="-2"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JucHelloApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;juc hello is running...&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleThread</span>(<span class="string">&quot;t1&quot;</span>);</span><br><span class="line">        t1.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>

<h2 id="实现-Runnable"><a href="#实现-Runnable" class="headerlink" title="实现 Runnable"></a>实现 Runnable</h2><div class="tabs" id=""><ul class="nav-tabs"><button type="button" class="tab  active" data-href="-1">SimpleThread</button><button type="button" class="tab " data-href="-2">JucHelloApplication</button></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.StrUtil;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SimpleThread</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                TimeUnit.SECONDS.sleep(<span class="number">5</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(StrUtil.format(<span class="string">&quot;thread &#123;&#125; is running...&quot;</span>), Thread.currentThread().getName());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="-2"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JucHelloApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;juc hello is running...&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">SimpleThread</span>(), <span class="string">&quot;t1&quot;</span>);</span><br><span class="line">        t1.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>

<h2 id="Callable-与-Future"><a href="#Callable-与-Future" class="headerlink" title="Callable 与 Future"></a>Callable 与 Future</h2><h3 id="FutureTask"><a href="#FutureTask" class="headerlink" title="FutureTask"></a>FutureTask</h3><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><div class="tabs" id=""><ul class="nav-tabs"><button type="button" class="tab  active" data-href="-1">SimpleCallable</button><button type="button" class="tab " data-href="-2">JucHelloApplication</button></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Callable;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SimpleCallable</span> <span class="keyword">implements</span> <span class="title class_">Callable</span>&lt;Integer&gt; &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">call</span><span class="params">()</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;callabel 线程启动&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                TimeUnit.SECONDS.sleep(<span class="number">3</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(<span class="string">&quot;callable 正在运行&quot;</span>);</span><br><span class="line">            sum += i;</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(<span class="string">&quot;callable 线程运行完毕&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="-2"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutionException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.FutureTask;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JucHelloApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;juc hello is running...&quot;</span>);</span><br><span class="line"></span><br><span class="line">        FutureTask&lt;Integer&gt; futureTask = <span class="keyword">new</span> <span class="title class_">FutureTask</span>&lt;&gt;(<span class="keyword">new</span> <span class="title class_">SimpleCallable</span>());</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(futureTask, <span class="string">&quot;t1&quot;</span>);</span><br><span class="line">        t1.start();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>( i &lt; <span class="number">5</span> )&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                TimeUnit.SECONDS.sleep(<span class="number">2</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(<span class="string">&quot;主线程的某些任务&quot;</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Integer</span> <span class="variable">ret</span> <span class="operator">=</span> futureTask.get();</span><br><span class="line">            log.info(<span class="string">&quot;线程计算结果:&#123;&#125;&quot;</span>,ret);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException | ExecutionException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>( i &lt; <span class="number">5</span> )&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                TimeUnit.SECONDS.sleep(<span class="number">2</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(<span class="string">&quot;主线程的某些任务2&quot;</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;程序结束&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>

<h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-09-12 08:05:01.920 [main ] INFO  com.laolang.jx.JucHelloApplication       - juc hello is running...</span><br><span class="line">2024-09-12 08:05:01.921 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callabel 线程启动</span><br><span class="line">2024-09-12 08:05:03.931 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务</span><br><span class="line">2024-09-12 08:05:04.934 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callable 正在运行</span><br><span class="line">2024-09-12 08:05:05.938 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务</span><br><span class="line">2024-09-12 08:05:07.938 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callable 正在运行</span><br><span class="line">2024-09-12 08:05:07.954 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务</span><br><span class="line">2024-09-12 08:05:09.961 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务</span><br><span class="line">2024-09-12 08:05:10.951 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callable 正在运行</span><br><span class="line">2024-09-12 08:05:11.963 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务</span><br><span class="line">2024-09-12 08:05:13.962 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callable 正在运行</span><br><span class="line">2024-09-12 08:05:16.972 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callable 正在运行</span><br><span class="line">2024-09-12 08:05:16.972 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callable 线程运行完毕</span><br><span class="line">2024-09-12 08:05:16.972 [main ] INFO  com.laolang.jx.JucHelloApplication       - 线程计算结果:15</span><br><span class="line">2024-09-12 08:05:18.979 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务2</span><br><span class="line">2024-09-12 08:05:20.996 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务2</span><br><span class="line">2024-09-12 08:05:23.013 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务2</span><br><span class="line">2024-09-12 08:05:25.020 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务2</span><br><span class="line">2024-09-12 08:05:27.035 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务2</span><br><span class="line">2024-09-12 08:05:27.037 [main ] INFO  com.laolang.jx.JucHelloApplication       - 程序结束</span><br></pre></td></tr></table></figure>

<h4 id="FutureTask-的缺陷"><a href="#FutureTask-的缺陷" class="headerlink" title="FutureTask 的缺陷"></a>FutureTask 的缺陷</h4><p><code>get</code> 方法在 <code>Future</code> 计算完成之前会一直处于阻塞状态</p>
<h3 id="CompletableFuture"><a href="#CompletableFuture" class="headerlink" title="CompletableFuture"></a>CompletableFuture</h3><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><div class="tabs" id=""><ul class="nav-tabs"><button type="button" class="tab  active" data-href="-1">SimpleCallable</button><button type="button" class="tab " data-href="-2">JucHelloApplication</button></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Callable;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SimpleCallable</span> <span class="keyword">implements</span> <span class="title class_">Callable</span>&lt;Integer&gt; &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">call</span><span class="params">()</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;callabel 线程启动&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                TimeUnit.SECONDS.sleep(<span class="number">3</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(<span class="string">&quot;callable 正在运行&quot;</span>);</span><br><span class="line">            sum += i;</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(<span class="string">&quot;callable 线程运行完毕&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="-2"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CompletableFuture;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JucHelloApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;juc hello is running...&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">ExecutorService</span> <span class="variable">executorService</span> <span class="operator">=</span> Executors.newFixedThreadPool(<span class="number">1</span>, runnable -&gt; &#123;</span><br><span class="line">            <span class="type">Thread</span> <span class="variable">thread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(runnable);</span><br><span class="line">            thread.setName(<span class="string">&quot;t1&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> thread;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        CompletableFuture</span><br><span class="line">                .supplyAsync(() -&gt; <span class="keyword">new</span> <span class="title class_">SimpleCallable</span>().call(), executorService)</span><br><span class="line">                .whenComplete((integer, throwable) -&gt; log.info(<span class="string">&quot;callable 计算结果:&#123;&#125;&quot;</span>, integer));</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; <span class="number">5</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                TimeUnit.SECONDS.sleep(<span class="number">2</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(<span class="string">&quot;主线程的某些任务&quot;</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; <span class="number">5</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                TimeUnit.SECONDS.sleep(<span class="number">2</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(<span class="string">&quot;主线程的某些任务2&quot;</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        executorService.shutdown();</span><br><span class="line">        log.info(<span class="string">&quot;程序结束&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>

<h4 id="结果-1"><a href="#结果-1" class="headerlink" title="结果"></a>结果</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-09-12 08:08:11.632 [main ] INFO  com.laolang.jx.JucHelloApplication       - juc hello is running...</span><br><span class="line">2024-09-12 08:08:11.655 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callabel 线程启动</span><br><span class="line">2024-09-12 08:08:13.665 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务</span><br><span class="line">2024-09-12 08:08:14.670 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callable 正在运行</span><br><span class="line">2024-09-12 08:08:15.678 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务</span><br><span class="line">2024-09-12 08:08:17.682 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务</span><br><span class="line">2024-09-12 08:08:17.682 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callable 正在运行</span><br><span class="line">2024-09-12 08:08:19.689 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务</span><br><span class="line">2024-09-12 08:08:20.690 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callable 正在运行</span><br><span class="line">2024-09-12 08:08:21.703 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务</span><br><span class="line">2024-09-12 08:08:23.693 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callable 正在运行</span><br><span class="line">2024-09-12 08:08:23.709 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务2</span><br><span class="line">2024-09-12 08:08:25.716 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务2</span><br><span class="line">2024-09-12 08:08:26.710 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callable 正在运行</span><br><span class="line">2024-09-12 08:08:26.713 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callable 线程运行完毕</span><br><span class="line">2024-09-12 08:08:26.715 [t1   ] INFO  com.laolang.jx.JucHelloApplication       - callable 计算结果:15</span><br><span class="line">2024-09-12 08:08:27.723 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务2</span><br><span class="line">2024-09-12 08:08:29.740 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务2</span><br><span class="line">2024-09-12 08:08:31.751 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务2</span><br><span class="line">2024-09-12 08:08:31.751 [main ] INFO  com.laolang.jx.JucHelloApplication       - 程序结束</span><br></pre></td></tr></table></figure>

<h2 id="一个小例子-分别计算奇偶数之和"><a href="#一个小例子-分别计算奇偶数之和" class="headerlink" title="一个小例子: 分别计算奇偶数之和"></a>一个小例子: 分别计算奇偶数之和</h2><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Callable;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CompletableFuture;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutionException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ThreadFactory;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.atomic.AtomicInteger;</span><br><span class="line"><span class="keyword">import</span> javax.annotation.Nonnull;</span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JucHelloApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ExecutionException, InterruptedException &#123;</span><br><span class="line">        log.info(<span class="string">&quot;juc hello is running...&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">ExecutorService</span> <span class="variable">executorService</span> <span class="operator">=</span> Executors.newFixedThreadPool(<span class="number">2</span>, <span class="keyword">new</span> <span class="title class_">SimplThreadFactory</span>(<span class="string">&quot;call-&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算奇数</span></span><br><span class="line">        CompletableFuture.supplyAsync(() -&gt; <span class="keyword">new</span> <span class="title class_">SimpleCallable</span>(NumberType.ODD).call(), executorService)</span><br><span class="line">                .whenComplete((integer, throwable) -&gt; log.info(<span class="string">&quot;奇数之和:&#123;&#125;&quot;</span>, integer));</span><br><span class="line">        <span class="comment">// 计算偶数</span></span><br><span class="line">        CompletableFuture.supplyAsync(() -&gt; <span class="keyword">new</span> <span class="title class_">SimpleCallable</span>(NumberType.EVEN).call(), executorService)</span><br><span class="line">                .whenComplete((integer, throwable) -&gt; log.info(<span class="string">&quot;偶数之和:&#123;&#125;&quot;</span>, integer));</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; <span class="number">5</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                TimeUnit.SECONDS.sleep(<span class="number">2</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(<span class="string">&quot;主线程的某些任务&quot;</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(<span class="string">&quot;主线程运行完毕&quot;</span>);</span><br><span class="line"></span><br><span class="line">        executorService.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义线程名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">SimplThreadFactory</span> <span class="keyword">implements</span> <span class="title class_">ThreadFactory</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">AtomicInteger</span> <span class="variable">threadIndex</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AtomicInteger</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> String threadNamePrefix;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">SimplThreadFactory</span><span class="params">(String threadNamePrefix)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.threadNamePrefix = threadNamePrefix;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> Thread <span class="title function_">newThread</span><span class="params">(<span class="meta">@Nonnull</span> Runnable runnable)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(runnable, threadNamePrefix + threadIndex.getAndIncrement());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数字类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">enum</span> <span class="title class_">NumberType</span> &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 偶数</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        EVEN,</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 奇数</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        ODD</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Slf4j</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">SimpleCallable</span> <span class="keyword">implements</span> <span class="title class_">Callable</span>&lt;Integer&gt; &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> NumberType numberType;</span><br><span class="line">        <span class="meta">@Getter</span></span><br><span class="line">        <span class="keyword">private</span> <span class="type">Integer</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">SimpleCallable</span><span class="params">(NumberType numberType)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.numberType = numberType;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> Integer <span class="title function_">call</span><span class="params">()</span> &#123;</span><br><span class="line">            log.info(<span class="string">&quot;&#123;&#125; 线程启动&quot;</span>, Thread.currentThread().getName());</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (match(i)) &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="comment">// 偶数线程 sleep 1 秒</span></span><br><span class="line">                        <span class="comment">// 奇数线程 sleep 2 秒</span></span><br><span class="line">                        TimeUnit.SECONDS.sleep((i &amp; <span class="number">1</span>) + <span class="number">1</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                    &#125;</span><br><span class="line">                    log.info(<span class="string">&quot;&#123;&#125; 正在运行, 累增:&#123;&#125;&quot;</span>, Thread.currentThread().getName(), i);</span><br><span class="line">                    sum += i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(<span class="string">&quot;&#123;&#125; 线程运行完毕&quot;</span>, Thread.currentThread().getName());</span><br><span class="line">            <span class="keyword">return</span> sum;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">match</span><span class="params">(<span class="type">int</span> number)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> numberType.ordinal() == (number &amp; <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-09-12 21:59:01.874 [main    ] INFO  c.l.jx.JucHelloApplication     - juc hello is running...</span><br><span class="line">2024-09-12 21:59:01.898 [call-2  ] INFO  elloApplication$SimpleCallable - call-2 线程启动</span><br><span class="line">2024-09-12 21:59:01.898 [call-1  ] INFO  elloApplication$SimpleCallable - call-1 线程启动</span><br><span class="line">2024-09-12 21:59:02.903 [call-2  ] INFO  elloApplication$SimpleCallable - call-2 正在运行, 累增:2</span><br><span class="line">2024-09-12 21:59:03.910 [call-2  ] INFO  elloApplication$SimpleCallable - call-2 正在运行, 累增:4</span><br><span class="line">2024-09-12 21:59:03.910 [main    ] INFO  c.l.jx.JucHelloApplication     - 主线程的某些任务</span><br><span class="line">2024-09-12 21:59:03.910 [call-1  ] INFO  elloApplication$SimpleCallable - call-1 正在运行, 累增:1</span><br><span class="line">2024-09-12 21:59:04.922 [call-2  ] INFO  elloApplication$SimpleCallable - call-2 正在运行, 累增:6</span><br><span class="line">2024-09-12 21:59:05.916 [call-1  ] INFO  elloApplication$SimpleCallable - call-1 正在运行, 累增:3</span><br><span class="line">2024-09-12 21:59:05.916 [main    ] INFO  c.l.jx.JucHelloApplication     - 主线程的某些任务</span><br><span class="line">2024-09-12 21:59:05.932 [call-2  ] INFO  elloApplication$SimpleCallable - call-2 正在运行, 累增:8</span><br><span class="line">2024-09-12 21:59:06.946 [call-2  ] INFO  elloApplication$SimpleCallable - call-2 正在运行, 累增:10</span><br><span class="line">2024-09-12 21:59:06.946 [call-2  ] INFO  elloApplication$SimpleCallable - call-2 线程运行完毕</span><br><span class="line">2024-09-12 21:59:06.947 [call-2  ] INFO  c.l.jx.JucHelloApplication     - 偶数之和:30</span><br><span class="line">2024-09-12 21:59:07.925 [call-1  ] INFO  elloApplication$SimpleCallable - call-1 正在运行, 累增:5</span><br><span class="line">2024-09-12 21:59:07.925 [main    ] INFO  c.l.jx.JucHelloApplication     - 主线程的某些任务</span><br><span class="line">2024-09-12 21:59:09.929 [call-1  ] INFO  elloApplication$SimpleCallable - call-1 正在运行, 累增:7</span><br><span class="line">2024-09-12 21:59:09.929 [main    ] INFO  c.l.jx.JucHelloApplication     - 主线程的某些任务</span><br><span class="line">2024-09-12 21:59:11.945 [main    ] INFO  c.l.jx.JucHelloApplication     - 主线程的某些任务</span><br><span class="line">2024-09-12 21:59:11.945 [call-1  ] INFO  elloApplication$SimpleCallable - call-1 正在运行, 累增:9</span><br><span class="line">2024-09-12 21:59:11.945 [main    ] INFO  c.l.jx.JucHelloApplication     - 主线程运行完毕</span><br><span class="line">2024-09-12 21:59:11.945 [call-1  ] INFO  elloApplication$SimpleCallable - call-1 线程运行完毕</span><br><span class="line">2024-09-12 21:59:11.945 [call-1  ] INFO  c.l.jx.JucHelloApplication     - 奇数之和:25</span><br></pre></td></tr></table></figure>

<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://springdoc.cn/java-naming-executor-service-thread/">自定义 ExecutorService 中线程的名称</a></p>
]]></content>
      <categories>
        <category>java</category>
        <category>juc</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>juc</tag>
      </tags>
  </entry>
  <entry>
    <title>java 微项目</title>
    <url>/2024/09/12/java-micro-project/</url>
    <content><![CDATA[<h1 id="京西"><a href="#京西" class="headerlink" title="京西"></a>京西</h1><h2 id="h5-端"><a href="#h5-端" class="headerlink" title="h5 端"></a>h5 端</h2><p><a href="https://www.bilibili.com/video/BV1PL4y1x7cz">Vue+VantUI严选电商项目移动端实战项目</a><br><a href="https://vant-ui.github.io/vant/#/zh-CN">vant ui 官方文档</a></p>
<h1 id="dbmfx"><a href="#dbmfx" class="headerlink" title="dbmfx"></a>dbmfx</h1><p><a href="https://space.bilibili.com/5096022/channel/seriesdetail?sid=394169">javafx 视频教程 极其完整</a><br><a href="https://www.bilibili.com/video/BV1H14y1g7ji">JavaFx 系列教程 2024版 整合SpringBoot3+MyBaitsPlus</a></p>
<h1 id="ghost-book"><a href="#ghost-book" class="headerlink" title="ghost book"></a>ghost book</h1><p><a href="https://layui.dev/">layui 官网</a></p>
<p>chokidar 监控文件变化</p>
<p><a href="https://github.com/paulmillr/chokidar">https://github.com/paulmillr/chokidar</a><br><a href="https://github.com/poppinss/chokidar-ts">https://github.com/poppinss/chokidar-ts</a></p>
<p><a href="https://juejin.cn/post/7000262974430511117">Node、node-watch、Chokidar实现文件监听封装思路解析</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/545161275">来，体会一下npm包的发布、更新管理、使用——完整教程🎈</a></p>
<p><a href="https://cloud.tencent.com/developer/article/2013675">Java实现监听文件变化的三种方法，推荐第三种</a></p>
<p><a href="https://juejin.cn/post/7341592148306739209">使用 FlexSearch 实现本地全文搜索</a></p>
<p><a href="https://www.thosefree.com/fuse-js">Fuse.js - 免费开源、小巧无依赖的模糊搜索 JavaScript 工具库</a></p>
<p><a href="https://www.cnblogs.com/ae6623/p/4416473.html">【技术贴】解决使用maven jetty启动后无法加载修改过后的静态资源</a></p>
]]></content>
      <categories>
        <category>java</category>
        <category>project</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>project</tag>
      </tags>
  </entry>
  <entry>
    <title>java 新特性</title>
    <url>/2024/09/13/java-new-feature/</url>
    <content><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.bilibili.com/video/BV16v4y1y7xa">java8之后版本的变化-涵盖java9~21新特性</a><br><a href="https://www.bilibili.com/video/BV1tU4y1y7Fg">JavaSE 9-17 新特性 已完结（IDEA 2022.1最新版）4K蓝光画质 Java9&#x2F;10&#x2F;11&#x2F;12&#x2F;13&#x2F;14&#x2F;15&#x2F;16&#x2F;17讲解</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>javafx 002 启动方式</title>
    <url>/2024/09/14/javafx-002-start-type/</url>
    <content><![CDATA[<h1 id="方式一-继承-Application"><a href="#方式一-继承-Application" class="headerlink" title="方式一 继承 Application"></a>方式一 继承 Application</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.fx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javafx.application.Application;</span><br><span class="line"><span class="keyword">import</span> javafx.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> javafx.event.EventHandler;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.Scene;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.control.Alert;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.control.Button;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.layout.StackPane;</span><br><span class="line"><span class="keyword">import</span> javafx.stage.Stage;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FxHelloApplication</span> <span class="keyword">extends</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;fx hello is running...&quot;</span>);</span><br><span class="line">        launch(args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">(Stage primaryStage)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>();</span><br><span class="line">        btn.setText(<span class="string">&quot;Say &#x27;Hello World&#x27;&quot;</span>);</span><br><span class="line">        btn.setOnAction(<span class="keyword">new</span> <span class="title class_">EventHandler</span>&lt;ActionEvent&gt;() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handle</span><span class="params">(ActionEvent event)</span> &#123;</span><br><span class="line">                <span class="type">Alert</span> <span class="variable">alert</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Alert</span>(Alert.AlertType.INFORMATION);</span><br><span class="line">                alert.setTitle(<span class="string">&quot;Information Dialog&quot;</span>);</span><br><span class="line">                alert.setHeaderText(<span class="string">&quot;Look, an Information Dialog&quot;</span>);</span><br><span class="line">                alert.setContentText(<span class="string">&quot;I have a great message for you!&quot;</span>);</span><br><span class="line"></span><br><span class="line">                alert.showAndWait();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="type">StackPane</span> <span class="variable">root</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StackPane</span>();</span><br><span class="line">        root.getChildren().add(btn);</span><br><span class="line"></span><br><span class="line">        <span class="type">Scene</span> <span class="variable">scene</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scene</span>(root, <span class="number">300</span>, <span class="number">250</span>);</span><br><span class="line"></span><br><span class="line">        primaryStage.setTitle(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">        primaryStage.setScene(scene);</span><br><span class="line">        primaryStage.show();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="方式二-启动类与-Application-分开"><a href="#方式二-启动类与-Application-分开" class="headerlink" title="方式二 启动类与 Application 分开"></a>方式二 启动类与 Application 分开</h1><h2 id="启动类"><a href="#启动类" class="headerlink" title="启动类"></a>启动类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.fx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javafx.application.Application;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FxHelloApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;fx hello is running...&quot;</span>);</span><br><span class="line">        Application.launch(FxHelloLaunch.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.fx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javafx.application.Application;</span><br><span class="line"><span class="keyword">import</span> javafx.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> javafx.event.EventHandler;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.Scene;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.control.Alert;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.control.Button;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.layout.StackPane;</span><br><span class="line"><span class="keyword">import</span> javafx.stage.Stage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FxHelloLaunch</span> <span class="keyword">extends</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">(Stage primaryStage)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>();</span><br><span class="line">        btn.setText(<span class="string">&quot;Say &#x27;Hello World&#x27;&quot;</span>);</span><br><span class="line">        btn.setOnAction(<span class="keyword">new</span> <span class="title class_">EventHandler</span>&lt;ActionEvent&gt;() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handle</span><span class="params">(ActionEvent event)</span> &#123;</span><br><span class="line">                <span class="type">Alert</span> <span class="variable">alert</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Alert</span>(Alert.AlertType.INFORMATION);</span><br><span class="line">                alert.setTitle(<span class="string">&quot;Information Dialog&quot;</span>);</span><br><span class="line">                alert.setHeaderText(<span class="string">&quot;Look, an Information Dialog&quot;</span>);</span><br><span class="line">                alert.setContentText(<span class="string">&quot;I have a great message for you!&quot;</span>);</span><br><span class="line"></span><br><span class="line">                alert.showAndWait();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="type">StackPane</span> <span class="variable">root</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StackPane</span>();</span><br><span class="line">        root.getChildren().add(btn);</span><br><span class="line"></span><br><span class="line">        <span class="type">Scene</span> <span class="variable">scene</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scene</span>(root, <span class="number">300</span>, <span class="number">250</span>);</span><br><span class="line"></span><br><span class="line">        primaryStage.setTitle(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">        primaryStage.setScene(scene);</span><br><span class="line">        primaryStage.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>java</category>
        <category>javafx</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>javafx</tag>
      </tags>
  </entry>
  <entry>
    <title>javafx 003 生命周期</title>
    <url>/2024/09/14/javafx-003-lifecycle/</url>
    <content><![CDATA[<h1 id="生命周期的三个方法"><a href="#生命周期的三个方法" class="headerlink" title="生命周期的三个方法"></a>生命周期的三个方法</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.fx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javafx.application.Application;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.Scene;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.layout.StackPane;</span><br><span class="line"><span class="keyword">import</span> javafx.stage.Stage;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FxHelloLaunch</span> <span class="keyword">extends</span> <span class="title class_">Application</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        log.info(<span class="string">&quot;init&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">(Stage primaryStage)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        log.info(<span class="string">&quot;start&quot;</span>);</span><br><span class="line">        <span class="type">StackPane</span> <span class="variable">root</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StackPane</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">Scene</span> <span class="variable">scene</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scene</span>(root, <span class="number">300</span>, <span class="number">250</span>);</span><br><span class="line"></span><br><span class="line">        primaryStage.setTitle(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">        primaryStage.setScene(scene);</span><br><span class="line">        primaryStage.show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        log.info(<span class="string">&quot;stop&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>java</category>
        <category>javafx</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>javafx</tag>
      </tags>
  </entry>
  <entry>
    <title>javafx 001 hello world</title>
    <url>/2024/09/14/javafx-001-hello-world/</url>
    <content><![CDATA[<h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><p><a href="https://github.com/ghost-hello-project/javafx-study/tree/main/fx-hello">https://github.com/ghost-hello-project/javafx-study/tree/main/fx-hello</a></p>
<h1 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.laolang.fx<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fx-hello<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven-surefire-plugin.version</span>&gt;</span>2.22.2<span class="tag">&lt;/<span class="name">maven-surefire-plugin.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven-compiler-plugin.version</span>&gt;</span>3.11.0<span class="tag">&lt;/<span class="name">maven-compiler-plugin.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javafx-maven-plugin.version</span>&gt;</span>8.8.3<span class="tag">&lt;/<span class="name">javafx-maven-plugin.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- test --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">testng.version</span>&gt;</span>6.14.3<span class="tag">&lt;/<span class="name">testng.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- log --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">logback.version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">logback.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- tool --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hutool.version</span>&gt;</span>5.8.11<span class="tag">&lt;/<span class="name">hutool.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">vavr.version</span>&gt;</span>0.10.4<span class="tag">&lt;/<span class="name">vavr.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapstruct.version</span>&gt;</span>1.4.2.Final<span class="tag">&lt;/<span class="name">mapstruct.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">guava.version</span>&gt;</span>23.0<span class="tag">&lt;/<span class="name">guava.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">okhttp.version</span>&gt;</span>4.9.0<span class="tag">&lt;/<span class="name">okhttp.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commons-lang3.version</span>&gt;</span>3.15.0<span class="tag">&lt;/<span class="name">commons-lang3.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">lombok.version</span>&gt;</span>1.18.30<span class="tag">&lt;/<span class="name">lombok.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- testng --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.testng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>testng<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;testng.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- log --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;logback.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- tool --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;hutool.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.vavr<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>vavr<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;vavr.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mapstruct<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapstruct<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mapstruct.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mapstruct<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapstruct-jdk8<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mapstruct.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mapstruct<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapstruct-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mapstruct.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.guava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guava<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;guava.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-lang3.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;lombok.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-compiler-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;maven.compiler.source&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;maven.compiler.target&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>$&#123;project.build.sourceEncoding&#125;<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-surefire-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--测试失败后，是否忽略并继续测试--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">testFailureIgnore</span>&gt;</span>true<span class="tag">&lt;/<span class="name">testFailureIgnore</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">argLine</span>&gt;</span></span><br><span class="line">                        -Dfile.encoding=UTF-8</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">argLine</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">suiteXmlFiles</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--该文件位于工程根目录时，直接填写名字，其它位置要加上路径--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">suiteXmlFile</span>&gt;</span>testng.xml<span class="tag">&lt;/<span class="name">suiteXmlFile</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">suiteXmlFiles</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                打包命令: mvn jfx:native</span></span><br><span class="line"><span class="comment">             --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.zenjava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javafx-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;javafx-maven-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.laolang.fx.FxHelloApplication<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">appName</span>&gt;</span>FxHello<span class="tag">&lt;/<span class="name">appName</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">vendor</span>&gt;</span>ghost<span class="tag">&lt;/<span class="name">vendor</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="FxHelloApplication"><a href="#FxHelloApplication" class="headerlink" title="FxHelloApplication"></a>FxHelloApplication</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.fx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javafx.application.Application;</span><br><span class="line"><span class="keyword">import</span> javafx.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> javafx.event.EventHandler;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.Scene;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.control.Alert;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.control.Button;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.layout.StackPane;</span><br><span class="line"><span class="keyword">import</span> javafx.stage.Stage;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FxHelloApplication</span> <span class="keyword">extends</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;fx hello is running...&quot;</span>);</span><br><span class="line">        launch(args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">(Stage primaryStage)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>();</span><br><span class="line">        btn.setText(<span class="string">&quot;Say &#x27;Hello World&#x27;&quot;</span>);</span><br><span class="line">        btn.setOnAction(<span class="keyword">new</span> <span class="title class_">EventHandler</span>&lt;ActionEvent&gt;() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handle</span><span class="params">(ActionEvent event)</span> &#123;</span><br><span class="line">                <span class="type">Alert</span> <span class="variable">alert</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Alert</span>(Alert.AlertType.INFORMATION);</span><br><span class="line">                alert.setTitle(<span class="string">&quot;Information Dialog&quot;</span>);</span><br><span class="line">                alert.setHeaderText(<span class="string">&quot;Look, an Information Dialog&quot;</span>);</span><br><span class="line">                alert.setContentText(<span class="string">&quot;I have a great message for you!&quot;</span>);</span><br><span class="line"></span><br><span class="line">                alert.showAndWait();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="type">StackPane</span> <span class="variable">root</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StackPane</span>();</span><br><span class="line">        root.getChildren().add(btn);</span><br><span class="line"></span><br><span class="line">        <span class="type">Scene</span> <span class="variable">scene</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scene</span>(root, <span class="number">300</span>, <span class="number">250</span>);</span><br><span class="line"></span><br><span class="line">        primaryStage.setTitle(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">        primaryStage.setScene(scene);</span><br><span class="line">        primaryStage.show();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h1 id="启动效果"><a href="#启动效果" class="headerlink" title="启动效果"></a>启动效果</h1><p><img src="/images/2024-09-14-javafx-001-hello-world/001.png"></p>
<h1 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h1><p>执行 <code>mvn jfx:native</code> 即可在 <code>target/jfx/native/FxHello</code> 生成本地的绿色包</p>
<p><img src="/images/2024-09-14-javafx-001-hello-world/002.png"></p>
]]></content>
      <categories>
        <category>java</category>
        <category>javafx</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>javafx</tag>
      </tags>
  </entry>
  <entry>
    <title>maven 笔记</title>
    <url>/2024/09/15/maven-note/</url>
    <content><![CDATA[<h1 id="阿里云镜像"><a href="#阿里云镜像" class="headerlink" title="阿里云镜像"></a>阿里云镜像</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="maven-基本操作"><a href="#maven-基本操作" class="headerlink" title="maven 基本操作"></a>maven 基本操作</h1><h2 id="设置-MAVEN-OPTS-环境变量"><a href="#设置-MAVEN-OPTS-环境变量" class="headerlink" title="设置 MAVEN_OPTS 环境变量"></a>设置 MAVEN_OPTS 环境变量</h2><p>通常 <code>MAVEN_OPTS</code> 用来配置运行时内存大小</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-Xms1024m -Xmx1024m</span><br></pre></td></tr></table></figure>


<p>如果不指定, 则使用本机默认的 <code>jvm</code> 配置, 例如我的电脑上默认配置如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\code\idea\maven-study\maven-study\jx-boot&gt;java -XX:+PrintFlagsFinal -version | findstr /i &quot;HeapSize PermSize ThreadStackSize&quot;</span><br><span class="line">     intx CompilerThreadStackSize                   = 0                                   &#123;pd product&#125;</span><br><span class="line">    uintx ErgoHeapSizeLimit                         = 0                                   &#123;product&#125;</span><br><span class="line">    uintx HeapSizePerGCThread                       = 87241520                            &#123;product&#125;</span><br><span class="line">    uintx InitialHeapSize                          := 1069547520                          &#123;product&#125;</span><br><span class="line">    uintx LargePageHeapSizeThreshold                = 134217728                           &#123;product&#125;</span><br><span class="line">    uintx MaxHeapSize                              := 4227858432                          &#123;product&#125;</span><br><span class="line">     intx ThreadStackSize                           = 0                                   &#123;pd product&#125;</span><br><span class="line">     intx VMThreadStackSize                         = 0                                   &#123;pd product&#125;</span><br><span class="line">java version &quot;1.8.0_151&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_151-b12)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.151-b12, mixed mode)</span><br><span class="line"></span><br><span class="line">E:\code\idea\maven-study\maven-study\jx-boot&gt;</span><br></pre></td></tr></table></figure>

<p><code>Xms</code> 配置为 1G</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uintx InitialHeapSize                          := 1069547520                          &#123;product&#125;</span><br></pre></td></tr></table></figure>

<p><code>Xmx</code> 配置为 4G</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uintx MaxHeapSize                              := 4227858432                          &#123;product&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>关于 <code>java8</code> 查看默认内存大小的方法: </p>
<p>windows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -XX:+PrintFlagsFinal -version | findstr /i &quot;HeapSize PermSize ThreadStackSize&quot;</span><br></pre></td></tr></table></figure>

<p>linux:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -XX:+PrintFlagsFinal -version | grep -iE &#x27;HeapSize|PermSize|ThreadStackSize&#x27;</span><br></pre></td></tr></table></figure>

<p>关于 <code>jvm</code> 各种内存大小的含义可参考: <a href="https://blog.csdn.net/superzyl/article/details/79077166">java -Xms -Xmx -XX:PermSize -XX:MaxPermSize-详解</a></p>
</blockquote>
<h1 id="maven-常用插件"><a href="#maven-常用插件" class="headerlink" title="maven 常用插件"></a>maven 常用插件</h1><h2 id="exec-maven-plugin"><a href="#exec-maven-plugin" class="headerlink" title="exec-maven-plugin"></a>exec-maven-plugin</h2><h3 id="命令说明"><a href="#命令说明" class="headerlink" title="命令说明"></a>命令说明</h3><p><code>exec:exec</code> : execute programs and Java programs in a separate process.<br><code>exec:java</code> : execute Java programs in the same VM.</p>
<h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><p><strong>pom.xml</strong></p>
<blockquote>
<p><strong>注意:</strong> 这是一个最小化配置</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.mojo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>exec-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executable</span>&gt;</span>java<span class="tag">&lt;/<span class="name">executable</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">arguments</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">argument</span>&gt;</span>-classpath<span class="tag">&lt;/<span class="name">argument</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">classpath</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">argument</span>&gt;</span>com.laolang.jx.JxApplication<span class="tag">&lt;/<span class="name">argument</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">arguments</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>直接执行 <code>mvn clean package exec:exec</code> 即可</p>
<blockquote>
<p><strong>注意:</strong> <code>maven-exec-plugin</code> 不会自动编译代码, 所以需要手动执行编译动作, 自动编译的方法在下面</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\code\idea\maven-study\maven-study\jx-boot&gt;mvn clean package exec:exec</span><br><span class="line">[INFO] Scanning for projects...</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] -----------------------&lt; com.laolang.jx:jx-boot &gt;-----------------------</span><br><span class="line">[INFO] Building jx-boot 1.0-SNAPSHOT</span><br><span class="line">[INFO]   from pom.xml</span><br><span class="line">[INFO] --------------------------------[ jar ]---------------------------------</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- clean:3.2.0:clean (default-clean) @ jx-boot ---</span><br><span class="line">[INFO] Deleting E:\code\idea\maven-study\maven-study\jx-boot\target</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- resources:3.3.1:resources (default-resources) @ jx-boot ---</span><br><span class="line">[WARNING] Using platform encoding (GBK actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource from src\main\resources to target\classes</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- compiler:3.13.0:compile (default-compile) @ jx-boot ---</span><br><span class="line">[INFO] Recompiling the module because of changed source code.</span><br><span class="line">[WARNING] File encoding has not been set, using platform encoding GBK, i.e. build is platform dependent!</span><br><span class="line">[INFO] Compiling 1 source file with javac [debug target 1.8] to target\classes</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- resources:3.3.1:testResources (default-testResources) @ jx-boot ---</span><br><span class="line">[WARNING] Using platform encoding (GBK actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] skip non existing resourceDirectory E:\code\idea\maven-study\maven-study\jx-boot\src\test\resources</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ jx-boot ---</span><br><span class="line">[INFO] Recompiling the module because of changed dependency.</span><br><span class="line">[WARNING] File encoding has not been set, using platform encoding GBK, i.e. build is platform dependent!</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- surefire:3.2.5:test (default-test) @ jx-boot ---</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- jar:3.4.1:jar (default-jar) @ jx-boot ---</span><br><span class="line">[INFO] Building jar: E:\code\idea\maven-study\maven-study\jx-boot\target\jx-boot-1.0-SNAPSHOT.jar</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- exec:3.4.1:exec (default-cli) @ jx-boot ---</span><br><span class="line">Hello World</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time:  1.025 s</span><br><span class="line">[INFO] Finished at: 2024-09-15T11:19:22+08:00</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">E:\code\idea\maven-study\maven-study\jx-boot&gt;</span><br></pre></td></tr></table></figure>

<h3 id="自动编译"><a href="#自动编译" class="headerlink" title="自动编译"></a>自动编译</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.mojo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>exec-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>exec<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executable</span>&gt;</span>java<span class="tag">&lt;/<span class="name">executable</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">arguments</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">argument</span>&gt;</span>-classpath<span class="tag">&lt;/<span class="name">argument</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">classpath</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">argument</span>&gt;</span>com.laolang.jx.JxApplication<span class="tag">&lt;/<span class="name">argument</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">arguments</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>直接执行 <code>mvn package</code> 即可, 效果如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\code\idea\maven-study\maven-study\jx-boot&gt;dir</span><br><span class="line"> 驱动器 E 中的卷是 新加卷</span><br><span class="line"> 卷的序列号是 FA05-F6BD</span><br><span class="line"></span><br><span class="line"> E:\code\idea\maven-study\maven-study\jx-boot 的目录</span><br><span class="line"></span><br><span class="line">2024/09/15  11:26    &lt;DIR&gt;          .</span><br><span class="line">2024/09/15  11:26    &lt;DIR&gt;          ..</span><br><span class="line">2024/09/15  11:26             2,030 pom.xml</span><br><span class="line">2024/09/15  10:26    &lt;DIR&gt;          src</span><br><span class="line">               1 个文件          2,030 字节</span><br><span class="line">               3 个目录 332,883,976,192 可用字节</span><br><span class="line"></span><br><span class="line">E:\code\idea\maven-study\maven-study\jx-boot&gt;mvn package</span><br><span class="line">[INFO] Scanning for projects...</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] -----------------------&lt; com.laolang.jx:jx-boot &gt;-----------------------</span><br><span class="line">[INFO] Building jx-boot 1.0-SNAPSHOT</span><br><span class="line">[INFO]   from pom.xml</span><br><span class="line">[INFO] --------------------------------[ jar ]---------------------------------</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- resources:3.3.1:resources (default-resources) @ jx-boot ---</span><br><span class="line">[WARNING] Using platform encoding (GBK actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource from src\main\resources to target\classes</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- compiler:3.13.0:compile (default-compile) @ jx-boot ---</span><br><span class="line">[INFO] Recompiling the module because of changed source code.</span><br><span class="line">[WARNING] File encoding has not been set, using platform encoding GBK, i.e. build is platform dependent!</span><br><span class="line">[INFO] Compiling 1 source file with javac [debug target 1.8] to target\classes</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- resources:3.3.1:testResources (default-testResources) @ jx-boot ---</span><br><span class="line">[WARNING] Using platform encoding (GBK actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] skip non existing resourceDirectory E:\code\idea\maven-study\maven-study\jx-boot\src\test\resources</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ jx-boot ---</span><br><span class="line">[INFO] Recompiling the module because of changed dependency.</span><br><span class="line">[WARNING] File encoding has not been set, using platform encoding GBK, i.e. build is platform dependent!</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- surefire:3.2.5:test (default-test) @ jx-boot ---</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- jar:3.4.1:jar (default-jar) @ jx-boot ---</span><br><span class="line">[INFO] Building jar: E:\code\idea\maven-study\maven-study\jx-boot\target\jx-boot-1.0-SNAPSHOT.jar</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- exec:3.4.1:exec (default) @ jx-boot ---</span><br><span class="line">Hello World</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time:  0.958 s</span><br><span class="line">[INFO] Finished at: 2024-09-15T11:26:28+08:00</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">E:\code\idea\maven-study\maven-study\jx-boot&gt;</span><br></pre></td></tr></table></figure>

<h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.mojo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>exec-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>install<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>exec<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">executable</span>&gt;</span>java<span class="tag">&lt;/<span class="name">executable</span>&gt;</span> <span class="comment">&lt;!-- executable指的是要执行什么样的命令 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">arguments</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">argument</span>&gt;</span>-DsystemProperty1=value1<span class="tag">&lt;/<span class="name">argument</span>&gt;</span> <span class="comment">&lt;!-- 这是一个系统属性参数 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">argument</span>&gt;</span>-DsystemProperty2=value2<span class="tag">&lt;/<span class="name">argument</span>&gt;</span> <span class="comment">&lt;!-- 这是一个系统属性参数 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">argument</span>&gt;</span>-XX:MaxPermSize=256m<span class="tag">&lt;/<span class="name">argument</span>&gt;</span> <span class="comment">&lt;!-- 这是一个JVM参数 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">argument</span>&gt;</span>-classpath<span class="tag">&lt;/<span class="name">argument</span>&gt;</span> <span class="comment">&lt;!-- 这是classpath属性，其值就是下面的&lt;classpath/&gt; --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">classpath</span>/&gt;</span> <span class="comment">&lt;!-- 这是exec插件最有价值的地方，工程的classpath并不需要手动指定，由exec自动计算得出 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">argument</span>&gt;</span>com.github.binarylei.Main<span class="tag">&lt;/<span class="name">argument</span>&gt;</span> <span class="comment">&lt;!-- 程序入口，主类名称 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">argument</span>&gt;</span>arg1<span class="tag">&lt;/<span class="name">argument</span>&gt;</span> <span class="comment">&lt;!-- 程序的第一个命令行参数 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">argument</span>&gt;</span>arg2<span class="tag">&lt;/<span class="name">argument</span>&gt;</span> <span class="comment">&lt;!-- 程序的第二个命令行参数 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">arguments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.cnblogs.com/binarylei/p/8628243.html">Maven系列（二）exec-maven-plugin</a></p>
<p><a href="https://www.mojohaus.org/exec-maven-plugin/">maven-exec-plugin 官方文档</a></p>
<h2 id="maven-jar-plugin"><a href="#maven-jar-plugin" class="headerlink" title="maven-jar-plugin"></a>maven-jar-plugin</h2><h2 id="命令说明-1"><a href="#命令说明-1" class="headerlink" title="命令说明"></a>命令说明</h2><p><code>jar:jar</code>: 为你的项目类创建一个包含资源的 jar 文件<br><code>jar:test-jar</code>: 为您的项目测试类创建一个 jar 文件</p>
<h2 id="打包可执行-jar"><a href="#打包可执行-jar" class="headerlink" title="打包可执行 jar"></a>打包可执行 jar</h2><p>一般 <code>maven</code> 打包的 <code>jar</code> 文件时不能直接执行的, 此时加入此插件即可执行</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-jar-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.laolang.jx.JxApplication<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="配置-classpath"><a href="#配置-classpath" class="headerlink" title="配置 classpath"></a>配置 classpath</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-jar-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.laolang.jx.JxApplication<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">addClasspath</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addClasspath</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">classpathPrefix</span>&gt;</span>dependency/<span class="tag">&lt;/<span class="name">classpathPrefix</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>此时打包后, 还需要执行 <code>mvn dependency:copy-dependencies</code> 命令, 将依赖的 <code>jar</code> 包下载下来, 此命令默认下载到 <code>target/dependency</code> 目录</p>
<h3 id="强制使用-SNAPSHOT-依赖"><a href="#强制使用-SNAPSHOT-依赖" class="headerlink" title="强制使用 SNAPSHOT 依赖"></a>强制使用 SNAPSHOT 依赖</h3><p>默认 <code>SNAPSHOT</code> 依赖不会被加载, 可以使用 <code>useUniqueVersions</code> 来启用</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">useUniqueVersions</span>&gt;</span>false<span class="tag">&lt;/<span class="name">useUniqueVersions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h3><p><a href="https://maven.org.cn/plugins/maven-jar-plugin/">Apache Maven JAR 中文文档</a><br><a href="https://blog.csdn.net/whq12789/article/details/106568531">java -jar maven项目打包提示.jar中没有主清单属性</a><br><a href="https://blog.csdn.net/txhlxy/article/details/136066509">maven插件maven-jar-plugin构建jar文件详细使用</a></p>
<h2 id="maven-shade-plugin"><a href="#maven-shade-plugin" class="headerlink" title="maven-shade-plugin"></a>maven-shade-plugin</h2><h2 id="基本使用-1"><a href="#基本使用-1" class="headerlink" title="基本使用"></a>基本使用</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-shade-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transformers</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transformer</span> <span class="attr">implementation</span>=<span class="string">&quot;org.apache.maven.plugins.shade.resource.ManifestResourceTransformer&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">manifestEntries</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Main-Class</span>&gt;</span>$&#123;app.main.class&#125;<span class="tag">&lt;/<span class="name">Main-Class</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">manifestEntries</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">transformer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">transformers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>shade<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>直接运行 <code>mvn package</code> 会生成两个文件<br><code>jx-boot-1.0-SNAPSHOT.jar</code> : 包含所有依赖<br><code>original-jx-boot-1.0-SNAPSHOT.jar</code>: 只包含项目代码, 不包含依赖</p>
<h3 id="参考-2"><a href="#参考-2" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/yangguosb/article/details/80619481">maven-shade-plugin介绍及使用</a><br><a href="https://www.cnblogs.com/lkxed/p/maven-plugin-shade.html">maven-plugin-shade 详解</a><br><a href="https://maven.apache.org/plugins/maven-shade-plugin/index.html">Apache Maven Shade Plugin 官网文档</a></p>
<h2 id="maven-antrun-plugin"><a href="#maven-antrun-plugin" class="headerlink" title="maven-antrun-plugin"></a>maven-antrun-plugin</h2><h2 id="maven-compiler-plugin"><a href="#maven-compiler-plugin" class="headerlink" title="maven-compiler-plugin"></a>maven-compiler-plugin</h2><h3 id="基本使用-2"><a href="#基本使用-2" class="headerlink" title="基本使用"></a>基本使用</h3><p>通常用来配置编译时的语言版本</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span>&gt;</span></span><br><span class="line">  [...]</span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">  [...]</span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.13.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;maven.compiler.source&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;maven.compiler.target&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>$&#123;project.build.sourceEncoding&#125;<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="参考-3"><a href="#参考-3" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/Java_1710/article/details/120992614">maven-compiler-plugin 插件详解</a><br><a href="https://maven.org.cn/plugins/maven-compiler-plugin/">maven-compiler-plugin 中文文档</a></p>
<h2 id="maven-resource-plugin"><a href="#maven-resource-plugin" class="headerlink" title="maven-resource-plugin"></a>maven-resource-plugin</h2><h2 id="maven-surefire-plugin"><a href="#maven-surefire-plugin" class="headerlink" title="maven-surefire-plugin"></a>maven-surefire-plugin</h2><h2 id="jetty-maven-plugin"><a href="#jetty-maven-plugin" class="headerlink" title="jetty-maven-plugin"></a>jetty-maven-plugin</h2><h1 id="参考-4"><a href="#参考-4" class="headerlink" title="参考"></a>参考</h1><p><a href="https://developer.aliyun.com/article/1469391">常用 Maven 插件大全（速度收藏）</a></p>
<p><a href="https://www.cnblogs.com/april-chen/p/10414857.html">Maven常用插件整理</a></p>
<p><a href="https://www.bilibili.com/video/BV12q4y147e4">尚硅谷Maven教程（maven入门+高深，全网无出其右！）</a></p>
<p><a href="https://www.bilibili.com/video/BV1nx4y1U755">动力节点最新Maven教程，maven从零到精通</a></p>
<p><a href="https://blog.csdn.net/txhlxy/category_12566515.html">玩转Maven</a></p>
<p><a href="https://blog.csdn.net/weixin_46228112/article/details/134196308">Maven系列</a></p>
]]></content>
      <categories>
        <category>java</category>
        <category>maven</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>centos 笔记</title>
    <url>/2024/09/15/centos-note/</url>
    <content><![CDATA[<h1 id="镜像下载"><a href="#镜像下载" class="headerlink" title="镜像下载"></a>镜像下载</h1><p><a href="https://mirrors.aliyun.com/centos-vault/7.4.1708/isos/x86_64/">https://mirrors.aliyun.com/centos-vault/7.4.1708/isos/x86_64&#x2F;</a></p>
<p><a href="https://mirrors.aliyun.com/centos-vault/7.4.1708/isos/x86_64/CentOS-7-x86_64-DVD-1708.iso">https://mirrors.aliyun.com/centos-vault/7.4.1708/isos/x86_64&#x2F;CentOS-7-x86_64-DVD-1708.iso</a></p>
<h1 id="virtual-box-安装"><a href="#virtual-box-安装" class="headerlink" title="virtual box 安装"></a>virtual box 安装</h1><h2 id="网卡配置"><a href="#网卡配置" class="headerlink" title="网卡配置"></a>网卡配置</h2><p><img src="/images/2024-09-15-centos-note/001.png"><br><img src="/images/2024-09-15-centos-note/002.png"></p>
<h2 id="联网配置"><a href="#联网配置" class="headerlink" title="联网配置"></a>联网配置</h2><p>安装时进入如下界面<br><img src="/images/2024-09-15-centos-note/003.png"><br>打开第一个网络连接即可<br><img src="/images/2024-09-15-centos-note/004.png"></p>
<h2 id="静态-IP-配置"><a href="#静态-IP-配置" class="headerlink" title="静态 IP 配置"></a>静态 IP 配置</h2><p>打开 <code>/etc/sysconfig/network-scripts/ifcfg-ens8</code>, 名字可能不一样, 按照上面的配置, 应该是后缀数字比较大的, 或者 <code>ip addr</code> 命令, 没有应该会看到 <code>enp0s3</code> 有 IP 地址, 打开没有 IP地址的那个进行配置就可以了, 配置如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line"></span><br><span class="line"># 设置为 static</span><br><span class="line">BOOTPROTO=static</span><br><span class="line"></span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=enp0s8</span><br><span class="line">UUID=dc7e2d0f-02c1-40fe-a394-a9b6bcfd009b</span><br><span class="line">DEVICE=enp0s8</span><br><span class="line"></span><br><span class="line"># 设置为开机启动</span><br><span class="line">ONBOOT=yes</span><br><span class="line"></span><br><span class="line"># 静态 IP</span><br><span class="line">IPADDR=192.168.56.103</span><br><span class="line"></span><br><span class="line"># 网管</span><br><span class="line">GATEWAY=192.168.56.1</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">DNS1=8.8.8.8</span><br></pre></td></tr></table></figure>


<p>IP 地址确认</p>
<p><img src="/images/2024-09-15-centos-note/005.png"></p>
<p><img src="/images/2024-09-15-centos-note/006.png"></p>
<p><img src="/images/2024-09-15-centos-note/007.png"></p>
<h2 id="设置-yum-源"><a href="#设置-yum-源" class="headerlink" title="设置 yum 源"></a>设置 yum 源</h2><blockquote>
<p>记得备份</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br><span class="line">yum update</span><br></pre></td></tr></table></figure>

<h1 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h1><h2 id="安装-docker"><a href="#安装-docker" class="headerlink" title="安装 docker"></a>安装 docker</h2><p><strong>卸载旧版本</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum remove docker \</span><br><span class="line">docker-client \</span><br><span class="line">docker-client-latest \</span><br><span class="line">docker-common \</span><br><span class="line">docker-latest \</span><br><span class="line">docker-latest-logrotate \</span><br><span class="line">docker-logrotate \</span><br><span class="line">docker-engine</span><br></pre></td></tr></table></figure>


<p><strong>安装依赖包</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y yum-utils</span><br></pre></td></tr></table></figure>

<p><strong>配置镜像仓库</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum-config-manager \</span><br><span class="line">--add-repo \</span><br><span class="line">https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure>

<p><strong>更新 yum 索引</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum makecache fast</span><br></pre></td></tr></table></figure>

<p><strong>安装 docker</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 红帽系列</span><br><span class="line">yum install -y yajl</span><br><span class="line"># ubuntu 系列</span><br><span class="line">apt-get install yajl-tools </span><br></pre></td></tr></table></figure>



<h2 id="docker-加速镜像"><a href="#docker-加速镜像" class="headerlink" title="docker 加速镜像"></a>docker 加速镜像</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;xxx&quot;] 切换成自己的地址</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>996.icu</category>
        <category>linux</category>
        <category>centos</category>
      </categories>
      <tags>
        <tag>996.icu</tag>
        <tag>linux</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>php 环境搭建</title>
    <url>/2024/09/16/php-setup/</url>
    <content><![CDATA[<h1 id="下载-php"><a href="#下载-php" class="headerlink" title="下载 php"></a>下载 php</h1><p><a href="https://windows.php.net/downloads/releases/archives/">https://windows.php.net/downloads/releases/archives/</a></p>
<p>7.4.33 下载链接如下:</p>
<p><a href="https://windows.php.net/downloads/releases/archives/php-7.4.33-Win32-vc15-x64.zip">https://windows.php.net/downloads/releases/archives/php-7.4.33-Win32-vc15-x64.zip</a></p>
<h1 id="php-Hello-World-搭建"><a href="#php-Hello-World-搭建" class="headerlink" title="php Hello World 搭建"></a>php Hello World 搭建</h1><h2 id="php-配置"><a href="#php-配置" class="headerlink" title="php 配置"></a>php 配置</h2><p>解压后, 复制一份 <code>php.ini-development</code> 为 <code>php.ini</code>, 修改如下两个配置</p>
<p><strong>extension_dir</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; Directory in which the loadable extensions (modules) reside.</span><br><span class="line">; http://php.net/extension-dir</span><br><span class="line">;extension_dir = &quot;./&quot;</span><br><span class="line">; On windows:</span><br><span class="line">extension_dir = &quot;ext&quot;</span><br></pre></td></tr></table></figure>

<p><strong>cgi.fix_pathinfo</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cgi.fix_pathinfo=1</span><br></pre></td></tr></table></figure>

<h2 id="nginx-配置"><a href="#nginx-配置" class="headerlink" title="nginx 配置"></a>nginx 配置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.km-php-dev.com;</span><br><span class="line">    access_log E:/code/php/km/log/www.km-php-dev.com.access.log combined;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   E:/code/php/km/public;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123; </span><br><span class="line">        #网站根目录（跟上面那个一样）</span><br><span class="line">        root E:/code/php/km/public;</span><br><span class="line"></span><br><span class="line">        #php-cgi监听端口号（默认9000，根据实际情况自己修改）     </span><br><span class="line"></span><br><span class="line">        fastcgi_pass 127.0.0.1:9001;   </span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line"></span><br><span class="line">        #下面这里要改看清楚原本是/script$fastcgi_script_name，改成$document_root$fastcgi_script_name;  </span><br><span class="line"></span><br><span class="line">        #$document_root其实就是上面的root，可以直接改成绝对路径E:/self/www$fastcgi_script_name这样子，你喜欢</span><br><span class="line"></span><br><span class="line">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;  </span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="执行如下命令"><a href="#执行如下命令" class="headerlink" title="执行如下命令"></a>执行如下命令</h2><blockquote>
<p>此窗口不可关闭</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\program\php\php7\php-cgi.exe -b 127.0.0.1:9001 -c D:\program\php\php7\php.ini</span><br></pre></td></tr></table></figure>

<h2 id="phpinfo-php"><a href="#phpinfo-php" class="headerlink" title="phpinfo.php"></a>phpinfo.php</h2><p>在 <code>E:/code/php/km/public</code> 目录下添加一个 <code>phpinfo.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="title function_ invoke__">phpinfo</span>();</span><br></pre></td></tr></table></figure>

<h2 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h2><p>直接访问 <code>www.km-php-dev.com</code> 即可</p>
<h1 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h1><h2 id="下载-xdebug"><a href="#下载-xdebug" class="headerlink" title="下载 xdebug"></a>下载 xdebug</h2><ol>
<li><p>访问 <code>phpinfo.php</code>, 然后查看源代码, 全选并赋值</p>
</li>
<li><p>访问 <a href="https://xdebug.org/wizard">https://xdebug.org/wizard</a> , 将刚才赋值的内容直接粘贴到输入框中, 然后点击 <code>Analyse my phpinfo() output</code><br><img src="/images/2024-09-16-php-setup/001.png"></p>
</li>
<li><p>下载 xdebug<br><img src="/images/2024-09-16-php-setup/002.png"></p>
</li>
</ol>
<h2 id="php-ini"><a href="#php-ini" class="headerlink" title="php.ini"></a>php.ini</h2><p>在文件最后添加如下配置</p>
<blockquote>
<p>注意: </p>
<ol>
<li>路径一定要写正确</li>
<li>配置要用最新的, 否则 <code>debug</code> 无效</li>
<li>端口号不能用 <code>9001</code>, 因为 <code>php-cgi</code> 已经占用了</li>
</ol>
</blockquote>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">zend_extension</span> = D:/program/php/php7/ext/php_xdebug-<span class="number">3.1</span>.<span class="number">6</span>-<span class="number">7.4</span>-vc15-x<span class="number">86_64</span>.dll</span><br><span class="line"><span class="attr">xdebug.client_port</span>=<span class="number">9003</span>	<span class="comment">#本地默认9000端口冲突改成了9001</span></span><br><span class="line"><span class="attr">xdebug.client_host</span>=<span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">xdebug.mode</span>=debug</span><br><span class="line"><span class="attr">xdebug.log</span>=D:/program/php/php7/temp/debug.log	<span class="comment">#日志路径</span></span><br><span class="line"><span class="attr">xdebug.start_with_request</span>=<span class="literal">yes</span></span><br></pre></td></tr></table></figure>

<h2 id="vscode"><a href="#vscode" class="headerlink" title="vscode"></a>vscode</h2><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p><img src="/images/2024-09-16-php-setup/003.png"></p>
<h3 id="设置-php-路径"><a href="#设置-php-路径" class="headerlink" title="设置 php 路径"></a>设置 php 路径</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;php.validate.executablePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;D:/program/php/php7/php.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;php.debug.executablePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;D:/program/php/php7/php.exe&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="launch-json"><a href="#launch-json" class="headerlink" title="launch.json"></a>launch.json</h3><blockquote>
<p>注意</p>
<ol>
<li>修改端口号</li>
<li>目前只用到了第一个</li>
</ol>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// 使用 IntelliSense 了解相关属性。 </span></span><br><span class="line">    <span class="comment">// 悬停以查看现有属性的描述。</span></span><br><span class="line">    <span class="comment">// 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Listen for Xdebug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;php&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">9003</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Launch currently open script&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;php&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;file&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;fileDirname&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;runtimeArgs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-dxdebug.start_with_request=yes&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;env&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;XDEBUG_MODE&quot;</span><span class="punctuation">:</span> <span class="string">&quot;debug,develop&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;XDEBUG_CONFIG&quot;</span><span class="punctuation">:</span> <span class="string">&quot;client_port=$&#123;port&#125;&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Launch Built-in web server&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;php&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;runtimeArgs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-dxdebug.mode=debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-dxdebug.start_with_request=yes&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-S&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;localhost:0&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceRoot&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">9003</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;serverReadyAction&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;pattern&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Development Server \\(http://localhost:([0-9]+)\\) started&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;uriFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://localhost:%s&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;action&quot;</span><span class="punctuation">:</span> <span class="string">&quot;openExternally&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="/images/2024-09-16-php-setup/004.png"></p>
<h1 id="composer"><a href="#composer" class="headerlink" title="composer"></a>composer</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在 <a href="https://getcomposer.org/download/">https://getcomposer.org/download/</a> 下载二进制安装包</p>
<blockquote>
<p>注意:<br>安装时先注释 <code>xdebug.log</code> 配置, 否则无法安装</p>
</blockquote>
<p><img src="/images/2024-09-16-php-setup/005.png"></p>
<h2 id="配置阿里云镜像"><a href="#配置阿里云镜像" class="headerlink" title="配置阿里云镜像"></a>配置阿里云镜像</h2><p><strong>全局配置</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/</span><br></pre></td></tr></table></figure>

<p><strong>取消配置</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">composer config -g --unset repos.packagist</span><br></pre></td></tr></table></figure>

<p><strong>项目配置</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">composer config repo.packagist composer https://mirrors.aliyun.com/composer/</span><br></pre></td></tr></table></figure>

<p><strong>取消配置</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">composer config --unset repos.packagist</span><br></pre></td></tr></table></figure>

<h1 id="Laravel"><a href="#Laravel" class="headerlink" title="Laravel"></a>Laravel</h1><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://learnku.com/docs/laravel/8.x/">Laravel 8 中文文档</a></p>
<h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><p>在 <a href="https://packagist.org/">https://packagist.org/</a> 可搜索镜像</p>
<h3 id="安装命令"><a href="#安装命令" class="headerlink" title="安装命令"></a>安装命令</h3><blockquote>
<p><code>km</code> 为项目目录<br>此处制定了版本</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">composer -vvv create-project laravel/laravel km 8.x</span><br></pre></td></tr></table></figure>

<h3 id="问题一-扩展没有打开"><a href="#问题一-扩展没有打开" class="headerlink" title="问题一 扩展没有打开"></a>问题一 扩展没有打开</h3><p>打开 <code>extension=fileinfo</code> 即可</p>
<h3 id="问题二-卡在-Extracting-archive"><a href="#问题二-卡在-Extracting-archive" class="headerlink" title="问题二 卡在 Extracting archive"></a>问题二 卡在 Extracting archive</h3><p>添加 <code>-vvv</code> 参数之后看到卡在了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">d:\app\user\product\11.2.0\client_1\bin\unzip.EXE -qq E:\code\php\vendor\composer\tmp-848a407aefea61139a294c45b8f051c8.zip -d E:\code\php\vendor\composer\9ae58902d:\app\user\product\11.2.0\client_1\bin\unzip.EXE -qq E:\code\php\vendor\composer\tmp-848a407aefea61139a294c45b8f051c8.zip -d E:\code\php\vendor\composer\9ae58902</span><br></pre></td></tr></table></figure>

<p>上述命令使用的是 <code>oracle</code> 安装目录的 <code>unzip.exe</code>, 手动下载 <code>unzip</code>, 网址: <a href="https://gnuwin32.sourceforge.net/packages/unzip.htm">https://gnuwin32.sourceforge.net/packages/unzip.htm</a> , 并添加到环境变量, 注意要放在 <code>oracle</code> 环境变量前面</p>
<p>清除缓存</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">composer clearcache</span><br></pre></td></tr></table></figure>

<h2 id="去掉-index-php"><a href="#去掉-index-php" class="headerlink" title="去掉 index.php"></a>去掉 index.php</h2><p>关键是下面两行代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root   E:/code/php/km/public/index.php;</span><br><span class="line">try_files $uri $uri/ /index.php?$query_string;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#允许进程数量，建议设置为cpu核心数或者auto自动检测，注意Windows服务器上虽然可以启动多个processes，但是实际只会用其中一个</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    # 单个进程最大连接数（最大连接数=连接数*进程数）</span><br><span class="line">    # 根据硬件调整，和前面工作进程配合起来用，尽量大，但是别把cpu跑到100%就行。</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    # 文件扩展名与文件类型映射表(是conf目录下的一个文件)</span><br><span class="line">    include       mime.types;</span><br><span class="line">    # 默认文件类型，如果mime.types预先定义的类型没匹配上，默认使用二进制流的方式传输</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    # sendfile指令指定nginx是否调用sendfile 函数（zero copy 方式）来输出文件，对于普通应用，必须设为on。</span><br><span class="line">    # 如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络IO处理速度。</span><br><span class="line">    sendfile        on;</span><br><span class="line"></span><br><span class="line">    # 长连接超时时间，单位是秒</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    # 虚拟主机的配置</span><br><span class="line">    server &#123;</span><br><span class="line">        # 监听端口</span><br><span class="line">        listen       80;</span><br><span class="line">        # 域名，可以有多个，用空格隔开</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        # 配置根目录以及默认页面</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        # 出错页面配置</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        # /50x.html文件所在位置</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # 引用其他配置文件, 可以是相对路径或绝对路径</span><br><span class="line">    include km-php-dev/*.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.cnblogs.com/wwjchina/p/9804576.html">windows下搭建nginx+php开发环境</a><br><a href="https://zhuanlan.zhihu.com/p/417585043">Windows安装PHP调试工具Xdebug</a><br><a href="https://blog.csdn.net/yywCode/article/details/119699977">vscode调试php（解决vscode远程调试无效的问题）</a><br><a href="https://www.runoob.com/w3cnote/composer-install-and-usage.html">菜鸟教程 · Composer 安装与使用</a><br><a href="https://developer.aliyun.com/composer">阿里云 Composer 全量镜像</a><br><a href="https://learnku.com/laravel/t/8631/do-you-configure-lnmp-to-run-laravel-for-403-forbidden">自己配置 lnmp 运行 Laravel 出现了 403 Forbidden？</a><br><a href="https://learnku.com/articles/25861">浅析 Laravel 官方文档推荐的 Nginx 配置</a><br><a href="https://blog.csdn.net/sitetesty/article/details/122303333">laravel历史版本对照表、安装方法、查看版本号</a></p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx 笔记</title>
    <url>/2024/09/15/nginx-note/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>996.icu</category>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>996.icu</tag>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>webpack 笔记</title>
    <url>/2024/09/19/webpack-note/</url>
    <content><![CDATA[<h1 id="资料汇总"><a href="#资料汇总" class="headerlink" title="资料汇总"></a>资料汇总</h1><p><a href="https://www.webpackjs.com/">webpack 中文网</a></p>
<p><a href="https://www.bilibili.com/video/BV14T4y1z7sw">尚硅谷Webpack5入门到原理（面试开发一条龙）</a><br><a href="https://pan.baidu.com/s/114lJRGua2uHBdLq_iVLOOQ">https://pan.baidu.com/s/114lJRGua2uHBdLq_iVLOOQ</a> 提取码：yyds</p>
<h1 id="多页面基本使用"><a href="#多页面基本使用" class="headerlink" title="多页面基本使用"></a>多页面基本使用</h1><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><p><img src="/images/2024-09-19-webpack-note/001.png"></p>
<h2 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack-hello&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./src/main.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;npm run dev&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;npx webpack serve --config ./config/webpack.dev.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;npx webpack --config ./config/webpack.prod.js&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ISC&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;@babel/core&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.25.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;@babel/preset-env&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.25.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;babel-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^9.2.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;copy-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^12.0.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;css-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.1.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;css-minimizer-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;html-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.6.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;mini-css-extract-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.9.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;postcss&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^8.4.47&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;postcss-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^8.1.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;postcss-preset-env&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^10.0.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sass&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.79.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sass-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^16.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;style-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;webpack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.94.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;webpack-cli&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.1.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;webpack-dev-server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.1.0&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="webpack-dev-js"><a href="#webpack-dev-js" class="headerlink" title="webpack.dev.js"></a>webpack.dev.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> modules = [<span class="string">&#x27;index&#x27;</span>, <span class="string">&#x27;article&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// Node.js的核心模块，专门用来处理文件路径</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">HtmlWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CopyWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;copy-webpack-plugin&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MiniCssExtractPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;mini-css-extract-plugin&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CssMinimizerPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;css-minimizer-webpack-plugin&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getStyleLoaders</span> = (<span class="params">preProcessor</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> [</span><br><span class="line">        <span class="title class_">MiniCssExtractPlugin</span>.<span class="property">loader</span>,</span><br><span class="line">        <span class="string">&#x27;css-loader&#x27;</span>,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">loader</span>: <span class="string">&#x27;postcss-loader&#x27;</span>,</span><br><span class="line">            <span class="attr">options</span>: &#123;</span><br><span class="line">                <span class="attr">postcssOptions</span>: &#123;</span><br><span class="line">                    <span class="attr">plugins</span>: [</span><br><span class="line">                        <span class="string">&#x27;postcss-preset-env&#x27;</span> <span class="comment">// 能解决大多数样式兼容性问题</span></span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        preProcessor</span><br><span class="line">    ].<span class="title function_">filter</span>(<span class="title class_">Boolean</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getModuleEntry</span> = (<span class="params">moduleName</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;../src/build/&#x27;</span> + moduleName + <span class="string">&#x27;.js&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getModuleHtml</span> = (<span class="params">moduleName</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;html/&#x27;</span> + moduleName + <span class="string">&#x27;.html&#x27;</span>,</span><br><span class="line">        <span class="attr">template</span>: <span class="string">&#x27;./src/html/&#x27;</span> + moduleName + <span class="string">&#x27;.html&#x27;</span>,</span><br><span class="line">        <span class="attr">chunks</span>: [<span class="string">&#x27;common&#x27;</span>, moduleName],</span><br><span class="line">        <span class="attr">inject</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">hash</span>: <span class="literal">true</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> moduleConfig = &#123;</span><br><span class="line">    <span class="attr">entry</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">html</span>: []</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">modules.<span class="title function_">forEach</span>(<span class="function">(<span class="params">m</span>) =&gt;</span> &#123;</span><br><span class="line">    moduleConfig.<span class="property">entry</span>[m] = <span class="title function_">getModuleEntry</span>(m)</span><br><span class="line">    moduleConfig.<span class="property">html</span>.<span class="title function_">push</span>(<span class="title function_">getModuleHtml</span>(m))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="comment">// 入口</span></span><br><span class="line">    <span class="comment">// 相对路径和绝对路径都行</span></span><br><span class="line">    <span class="attr">entry</span>: &#123;</span><br><span class="line">        <span class="attr">common</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;../src/build/common.js&#x27;</span>),</span><br><span class="line">        ...moduleConfig.<span class="property">entry</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 输出</span></span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="comment">// path: 文件输出目录，必须是绝对路径</span></span><br><span class="line">        <span class="comment">// path.resolve()方法返回一个绝对路径</span></span><br><span class="line">        <span class="comment">// __dirname 当前文件的文件夹绝对路径</span></span><br><span class="line">        <span class="attr">path</span>: <span class="literal">undefined</span>,</span><br><span class="line">        <span class="comment">// filename: 输出文件名</span></span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;static/js/[name].js&#x27;</span>,</span><br><span class="line">        <span class="comment">// 自动将上次打包目录资源清空</span></span><br><span class="line">        <span class="attr">clean</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 加载器</span></span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [</span><br><span class="line">            <span class="comment">// css</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 用来匹配 .css 结尾的文件</span></span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,</span><br><span class="line">                <span class="comment">// use 数组里面 Loader 执行顺序是从右到左</span></span><br><span class="line">                <span class="attr">use</span>: <span class="title function_">getStyleLoaders</span>()</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// sass</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.s[ac]ss$/</span>,</span><br><span class="line">                <span class="attr">use</span>: <span class="title function_">getStyleLoaders</span>(<span class="string">&#x27;sass-loader&#x27;</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// 图片</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.(png|jpe?g|gif|webp)$/</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;asset&#x27;</span>,</span><br><span class="line">                <span class="attr">generator</span>: &#123;</span><br><span class="line">                    <span class="comment">// 将图片文件输出到 static/imgs 目录中</span></span><br><span class="line">                    <span class="comment">// 将图片文件命名 [hash:8][ext][query]</span></span><br><span class="line">                    <span class="comment">// [hash:8]: hash值取8位</span></span><br><span class="line">                    <span class="comment">// [ext]: 使用之前的文件扩展名</span></span><br><span class="line">                    <span class="comment">// [query]: 添加之前的query参数</span></span><br><span class="line">                    <span class="attr">filename</span>: <span class="string">&#x27;static/imgs/[hash:8][ext][query]&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// js</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.js$/</span>,</span><br><span class="line">                <span class="attr">include</span>: [path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;src/js&#x27;</span>), path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;src/build&#x27;</span>)],</span><br><span class="line">                <span class="attr">loader</span>: <span class="string">&#x27;babel-loader&#x27;</span>,</span><br><span class="line">                <span class="attr">options</span>: &#123;</span><br><span class="line">                    <span class="attr">cacheDirectory</span>: <span class="literal">true</span>, <span class="comment">// 开启babel编译缓存</span></span><br><span class="line">                    <span class="attr">cacheCompression</span>: <span class="literal">false</span> <span class="comment">// 缓存文件不要压缩</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 插件</span></span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">CopyWebpackPlugin</span>(&#123;</span><br><span class="line">            <span class="attr">patterns</span>: [</span><br><span class="line">                &#123; <span class="attr">from</span>: <span class="string">&#x27;./src/libs&#x27;</span>, <span class="attr">to</span>: <span class="string">&#x27;libs&#x27;</span> &#125;,</span><br><span class="line">                &#123; <span class="attr">from</span>: <span class="string">&#x27;./src/images&#x27;</span>, <span class="attr">to</span>: <span class="string">&#x27;images&#x27;</span> &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">MiniCssExtractPlugin</span>(&#123;</span><br><span class="line">            <span class="attr">filename</span>: <span class="string">&#x27;static/css/[name].css&#x27;</span></span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">CssMinimizerPlugin</span>(),</span><br><span class="line">        ...moduleConfig.<span class="property">html</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">devServer</span>: &#123;</span><br><span class="line">        <span class="attr">host</span>: <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">        <span class="attr">port</span>: <span class="string">&#x27;12016&#x27;</span>,</span><br><span class="line">        <span class="attr">open</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">hot</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 模式</span></span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&#x27;development&#x27;</span>,</span><br><span class="line">    <span class="attr">devtool</span>: <span class="string">&#x27;cheap-module-source-map&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="webpack-prod-js"><a href="#webpack-prod-js" class="headerlink" title="webpack.prod.js"></a>webpack.prod.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> modules = [<span class="string">&#x27;index&#x27;</span>, <span class="string">&#x27;article&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// Node.js的核心模块，专门用来处理文件路径</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">HtmlWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CopyWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;copy-webpack-plugin&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MiniCssExtractPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;mini-css-extract-plugin&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CssMinimizerPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;css-minimizer-webpack-plugin&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getStyleLoaders</span> = (<span class="params">preProcessor</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> [</span><br><span class="line">        <span class="title class_">MiniCssExtractPlugin</span>.<span class="property">loader</span>,</span><br><span class="line">        <span class="string">&#x27;css-loader&#x27;</span>,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">loader</span>: <span class="string">&#x27;postcss-loader&#x27;</span>,</span><br><span class="line">            <span class="attr">options</span>: &#123;</span><br><span class="line">                <span class="attr">postcssOptions</span>: &#123;</span><br><span class="line">                    <span class="attr">plugins</span>: [</span><br><span class="line">                        <span class="string">&#x27;postcss-preset-env&#x27;</span> <span class="comment">// 能解决大多数样式兼容性问题</span></span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        preProcessor</span><br><span class="line">    ].<span class="title function_">filter</span>(<span class="title class_">Boolean</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getModuleEntry</span> = (<span class="params">moduleName</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;../src/build/&#x27;</span> + moduleName + <span class="string">&#x27;.js&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getModuleHtml</span> = (<span class="params">moduleName</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;html/&#x27;</span> + moduleName + <span class="string">&#x27;.html&#x27;</span>,</span><br><span class="line">        <span class="attr">template</span>: <span class="string">&#x27;./src/html/&#x27;</span> + moduleName + <span class="string">&#x27;.html&#x27;</span>,</span><br><span class="line">        <span class="attr">chunks</span>: [<span class="string">&#x27;common&#x27;</span>, moduleName],</span><br><span class="line">        <span class="attr">inject</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">hash</span>: <span class="literal">true</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> moduleConfig = &#123;</span><br><span class="line">    <span class="attr">entry</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">html</span>: []</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">modules.<span class="title function_">forEach</span>(<span class="function">(<span class="params">m</span>) =&gt;</span> &#123;</span><br><span class="line">    moduleConfig.<span class="property">entry</span>[m] = <span class="title function_">getModuleEntry</span>(m)</span><br><span class="line">    moduleConfig.<span class="property">html</span>.<span class="title function_">push</span>(<span class="title function_">getModuleHtml</span>(m))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="comment">// 入口</span></span><br><span class="line">    <span class="comment">// 相对路径和绝对路径都行</span></span><br><span class="line">    <span class="attr">entry</span>: &#123;</span><br><span class="line">        <span class="attr">common</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;../src/build/common.js&#x27;</span>),</span><br><span class="line">        ...moduleConfig.<span class="property">entry</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 输出</span></span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="comment">// path: 文件输出目录，必须是绝对路径</span></span><br><span class="line">        <span class="comment">// path.resolve()方法返回一个绝对路径</span></span><br><span class="line">        <span class="comment">// __dirname 当前文件的文件夹绝对路径</span></span><br><span class="line">        <span class="attr">path</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;../dist&#x27;</span>),</span><br><span class="line">        <span class="comment">// filename: 输出文件名</span></span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;static/js/[name].js&#x27;</span>,</span><br><span class="line">        <span class="comment">// 自动将上次打包目录资源清空</span></span><br><span class="line">        <span class="attr">clean</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 加载器</span></span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [</span><br><span class="line">            <span class="comment">// css</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 用来匹配 .css 结尾的文件</span></span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,</span><br><span class="line">                <span class="comment">// use 数组里面 Loader 执行顺序是从右到左</span></span><br><span class="line">                <span class="attr">use</span>: <span class="title function_">getStyleLoaders</span>()</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// sass</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.s[ac]ss$/</span>,</span><br><span class="line">                <span class="attr">use</span>: <span class="title function_">getStyleLoaders</span>(<span class="string">&#x27;sass-loader&#x27;</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// 图片</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.(png|jpe?g|gif|webp)$/</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;asset&#x27;</span>,</span><br><span class="line">                <span class="attr">generator</span>: &#123;</span><br><span class="line">                    <span class="comment">// 将图片文件输出到 static/imgs 目录中</span></span><br><span class="line">                    <span class="comment">// 将图片文件命名 [hash:8][ext][query]</span></span><br><span class="line">                    <span class="comment">// [hash:8]: hash值取8位</span></span><br><span class="line">                    <span class="comment">// [ext]: 使用之前的文件扩展名</span></span><br><span class="line">                    <span class="comment">// [query]: 添加之前的query参数</span></span><br><span class="line">                    <span class="attr">filename</span>: <span class="string">&#x27;static/imgs/[hash:8][ext][query]&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// js</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.js$/</span>,</span><br><span class="line">                <span class="attr">include</span>: [path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;src/js&#x27;</span>), path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;src/build&#x27;</span>)],</span><br><span class="line">                <span class="attr">loader</span>: <span class="string">&#x27;babel-loader&#x27;</span>,</span><br><span class="line">                <span class="attr">options</span>: &#123;</span><br><span class="line">                    <span class="attr">cacheDirectory</span>: <span class="literal">true</span>, <span class="comment">// 开启babel编译缓存</span></span><br><span class="line">                    <span class="attr">cacheCompression</span>: <span class="literal">false</span> <span class="comment">// 缓存文件不要压缩</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 插件</span></span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">CopyWebpackPlugin</span>(&#123;</span><br><span class="line">            <span class="attr">patterns</span>: [</span><br><span class="line">                &#123; <span class="attr">from</span>: <span class="string">&#x27;./src/libs&#x27;</span>, <span class="attr">to</span>: <span class="string">&#x27;libs&#x27;</span> &#125;,</span><br><span class="line">                &#123; <span class="attr">from</span>: <span class="string">&#x27;./src/images&#x27;</span>, <span class="attr">to</span>: <span class="string">&#x27;images&#x27;</span> &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">MiniCssExtractPlugin</span>(&#123;</span><br><span class="line">            <span class="attr">filename</span>: <span class="string">&#x27;static/css/[name].css&#x27;</span></span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">CssMinimizerPlugin</span>(),</span><br><span class="line">        ...moduleConfig.<span class="property">html</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">devServer</span>: &#123;</span><br><span class="line">        <span class="attr">host</span>: <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">        <span class="attr">port</span>: <span class="string">&#x27;12016&#x27;</span>,</span><br><span class="line">        <span class="attr">open</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">hot</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 模式</span></span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&#x27;production&#x27;</span>,</span><br><span class="line">    <span class="attr">devtool</span>: <span class="string">&#x27;source-map&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="src-build-index-js"><a href="#src-build-index-js" class="headerlink" title="src&#x2F;build&#x2F;index.js"></a>src&#x2F;build&#x2F;index.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;../sass/index.scss&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;../js/common&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;../js/index&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
        <category>webpack</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>webpack</tag>
      </tags>
  </entry>
  <entry>
    <title>jwt</title>
    <url>/2024/09/21/jwt/</url>
    <content><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://mp.weixin.qq.com/s/bQnoeS1ZwROoaPGIR8oCKg">SpringBoot中Token登录授权、续期和主动终止的方案(Redis+Token)</a><br><a href="https://mp.weixin.qq.com/s/vN7uc-5hVX8_343ifCGQQw">SpringBoot中基于JWT的单token授权和续期方案</a><br><a href="https://mp.weixin.qq.com/s/q7ZdtU2yjp937uD1xb258A">SpringBoot中基于JWT的双token（access_token+refresh_token）授权和续期方案</a></p>
<p><a href="https://blog.csdn.net/weixin_43721000/article/details/125042403">SpringBoot+JWT实现注册、登录、状态续签【登录保持】</a></p>
<p><a href="https://blog.csdn.net/qq_44286009/article/details/139575994">https://blog.csdn.net/qq_44286009&#x2F;article&#x2F;details&#x2F;139575994</a></p>
<p><a href="https://jwt.io/">jwt 官网</a></p>
<p><a href="https://ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html">阮一峰的网络日志 · JSON Web Token 入门教程</a></p>
<p><a href="https://developer.aliyun.com/article/1358589">还分不清 Cookie、Session、Token、JWT？看这一篇就够了</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/157533263">听说你的JWT库用起来特别扭，推荐这款贼好用的</a></p>
<p><a href="https://www.cnblogs.com/hlkawa/p/13675792.html">各类JWT库(java)的对比</a></p>
<p><a href="https://blog.csdn.net/shenyunmomie/article/details/139805325">JJWT最新版本0.12.x使用指南，实现登陆功能，JwtUtils</a><br><a href="https://blog.csdn.net/qq_50969362/article/details/134100542">2023-10 最新jsonwebtoken-jjwt 0.12.3 基本使用</a></p>
<h1 id="jwt-的结构"><a href="#jwt-的结构" class="headerlink" title="jwt 的结构"></a>jwt 的结构</h1><table>
    <thead>
        <tr>
            <th>结构</th>
            <th>字段</th>
            <th>说明</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td rowspan="2">Header</td>
            <td>alg</td>
            <td>签名的算法（algorithm），默认是 HMAC SHA256（写成 HS256）</td>
        </tr>
        <tr>
            <td>typ</td>
            <td>表示这个令牌（token）的类型（type），JWT 令牌统一写为JWT</td>
        </tr>
        <tr>
            <td rowspan="8">Payload </td>
            <td>iss</td>
            <td>(issuer)：签发人</td>
        </tr>
        <tr>
            <td>exp</td>
            <td>(expiration time)：过期时间</td>
        </tr>
        <tr>
            <td>sub</td>
            <td>(subject)：主题</td>
        </tr>
            <td>aud</td>
            <td>(audience)：受众</td>
        <tr>
            <td>nbf</td>
            <td>(Not Before)：生效时间</td>
        </tr>
        <tr>
            <td>iat</td>
            <td>(Issued At)：签发时间</td>
        </tr>
        <tr>
            <td>jti</td>
            <td>(JWT ID)：编号</td>
        </tr>
        <tr>
            <td>xxx</td>
            <td>自定义字段</td>
        </tr>
        <tr>
            <td>signature</td>
            <td></td>
            <td>
                <p>对前两部分的签名，防止数据篡改, 生成方式如下:</p>
                <p><b>HMACSHA256(  base64UrlEncode(header) + "." +  base64UrlEncode(payload),   secret)</b></p>
            </td>
        </tr>
    </tbody>
</table>


<h1 id="关于-jwt-的实现"><a href="#关于-jwt-的实现" class="headerlink" title="关于 jwt 的实现"></a>关于 jwt 的实现</h1><h2 id="jwt-的两种实现"><a href="#jwt-的两种实现" class="headerlink" title="jwt 的两种实现"></a>jwt 的两种实现</h2><p><strong>JWS</strong>: JSON Web Signature<br><strong>JWE</strong>: JSON Web Encryption</p>
<div class="note info no-icon simple"><p><code>JWS</code> 和 <code>JWE</code> 是 <code>JWT</code> 的两种实现, 平常使用的就是 <code>JWS</code></p>
</div>

<h2 id="官方认可的-java-库"><a href="#官方认可的-java-库" class="headerlink" title="官方认可的 java 库"></a>官方认可的 java 库</h2><ol>
<li>maven: com.auth0 &#x2F; java-jwt &#x2F; 3.3.0</li>
<li>maven: org.bitbucket.b_c &#x2F; jose4j &#x2F; 0.9.3</li>
<li>maven: com.nimbusds &#x2F; nimbus-jose-jwt &#x2F; 5.7</li>
<li>maven: io.jsonwebtoken &#x2F; jjwt-root &#x2F; 0.11.1</li>
<li>maven: io.fusionauth &#x2F; fusionauth-jwt &#x2F; 5.2.2</li>
<li>maven: io.vertx &#x2F; vertx-auth-jwt &#x2F; 3.5.1</li>
<li>maven: io.inverno.mod &#x2F; inverno-security-jose &#x2F; 1.5.2</li>
</ol>
<div class="note info no-icon simple"><p>平常使用最多的就是 <code>jjwt</code>, 如果需要完整的功能, 可以考虑使用 <code>nimbus-jose</code> 或者 <code>jose4j</code></p>
</div>


<h2 id="jjwt-0-12-x-基本使用"><a href="#jjwt-0-12-x-基本使用" class="headerlink" title="jjwt 0.12.x 基本使用"></a>jjwt 0.12.x 基本使用</h2><h3 id="加入依赖"><a href="#加入依赖" class="headerlink" title="加入依赖"></a>加入依赖</h3><p><strong>gradle</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">implementation(&quot;io.jsonwebtoken:jjwt:0.12.6&quot;)</span><br></pre></td></tr></table></figure>

<p><strong>maven</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.12.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.IdUtil;</span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Maps;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.Claims;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.ExpiredJwtException;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.Jws;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.JwtException;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.JwtParser;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.Jwts;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.security.Keys;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.security.SecureDigestAlgorithm;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.security.SignatureException;</span><br><span class="line"><span class="keyword">import</span> java.time.Instant;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.SecretKey;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.exception.ExceptionUtils;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JwtTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 过期时间: 1800 秒</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">ACCESS_EXPIRE</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * jwt 主题</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SUBJECT</span> <span class="operator">=</span> <span class="string">&quot;jx&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * jwt 签发人</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">JWT_ISS</span> <span class="operator">=</span> <span class="string">&quot;laolang&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * jwt 签名算法, 默认 HS256</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">JWT_HEADER_ALG</span> <span class="operator">=</span> <span class="string">&quot;HS256&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 令牌类型, jwt 令牌统一为 JWT</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">JWT_HEADER_TYPE</span> <span class="operator">=</span> <span class="string">&quot;JWT&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加密算法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> SecureDigestAlgorithm&lt;SecretKey, SecretKey&gt; ALGORITHM = Jwts.SIG.HS256;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 私钥. 不能太短, 否则会报错:</span></span><br><span class="line"><span class="comment">     * io.jsonwebtoken.security.WeakKeyException: The specified key byte array is 72 bits which is not secure enough for any JWT HMAC-SHA algorithm</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">SECRET</span> <span class="operator">=</span> <span class="string">&quot;secretKeysecretKeysecretKeysecretKeysecretKey&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 秘钥实例</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">SecretKey</span> <span class="variable">KEY</span> <span class="operator">=</span> Keys.hmacShaKeyFor(SECRET.getBytes());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String token;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">genarateToken</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// uuid</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">uuid</span> <span class="operator">=</span> IdUtil.fastSimpleUUID();</span><br><span class="line">        <span class="comment">// 过期时间</span></span><br><span class="line">        <span class="type">Date</span> <span class="variable">exprireDate</span> <span class="operator">=</span> Date.from(Instant.now().plusSeconds(ACCESS_EXPIRE));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// calim</span></span><br><span class="line">        Map&lt;String, Object&gt; calim = Maps.newHashMap();</span><br><span class="line">        calim.put(<span class="string">&quot;id&quot;</span>, <span class="number">1L</span>);</span><br><span class="line">        calim.put(<span class="string">&quot;username&quot;</span>, <span class="string">&quot;superAdmin&quot;</span>);</span><br><span class="line">        calim.put(<span class="string">&quot;nickname&quot;</span>, <span class="string">&quot;超级管理员&quot;</span>);</span><br><span class="line"></span><br><span class="line">        token = Jwts.builder()</span><br><span class="line">                .header()</span><br><span class="line">                .add(<span class="string">&quot;typ&quot;</span>, JWT_HEADER_TYPE)</span><br><span class="line">                .add(<span class="string">&quot;alg&quot;</span>, JWT_HEADER_ALG)</span><br><span class="line">                .and()</span><br><span class="line">                <span class="comment">// paload 私有声明, 如果有, 必须放在前面</span></span><br><span class="line">                .claims(calim)</span><br><span class="line">                <span class="comment">// 令牌 id</span></span><br><span class="line">                .id(uuid)</span><br><span class="line">                <span class="comment">// 过期时间</span></span><br><span class="line">                .expiration(exprireDate)</span><br><span class="line">                <span class="comment">// 主题</span></span><br><span class="line">                .subject(SUBJECT)</span><br><span class="line">                <span class="comment">// 签发人</span></span><br><span class="line">                .issuer(JWT_ISS)</span><br><span class="line">                <span class="comment">// 签名</span></span><br><span class="line">                .signWith(KEY, ALGORITHM)</span><br><span class="line">                .compact();</span><br><span class="line">        System.out.println(token);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test(dependsOnMethods = &quot;genarateToken&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">parseToken</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">JwtParser</span> <span class="variable">jwtParser</span> <span class="operator">=</span> Jwts.parser().verifyWith(KEY).build();</span><br><span class="line">            Jws&lt;Claims&gt; jws = jwtParser.parseSignedClaims(token);</span><br><span class="line">            <span class="type">Claims</span> <span class="variable">claims</span> <span class="operator">=</span> jws.getPayload();</span><br><span class="line">            System.out.println(claims.get(<span class="string">&quot;id&quot;</span>, Long.class));</span><br><span class="line">            System.out.println(claims.get(<span class="string">&quot;username&quot;</span>, String.class));</span><br><span class="line">            System.out.println(claims.get(<span class="string">&quot;nickname&quot;</span>, String.class));</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SignatureException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;jwt 解析报错, 例如 jwt 结构不正确&quot;</span>);</span><br><span class="line">            System.out.println(ExceptionUtils.getMessage(e));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ExpiredJwtException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;jwt 过期&quot;</span>);</span><br><span class="line">            System.out.println(ExceptionUtils.getMessage(e));</span><br><span class="line">        &#125;<span class="keyword">catch</span> (JwtException e)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;其他 jwt 异常&quot;</span>);</span><br><span class="line">            System.out.println(ExceptionUtils.getMessage(e));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(ExceptionUtils.getMessage(e));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="spring-boot-jwt-简单实现"><a href="#spring-boot-jwt-简单实现" class="headerlink" title="spring boot + jwt 简单实现"></a>spring boot + jwt 简单实现</h1><h1 id="spring-boot-jwt-redis"><a href="#spring-boot-jwt-redis" class="headerlink" title="spring boot + jwt + redis"></a>spring boot + jwt + redis</h1><h1 id="access-token-refresh-token"><a href="#access-token-refresh-token" class="headerlink" title="access_token + refresh_token"></a>access_token + refresh_token</h1><h1 id="spring-security-和-jwt"><a href="#spring-security-和-jwt" class="headerlink" title="spring security 和 jwt"></a>spring security 和 jwt</h1><h1 id="shiro-和-jwt"><a href="#shiro-和-jwt" class="headerlink" title="shiro 和 jwt"></a>shiro 和 jwt</h1>]]></content>
      <categories>
        <category>java</category>
        <category>认证与鉴权</category>
        <category>jwt</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>认证与鉴权</tag>
        <tag>jwt</tag>
      </tags>
  </entry>
  <entry>
    <title>vue3 使用 prismjs</title>
    <url>/2024/09/21/vue3-with-prismjs/</url>
    <content><![CDATA[<h1 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># prismjs </span><br><span class="line">npm i prismjs -S</span><br><span class="line"></span><br><span class="line"># prismjs 类型</span><br><span class="line">npm i -D @types/prismjs</span><br><span class="line"></span><br><span class="line"># vite plugin</span><br><span class="line">npm install vite-plugin-prismjs -D</span><br></pre></td></tr></table></figure>

<h1 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h1><p><a href="https://github.com/PrismJS/prism-themes">https://github.com/PrismJS/prism-themes</a></p>
<p>将 <code>themes</code> 目录放到项目中</p>
<h1 id="vite-config-ts"><a href="#vite-config-ts" class="headerlink" title="vite.config.ts"></a>vite.config.ts</h1><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; fileURLToPath, <span class="variable constant_">URL</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;node:url&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig, loadEnv &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; prismjsPlugin &#125; <span class="keyword">from</span> <span class="string">&#x27;vite-plugin-prismjs&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(<span class="function">(<span class="params">&#123; mode &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> env = <span class="title function_">loadEnv</span>(mode, process.<span class="title function_">cwd</span>())</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(mode)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(env)</span><br><span class="line">    <span class="keyword">const</span> plugins = [</span><br><span class="line">        <span class="title function_">vue</span>(),</span><br><span class="line">        <span class="title function_">prismjsPlugin</span>(&#123;</span><br><span class="line">            <span class="comment">// [&#x27;json&#x27;, &#x27;css&#x27;] 按需引入，&#x27;all&#x27; 所有语言</span></span><br><span class="line">            <span class="attr">languages</span>: <span class="string">&#x27;all&#x27;</span>,</span><br><span class="line">            <span class="comment">// 配置行号插件</span></span><br><span class="line">            <span class="attr">plugins</span>: [</span><br><span class="line">                <span class="string">&#x27;line-numbers&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;copy-to-clipboard&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;show-language&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;line-highlight&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;toolbar&#x27;</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="comment">// 主题名</span></span><br><span class="line">            <span class="comment">// theme: &#x27;default&#x27;,</span></span><br><span class="line">            <span class="attr">css</span>: <span class="literal">true</span></span><br><span class="line">        &#125;)</span><br><span class="line">    ]</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">plugins</span>: plugins,</span><br><span class="line">        <span class="attr">resolve</span>: &#123;</span><br><span class="line">            <span class="attr">alias</span>: &#123;</span><br><span class="line">                <span class="string">&#x27;@&#x27;</span>: <span class="title function_">fileURLToPath</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&#x27;./src&#x27;</span>, <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="attr">server</span>: &#123;</span><br><span class="line">            <span class="attr">port</span>: <span class="number">12016</span>,</span><br><span class="line">            <span class="attr">proxy</span>: &#123;</span><br><span class="line">                <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">                    <span class="attr">target</span>: env.<span class="property">VITE_API_BASE_URL</span>,</span><br><span class="line">                    <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">rewrite</span>: <span class="function">(<span class="params">path</span>) =&gt;</span> path.<span class="title function_">replace</span>(<span class="regexp">/^\/api/</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="attr">css</span>: &#123;</span><br><span class="line">            <span class="attr">preprocessorOptions</span>: &#123;</span><br><span class="line">                <span class="attr">scss</span>: &#123;</span><br><span class="line">                    <span class="attr">additionalData</span>: <span class="string">&#x27;@import &quot;@/assets/style/global.scss&quot;;&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h1 id="main-ts-引入主题"><a href="#main-ts-引入主题" class="headerlink" title="main.ts 引入主题"></a>main.ts 引入主题</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import &#x27;@/assets/prism-theme/prism-coldark-cold.css&#x27;</span><br></pre></td></tr></table></figure>

<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span></span><br><span class="line">            hello world</span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-heart&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pre</span> <span class="attr">class</span>=<span class="string">&quot;line-numbers&quot;</span> <span class="attr">data-line</span>=<span class="string">&quot;1,13-15&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">code</span> <span class="attr">class</span>=<span class="string">&quot;language-java&quot;</span>&gt;</span>&#123;&#123; code &#125;&#125;<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">lay-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>原始按钮<span class="tag">&lt;/<span class="name">lay-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">Prism</span> <span class="keyword">from</span> <span class="string">&#x27;prismjs&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> code = <span class="string">`package com.laolang.jx;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript"></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">import java.util.concurrent.ExecutionException;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">import java.util.concurrent.FutureTask;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">import java.util.concurrent.TimeUnit;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">import lombok.extern.slf4j.Slf4j;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript"></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">@Slf4j</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">public class JucHelloApplication &#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">    public static void main(String[] args) &#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        log.info(&quot;juc hello is running...&quot;);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript"></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        FutureTask&lt;Integer&gt; futureTask = new FutureTask&lt;&gt;(new SimpleCallable());</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        Thread t1 = new Thread(futureTask, &quot;t1&quot;);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        t1.start();</span></span></span><br><span class="line"><span class="string"><span class="language-javascript"></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        int i = 0;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        while( i &lt; 5 )&#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            try &#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                TimeUnit.SECONDS.sleep(2);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &#125; catch (InterruptedException e) &#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                throw new RuntimeException(e);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &#125;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            log.info(&quot;主线程的某些任务&quot;);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            i++;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        &#125;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript"></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        try &#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            Integer ret = futureTask.get();</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            log.info(&quot;线程计算结果:&#123;&#125;&quot;,ret);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        &#125; catch (InterruptedException | ExecutionException e) &#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            throw new RuntimeException(e);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        &#125;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript"></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        i = 0;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        while( i &lt; 5 )&#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            try &#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                TimeUnit.SECONDS.sleep(2);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &#125; catch (InterruptedException e) &#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                throw new RuntimeException(e);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &#125;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            log.info(&quot;主线程的某些任务2&quot;);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            i++;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        &#125;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript"></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        log.info(&quot;程序结束&quot;);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">    &#125;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&#125;`</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title class_">Prism</span>.<span class="title function_">highlightAll</span>()</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            code</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: $baseColor;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">code</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-left-width</span>: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p><img src="/images/2024-09-21-vue3-with-prismjs/001.png"></p>
<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>如果想使用 <code>prismjs</code> 自带的主题, 则在 <code>vite.config.ts</code> 中引入, 并注释 <code>main.ts</code> 中引入的主题</p>
<p><strong>main.ts</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// import &#x27;@/assets/prism-theme/prism-coldark-cold.css&#x27;</span><br></pre></td></tr></table></figure>

<p><strong>vite.config.ts</strong></p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title function_">prismjsPlugin</span>(&#123;</span><br><span class="line">    <span class="comment">// [&#x27;json&#x27;, &#x27;css&#x27;] 按需引入，&#x27;all&#x27; 所有语言</span></span><br><span class="line">    <span class="attr">languages</span>: <span class="string">&#x27;all&#x27;</span>,</span><br><span class="line">    <span class="comment">// 配置行号插件</span></span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="string">&#x27;line-numbers&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;copy-to-clipboard&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;show-language&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;line-highlight&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;toolbar&#x27;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="comment">// 主题名</span></span><br><span class="line">    <span class="comment">// theme: &#x27;default&#x27;,</span></span><br><span class="line">    <span class="attr">css</span>: <span class="literal">true</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://juejin.cn/post/7078607581194747934">prismjs 高亮在vite中使用</a><br><a href="https://blog.csdn.net/weixin_45389633/article/details/128638368">vue3、vite，正确安装 Prismjs</a><br><a href="https://cloud.tencent.com/developer/article/2283575">Vue3(Vite) 通过 prism.js 实现代码高亮并实现Mac风格</a></p>
]]></content>
      <categories>
        <category>前端</category>
        <category>vue</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>vue</tag>
      </tags>
  </entry>
</search>
