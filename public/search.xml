<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>目录</title>
    <url>/2016/12/06/a01-root-catalog/</url>
    <content><![CDATA[<h1 id="todo"><a href="#todo" class="headerlink" title="todo"></a>todo</h1><p><a href="https://gitee.com/starblues/springboot-plugin-framework-parent">spring-brick</a></p>
<p><a href="https://cloud.tencent.com/developer/article/2310456">基于spring-plugin做插件化开发</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzAxNDMwMTMwMw==&mid=2247550522&idx=1&sn=9e9e7dd60609c831965c4e404148bd35&chksm=9b972722ace0ae34f7375865ac3172ccd3c4c33f170ae03e4038eb770229d56edc240d78ebc2&scene=126&sessionid=0">重磅：Spring Boot推出插件化开发，彻底炸裂了！</a><br><a href="https://blog.csdn.net/qq_17231297/article/details/131255683">重磅：Spring Boot推出插件化开发，彻底炸裂了！</a></p>
<p><a href="https://blog.csdn.net/ZsbJava/article/details/120764957">SpringPlugin-Core在业务中的应用</a></p>
<p><a href="https://blog.csdn.net/liubenlong007/article/details/107043615">google aviator：轻量级Java公式引擎</a></p>
<p><a href="https://groovy-lang.cn/documentation.html">Apache Groovy</a></p>
<p><a href="https://daichangya.github.io/flexmark-java-doc/#/">flexmark-java 中文文档</a><br><a href="https://www.cnblogs.com/libaoquan/p/7442843.html">使用 java 实现一个简单的 markdown 语法解析器</a></p>
<p><a href="https://www.bilibili.com/video/BV1854y1i7pr">京东首屏实战–静态页面部分</a></p>
<p><a href="https://www.cnblogs.com/strongmore/p/17964566">在 SpringBoot 项目中使用 MDC 实现日志 traceId 的统一</a><br><a href="https://www.cnblogs.com/jingzh/p/17248886.html">日志之MDC和异步多线程间传递线程id</a><br><a href="https://zhuanlan.zhihu.com/p/677775374">[SpringAop + Logback +MDC] 现网必备全链路日志追踪</a></p>
<p>idea 基本配置与操作</p>
<p><a href="https://blog.csdn.net/qq_33204709/category_9828619.html">SpringBoot实战</a><br><a href="https://blog.csdn.net/weixin_40141628/article/details/140924757">springboot+Loki+Loki4j+Grafana搭建轻量级日志系统</a><br><a href="https://blog.csdn.net/qq_51808107/article/details/119300264">Log4j2整合ELK搭建实时日志平台</a></p>
<p><a href="https://blog.csdn.net/weixin_44543482/article/details/135305720">Windows安装Minio(超详细)</a></p>
<p><a href="https://blog.csdn.net/yan_danfeng/article/details/114699710">Vue之mustache模板引擎（笔记整理）</a></p>
<h1 id="其他文档"><a href="#其他文档" class="headerlink" title="其他文档"></a>其他文档</h1><p><a href="https://laolang2016.github.io/leetcode/">leetcode</a></p>
<h1 id="996-icu"><a href="#996-icu" class="headerlink" title="996.icu"></a>996.icu</h1><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h3><p><a href="/2024/09/22/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-C-%E8%AF%AD%E8%A8%80%E7%89%88-%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84/">数据结构 C 语言版 动态数组</a></p>
<h2 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h2><p><a href="/2024/09/15/nginx-note/">nginx 笔记</a></p>
<h2 id="tomcat"><a href="#tomcat" class="headerlink" title="tomcat"></a>tomcat</h2><p><a href="/2024/10/26/tomcat-%E6%80%BB%E8%A7%88/">tomcat 总览</a></p>
<h2 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h2><h3 id="centos"><a href="#centos" class="headerlink" title="centos"></a>centos</h3><p><a href="/2024/09/15/centos-note/">centos 笔记</a></p>
<h1 id="java"><a href="#java" class="headerlink" title="java"></a>java</h1><p><a href="/2024/09/12/java-%E5%A4%A7%E9%A1%B9%E7%9B%AE/">java 大项目</a><br><a href="/2024/09/13/java-new-feature/">java 新特性</a><br><a href="/2024/10/27/java8-%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/">java8 函数式编程</a></p>
<h2 id="maven"><a href="#maven" class="headerlink" title="maven"></a>maven</h2><p><a href="/2024/09/15/maven-note/">maven 笔记</a></p>
<h2 id="groovy"><a href="#groovy" class="headerlink" title="groovy"></a>groovy</h2><p><a href="/2024/10/03/groovy-%E6%80%BB%E8%A7%88/">groovy 总览</a><br><a href="/2024/10/03/groovy-%E5%AE%89%E8%A3%85%E4%B8%8E-Hello-World/">groovy 安装与 Hello World</a><br><a href="/2024/10/04/groovy-%E4%B8%8E-java-%E7%9A%84%E5%BC%82%E5%90%8C/">groovy 与 java 的异同</a></p>
<h2 id="gradle"><a href="#gradle" class="headerlink" title="gradle"></a>gradle</h2><p><a href="/2024/09/12/gradle-study/">gradle 基本使用</a></p>
<h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><p><a href="/2024/09/12/juc-base/">java 多线程基本使用</a></p>
<h2 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h2><p><a href="/2024/09/22/java-design-patterns-summary/">java 设计模式总览</a><br><a href="/2024/08/31/java-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B-%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/">java 设计模式之 代理模式</a></p>
<h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><p><a href="/2024/08/13/logback-%E5%9F%BA%E6%93%8D">logback 基操</a></p>
<h2 id="工作流"><a href="#工作流" class="headerlink" title="工作流"></a>工作流</h2><h3 id="flowable"><a href="#flowable" class="headerlink" title="flowable"></a>flowable</h3><p><a href="/2024/08/19/flowable-%E5%9F%BA%E6%93%8D/">flowable 基操</a></p>
<h2 id="认证与鉴权"><a href="#认证与鉴权" class="headerlink" title="认证与鉴权"></a>认证与鉴权</h2><h3 id="jwt"><a href="#jwt" class="headerlink" title="jwt"></a>jwt</h3><p><a href="/2024/09/21/jwt/">jwt</a></p>
<h3 id="spring-security"><a href="#spring-security" class="headerlink" title="spring security"></a>spring security</h3><p><a href="/2024/09/22/security-%E5%9F%BA%E6%93%8D/">security 基操</a></p>
<h3 id="shiro"><a href="#shiro" class="headerlink" title="shiro"></a>shiro</h3><p><a href="/2024/09/22/shiro-%E5%9F%BA%E7%A1%80/">shiro 基础</a></p>
<h2 id="任务调度"><a href="#任务调度" class="headerlink" title="任务调度"></a>任务调度</h2><h3 id="quartz"><a href="#quartz" class="headerlink" title="quartz"></a>quartz</h3><p><a href="/2024/09/22/quartz-base/">quartz 基础</a></p>
<h3 id="xxl-job"><a href="#xxl-job" class="headerlink" title="xxl-job"></a>xxl-job</h3><p><a href="/2024/09/22/xxl-job-base/">xxl-job 基础</a></p>
<h2 id="request"><a href="#request" class="headerlink" title="request"></a>request</h2><h3 id="okhttp"><a href="#okhttp" class="headerlink" title="okhttp"></a>okhttp</h3><p><a href="/2024/09/28/okhttp-%E7%AC%94%E8%AE%B0/">okhttp 笔记</a><br><a href="/2024/09/29/RestTemplate-%E7%AC%94%E8%AE%B0/">RestTemplate 笔记</a></p>
<h2 id="ssm"><a href="#ssm" class="headerlink" title="ssm"></a>ssm</h2><h3 id="spring"><a href="#spring" class="headerlink" title="spring"></a>spring</h3><p><a href="/2024/08/29/spring-Hello-World/">spring Hello World</a><br><a href="/2024/08/31/spring-aop/">spring aop</a><br><a href="/2024/09/01/spring-%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86/">spring 事务管理</a><br><a href="/2024/09/22/spring-jdbc-template-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/">spring jdbc template 基本使用</a></p>
<h3 id="spring-mvc"><a href="#spring-mvc" class="headerlink" title="spring mvc"></a>spring mvc</h3><p><a href="/2024/08/29/spring-mvc-%E6%90%AD%E5%BB%BA/">spring mvc 搭建</a><br><a href="/2024/09/27/spring-mvc-%E6%8E%A5%E5%8F%97%E5%8F%82%E6%95%B0/">spring mvc 接收参数</a><br><a href="/2024/08/30/spring-mvc-converter-%E4%B8%8E-jackson-%E9%85%8D%E7%BD%AE/">spring mvc converter 与 jackson 配置</a><br><a href="/2024/08/30/spring-mvc-%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/">spring mvc 异常处理</a></p>
<h3 id="spring-boot"><a href="#spring-boot" class="headerlink" title="spring boot"></a>spring boot</h3><p><a href="/2024/09/22/run-spring-boot-with-linux/">spring boot 在 linux 下的启动</a><br><a href="/2024/09/22/run-spring-boot-with-docker/">docker 启动 spring boot</a><br><a href="/2024/08/29/spring-boot-kotlin-java-%E6%B7%B7%E7%BC%96/">spring boot kotlin java 混编</a><br><a href="/2024/09/28/spring-boot-java-groovy-%E6%B7%B7%E7%BC%96/">spring boot java groovy 混编</a><br><a href="/2024/10/27/spring-boot-%E6%8E%A5%E6%94%B6%E5%90%84%E7%A7%8D%E5%8F%82%E6%95%B0/">spring boot 接收各种参数</a></p>
<h3 id="mybatis"><a href="#mybatis" class="headerlink" title="mybatis"></a>mybatis</h3><p><a href="/2024/09/22/mybatis-%E6%BA%90%E7%A0%81%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/">mybatis 源码环境搭建</a></p>
<h3 id="整合"><a href="#整合" class="headerlink" title="整合"></a>整合</h3><p><a href="/2024/08/30/spring-mvc-%E6%95%B4%E5%90%88-mybatis/">spring mvc 整合 mybatis</a></p>
<p><a href="/2024/10/12/%E8%8B%A5%E4%BE%9D%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E6%80%BB%E8%A7%88/">若依源码分析 总览</a><br><a href="/2024/10/12/%E8%8B%A5%E4%BE%9D-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%90%AF%E5%8A%A8/">若依 环境搭建与启动</a></p>
<h2 id="cloud"><a href="#cloud" class="headerlink" title="cloud"></a>cloud</h2><p><a href="/2024/09/30/openfeign-%E7%AC%94%E8%AE%B0/">openfeign 笔记</a></p>
<h2 id="tdd"><a href="#tdd" class="headerlink" title="tdd"></a>tdd</h2><h2 id="大数据"><a href="#大数据" class="headerlink" title="大数据"></a>大数据</h2><h3 id="droid"><a href="#droid" class="headerlink" title="droid"></a>droid</h3><p><a href="/2024/10/07/doris-%E5%9F%BA%E7%A1%80/">doris 基础</a></p>
<h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><p><a href="/2024/08/19/B%E6%A0%91-%E5%9F%BA%E6%93%8D/">B树 基操</a></p>
<h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h2><p><a href="/2024/09/22/mysql-summary/">mysql 总览</a><br><a href="/2024/08/22/mysql-%E5%B8%B8%E7%94%A8%E6%9F%A5%E8%AF%A2/">mysql 常用查询</a><br><a href="/2024/09/22/mysql-base/">mysql 基础</a></p>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><h2 id="jmeter"><a href="#jmeter" class="headerlink" title="jmeter"></a>jmeter</h2><p><a href="/2024/09/26/jemeter-%E5%9F%BA%E7%A1%80/">jmeter 基础</a><br><a href="/2024/09/28/spring-boot-%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/">spring boot 自动化测试解决方案</a></p>
<h1 id="git"><a href="#git" class="headerlink" title="git"></a>git</h1><p><a href="/2024/09/22/git-%E8%AE%B0%E5%BD%95/">git 记录</a></p>
<h1 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h1><h2 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h2><p><a href="/2024/09/19/webpack-note/">webpack 笔记</a></p>
<h2 id="vue"><a href="#vue" class="headerlink" title="vue"></a>vue</h2><p><a href="/2024/09/21/vue3-with-prismjs/">vue3 使用 prismjs</a></p>
<h2 id="jquery"><a href="#jquery" class="headerlink" title="jquery"></a>jquery</h2><p><a href="/2024/09/22/jquery-summary/">jquery 系列总览</a></p>
<h2 id="extjs"><a href="#extjs" class="headerlink" title="extjs"></a>extjs</h2><p><a href="/2024/09/22/extjs-summary/">extjs 总览</a><br><a href="/2024/09/22/extjs-4-x-base/">extjs 4.x 基本使用</a></p>
<h1 id="c"><a href="#c" class="headerlink" title="c++"></a>c++</h1><p><a href="/2024/10/02/cpp-%E5%9F%BA%E7%A1%80/">c++ 基础</a></p>
<h2 id="makefile"><a href="#makefile" class="headerlink" title="makefile"></a>makefile</h2><p><a href="/2024/11/09/makefile-%E6%80%BB%E8%A7%88/">makefile 总览</a></p>
<h2 id="cmake"><a href="#cmake" class="headerlink" title="cmake"></a>cmake</h2><p><a href="/2024/10/09/cmake-%E6%80%BB%E8%A7%88/">cmake 总览</a><br><a href="/2024/10/09/cmake-Hello-World/">cmake Hello World</a></p>
<h1 id="lua"><a href="#lua" class="headerlink" title="lua"></a>lua</h1><p><a href="/2024/08/29/vscode-%E6%90%AD%E5%BB%BA-lua-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/">vscode 搭建 lua 开发环境</a><br><a href="/2024/08/29/luarocks-%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/">luarocks 的基本使用</a><br><a href="/2024/08/29/lua-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/">lua 开发环境搭建</a></p>
<h1 id="dotnet"><a href="#dotnet" class="headerlink" title="dotnet"></a>dotnet</h1><p><a href="/2024/09/25/dotnet-hello-world/">dotnet hello world</a></p>
<h1 id="php"><a href="#php" class="headerlink" title="php"></a>php</h1><p><a href="/2024/09/16/php-setup/">php 环境搭建</a></p>
<h1 id="linux-1"><a href="#linux-1" class="headerlink" title="linux"></a>linux</h1><h2 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h2><p><a href="/2024/08/29/ubuntu-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/">ubuntu 基本操作</a></p>
<h1 id="cui"><a href="#cui" class="headerlink" title="cui"></a>cui</h1><h1 id="gui"><a href="#gui" class="headerlink" title="gui"></a>gui</h1><h2 id="qt"><a href="#qt" class="headerlink" title="qt"></a>qt</h2><p><a href="/2024/11/05/qt-%E6%80%BB%E8%A7%88/">qt 总览</a><br><a href="/2024/11/05/qt-%E5%AE%89%E8%A3%85%E4%B8%8E-Hello-World/">qt 安装与 Hello World</a></p>
<h2 id="javafx"><a href="#javafx" class="headerlink" title="javafx"></a>javafx</h2><p><a href="/2024/09/14/javafx-001-hello-world/">javafx 001 hello world</a><br><a href="/2024/09/14/javafx-002-start-type/">javafx 002 启动方式</a><br><a href="/2024/09/14/javafx-003-lifecycle/">javafx 003 生命周期</a></p>
<h2 id="avalonia"><a href="#avalonia" class="headerlink" title="avalonia"></a>avalonia</h2><p><a href="/2024/08/12/avalonia-hello-world">avalonia hello world</a></p>
<h2 id="win32"><a href="#win32" class="headerlink" title="win32"></a>win32</h2><p><a href="/2024/10/01/win32-%E6%80%BB%E8%A7%88/">win32 总览</a></p>
<p><a href="/2024/10/01/win32-hello-world/">win32 hello world</a></p>
<p><a href="/2024/10/01/mfc-hello-world/">mfc hello world</a></p>
<h2 id="linux-2"><a href="#linux-2" class="headerlink" title="linux"></a>linux</h2><h3 id="gtk"><a href="#gtk" class="headerlink" title="gtk"></a>gtk</h3><p><a href="/2024/10/15/gtk-%E6%80%BB%E8%A7%88/">gtk 总览</a></p>
<h1 id="器"><a href="#器" class="headerlink" title="器"></a>器</h1><p><a href="/2024/09/22/dbeaver/">dbeaver</a><br><a href="/2024/08/30/eclipse/">eclipse</a><br><a href="/2024/09/24/emacs/">emacs</a></p>
<p><a href="http://localhost:4000/2024/11/03/chrome-%E6%89%A9%E5%B1%95%E5%BC%80%E5%8F%91-%E6%80%BB%E8%A7%88/">chrome 扩展开发 总览</a></p>
<h1 id="编译原理"><a href="#编译原理" class="headerlink" title="编译原理"></a>编译原理</h1>]]></content>
  </entry>
  <entry>
    <title>资源汇总</title>
    <url>/2016/12/06/a02-resource/</url>
    <content><![CDATA[<h1 id="我的百度网盘"><a href="#我的百度网盘" class="headerlink" title="我的百度网盘"></a>我的百度网盘</h1><p>通过百度网盘分享的文件：java2016</p>
<p>链接：<a href="https://pan.baidu.com/s/1hq-nTf1o-tttNJCT2zeVGg">https://pan.baidu.com/s/1hq-nTf1o-tttNJCT2zeVGg</a> </p>
<p>提取码：2016 </p>
<p>–来自百度网盘超级会员V9的分享</p>
<h1 id="java"><a href="#java" class="headerlink" title="java"></a>java</h1><h2 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h2><h3 id="javaguide"><a href="#javaguide" class="headerlink" title="javaguide"></a>javaguide</h3><p><a href="https://javaguide.cn/books/">javaguide</a></p>
<h3 id="程序猿DD"><a href="#程序猿DD" class="headerlink" title="程序猿DD"></a>程序猿DD</h3><p>博客主页: <a href="https://www.didispace.com/">https://www.didispace.com/</a></p>
<h3 id="张开涛的博客"><a href="#张开涛的博客" class="headerlink" title="张开涛的博客"></a>张开涛的博客</h3><p>博客主页: <a href="https://www.iteye.com/blog/user/jinnianshilongnian">https://www.iteye.com/blog/user/jinnianshilongnian</a></p>
<p>系列博文</p>
<p><a href="https://www.iteye.com/blog/jinnianshilongnian-2018398">跟我学Shiro目录贴</a></p>
<p><a href="https://www.iteye.com/blog/jinnianshilongnian-1482071">跟我学spring3 目录贴及电子书下载</a></p>
<p><a href="https://www.iteye.com/blog/jinnianshilongnian-1752171">跟我学SpringMVC目录汇总贴、PDF下载、源码下载</a></p>
<h2 id="juc"><a href="#juc" class="headerlink" title="juc"></a>juc</h2><p><a href="https://www.yuque.com/chengxuyuanyideng/qnbyyf">Java多线程大全</a></p>
<h2 id="spring-系列"><a href="#spring-系列" class="headerlink" title="spring 系列"></a>spring 系列</h2><h3 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h3><p><a href="https://springjava.cn/">spring 中文文档</a><br><a href="https://springdoc.cn/">spring 中文网</a></p>
<h3 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h3><h4 id="精通Spring-4-x-――企业应用开发实战"><a href="#精通Spring-4-x-――企业应用开发实战" class="headerlink" title="精通Spring 4.x ――企业应用开发实战"></a>精通Spring 4.x ――企业应用开发实战</h4><p><a href="https://item.jd.com/10101381454914.html">精通Spring 4.x ――企业应用开发实战 陈雄华 著</a></p>
<h2 id="maven"><a href="#maven" class="headerlink" title="maven"></a>maven</h2><p><a href="https://maven.org.cn/">maven 官方中文文档</a></p>
<h2 id="testng"><a href="#testng" class="headerlink" title="testng"></a>testng</h2><p><a href="https://www.yiibai.com/testng">TestNG教程 易百教程</a></p>
<p><a href="https://www.cnblogs.com/df888/p/15803356.html">单篇长文TestNG从入门到精通</a></p>
<p><a href="https://www.cnblogs.com/du-hong/category/1566525.html">Java自动化测试框架 （详细教程）</a></p>
<h2 id="junit5"><a href="#junit5" class="headerlink" title="junit5"></a>junit5</h2><p><a href="https://junit.github.net.cn/junit5/docs/current/user-guide/">JUnit 5 用户指南</a></p>
<p><a href="https://blog.csdn.net/ryo1060732496/category_9276134.html">Junit5 入门系列</a></p>
<p><a href="https://blog.csdn.net/qq_15283475/article/details/127328418">《单元测试》Junit5入门教程——非常详细，入门即精通</a></p>
<p><a href="https://www.letianbiji.com/article/101720.html">Mocktio 入门</a></p>
<p><a href="https://blog.csdn.net/kanmima/article/details/123925873">使用mockito来mock final、static、private以及构造方法</a></p>
<h2 id="gui"><a href="#gui" class="headerlink" title="gui"></a>gui</h2><h3 id="javafx"><a href="#javafx" class="headerlink" title="javafx"></a>javafx</h3><p><a href="https://space.bilibili.com/5096022/channel/seriesdetail?sid=394169">javafx 视频教程 极其完整</a><br><a href="https://www.bilibili.com/video/BV1H14y1g7ji">JavaFx 系列教程 2024版 整合SpringBoot3+MyBaitsPlus</a></p>
<h1 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h1><p><a href="https://blog.csdn.net/luyaran/article/details/80928666">mysql使用技巧之比较两个表是否有不同的数据</a></p>
<h1 id="编译原理"><a href="#编译原理" class="headerlink" title="编译原理"></a>编译原理</h1><p><a href="https://github.com/DoctorWkt/acwj">acwj</a><br><a href="https://www.youtube.com/playlist?list=PLwHDUsnIdlMy52QnKX-2Unl6Hmfm9A6jt">Compiler From Scratch</a></p>
<h1 id="c"><a href="#c" class="headerlink" title="c++"></a>c++</h1><p><a href="https://blog.csdn.net/weixin_48953899/article/details/117731139">黑马程序员c++讲义课件笔记</a></p>
<h2 id="构建工具"><a href="#构建工具" class="headerlink" title="构建工具"></a>构建工具</h2><h3 id="makefile"><a href="#makefile" class="headerlink" title="makefile"></a>makefile</h3><p><a href="https://github.com/seisman/how-to-write-makefile">跟我一起写Makefile (PDF重制版)</a></p>
<h3 id="Autotools"><a href="#Autotools" class="headerlink" title="Autotools"></a>Autotools</h3><p>Autotools - GNU Autoconf, Automake与Libtool实践者指南 前三章的翻译: <a href="https://blog.csdn.net/cloud_desktop/category_1868475.html">https://blog.csdn.net/cloud_desktop&#x2F;category_1868475.html</a><br><a href="https://zhuanlan.zhihu.com/p/518876706">Autoconf 教程 Part-1 [翻译] - 红色的红的文章 - 知乎</a></p>
<h3 id="cmake"><a href="#cmake" class="headerlink" title="cmake"></a>cmake</h3><p><a href="https://cmake-doc.readthedocs.io/zh-cn/latest/index.html">cmake 中文文档</a><br><a href="https://www.bookstack.cn/read/Modern-CMake-CN-Modern-CMake-zh_CN/08ad6f6237beace2.md">Modern CMake 简体中文版</a></p>
<p><a href="https://www.hahack.com/codes/cmake/">CMake 入门实战</a></p>
<h2 id="c-资源"><a href="#c-资源" class="headerlink" title="c++ 资源"></a>c++ 资源</h2><p><a href="https://github.com/MeouSker77/Cpp17?tab=readme-ov-file">C++17完全指南 中文翻译版</a><br><a href="https://www.cnblogs.com/Evsward/p/Cpp.html">Efficient&amp;Elegant：Java程序员入门Cpp</a></p>
<h1 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h1><p>免费编程书籍: <a href="https://www.panziye.com/project/ebook">https://www.panziye.com/project/ebook</a></p>
<p><a href="https://zetcode.apachecn.org/">https://zetcode.apachecn.org/</a><br><a href="https://zetcode.apachecn.org/gui/">【布客】ZetCode 图形界面教程 包含 win32 qt swing等</a></p>
<p><a href="https://www.cnblogs.com/liuxianan/p/chrome-plugin-develop.html">【干货】Chrome插件(扩展)开发全攻略</a></p>
<h1 id="vscode"><a href="#vscode" class="headerlink" title="vscode"></a>vscode</h1><h2 id="插件开发"><a href="#插件开发" class="headerlink" title="插件开发"></a>插件开发</h2><p><a href="https://www.cnblogs.com/liuxianan/p/vscode-plugin-overview.html">VSCode插件开发全攻略（一）概览</a></p>
<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><h3 id="Markdown-Preview-Enhanced"><a href="#Markdown-Preview-Enhanced" class="headerlink" title="Markdown Preview Enhanced"></a>Markdown Preview Enhanced</h3><p>中文文档 : <a href="https://shd101wyy.github.io/markdown-preview-enhanced/#/zh-cn/">Markdown Preview Enhanced</a></p>
<p>pdf 预览插件, 可渲染 <code>mermaid</code> 、<code>plantuml</code>, 代码可带行号, 可高亮指定行, 可导入文件</p>
]]></content>
  </entry>
  <entry>
    <title>121</title>
    <url>/2016/12/06/b01-121/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>622</title>
    <url>/2016/12/06/c01-622/</url>
    <content><![CDATA[<h1 id="image"><a href="#image" class="headerlink" title="image"></a>image</h1><p><img src="/images/2024-09-23-622/avatar.jpg"></p>
<h1 id="mysql-汇总"><a href="#mysql-汇总" class="headerlink" title="mysql 汇总"></a>mysql 汇总</h1><h2 id="基础操作"><a href="#基础操作" class="headerlink" title="基础操作"></a>基础操作</h2><p><a href="https://blog.csdn.net/m0_47109503/article/details/119796209">史上最全MySQL基本操作（这一篇就够用了！！！）</a></p>
<h3 id="表管理"><a href="#表管理" class="headerlink" title="表管理"></a>表管理</h3><p><strong>查看表结构</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">full</span> columns <span class="keyword">from</span> sys_user ;</span><br></pre></td></tr></table></figure>
<p><strong>查看表注释</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">	TABLE_NAME <span class="keyword">as</span> 表名,</span><br><span class="line">	TABLE_COMMENT <span class="keyword">as</span> 表注释</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">	INFORMATION_SCHEMA.TABLES</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">	TABLE_SCHEMA <span class="operator">=</span> <span class="string">&#x27;shiro_study&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><strong>查看表索引</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> index <span class="keyword">from</span> sys_user ;</span><br></pre></td></tr></table></figure>


<h3 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a>基础查询</h3><h1 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h1><blockquote>
<p>.vimrc</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot; 开启语法高亮</span><br><span class="line">syntax enable</span><br><span class="line"></span><br><span class="line">&quot; 开启语法高亮</span><br><span class="line">syntax on</span><br><span class="line"></span><br><span class="line">&quot; 设置字体</span><br><span class="line">set guifont=Monaco\ 12</span><br><span class="line"></span><br><span class="line">&quot; 检测文件类型</span><br><span class="line">filetype on</span><br><span class="line"></span><br><span class="line">&quot; 针对不同的文件，采用不同的缩进方式</span><br><span class="line">filetype indent on</span><br><span class="line"></span><br><span class="line">&quot; 设置取消备份，禁止临时文件生成</span><br><span class="line">set nobackup</span><br><span class="line">set noswapfile</span><br><span class="line"></span><br><span class="line">&quot; 显示当前行号和列号</span><br><span class="line">set ruler</span><br><span class="line"></span><br><span class="line">&quot; 在状态栏显示正在输入的命令</span><br><span class="line">set showcmd</span><br><span class="line"></span><br><span class="line">&quot; 左下角显示当前Vim模式</span><br><span class="line">set showmode</span><br><span class="line"></span><br><span class="line">&quot; 显示状态栏</span><br><span class="line">set laststatus=2</span><br><span class="line"></span><br><span class="line">&quot; 显示行号</span><br><span class="line">set number</span><br><span class="line"></span><br><span class="line">&quot; 开启及时搜索(is)</span><br><span class="line">set incsearch</span><br><span class="line"></span><br><span class="line">&quot; 设置搜索高亮(hlsearch)</span><br><span class="line">set hls</span><br><span class="line"></span><br><span class="line">&quot; 设置搜索时忽略大小写</span><br><span class="line">set ignorecase</span><br></pre></td></tr></table></figure>

<h1 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h1><h2 id="logback"><a href="#logback" class="headerlink" title="logback"></a>logback</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- de<span class="doctag">bug:</span> 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">scan</span>=<span class="string">&quot;true&quot;</span> <span class="attr">scanPeriod</span>=<span class="string">&quot;60 seconds&quot;</span> <span class="attr">debug</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;LOG_PATH&quot;</span> <span class="attr">value</span>=<span class="string">&quot;../logs/km-ssm&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;LOG_FILE_NAME&quot;</span> <span class="attr">value</span>=<span class="string">&quot;app&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;PATTERN_FORMAT&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">value</span>=<span class="string">&quot;%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %-5level %-40.40logger&#123;39&#125; [tid=%X&#123;tid&#125;] - %msg%n&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 输出到控制台 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;console&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;PATTERN_FORMAT&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 输出到滚动文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;rolling-file&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;LOG_PATH&#125;/$&#123;LOG_FILE_NAME&#125;.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;PATTERN_FORMAT&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$&#123;LOG_PATH&#125;/%d&#123;yyyy-MM-dd&#125;/$&#123;LOG_FILE_NAME&#125;-%d&#123;yyyy-MM-dd&#125;.%i.log</span><br><span class="line">            <span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">timeBasedFileNamingAndTriggeringPolicy</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>10MB<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">timeBasedFileNamingAndTriggeringPolicy</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 日志文件保留天数 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>150<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;DEBUG&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;console&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;rolling-file&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;com.laolang.km&quot;</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;console&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;rolling-file&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="log4j2"><a href="#log4j2" class="headerlink" title="log4j2"></a>log4j2</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Configuration</span> <span class="attr">status</span>=<span class="string">&quot;WARN&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;LOG_HOME&quot;</span>&gt;</span>../logs/jx-boot<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;FILE_NAME&quot;</span>&gt;</span>app<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jx.level&quot;</span>&gt;</span>info<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Appenders</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">&quot;Console&quot;</span> <span class="attr">target</span>=<span class="string">&quot;SYSTEM_OUT&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;%d&#123;HH:mm:ss.SSS&#125; [%25t] %-5level %l - %msg%n&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">RollingRandomAccessFile</span> <span class="attr">name</span>=<span class="string">&quot;RollingRandomAccessFile&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;$&#123;LOG_HOME&#125;/$&#123;FILE_NAME&#125;.log&quot;</span></span></span><br><span class="line"><span class="tag">                                 <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;LOG_HOME&#125;/$&#123;date:yyyy-MM-dd&#125;/$&#123;FILE_NAME&#125;-%d&#123;yyyy-MM-dd&#125;-%i.log&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;%d&#123;HH:mm:ss.SSS&#125; [%25t] %-5level %l - %msg%n&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span> <span class="attr">interval</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">&quot;10 MB&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span> <span class="attr">max</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RollingRandomAccessFile</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Socket</span> <span class="attr">name</span>=<span class="string">&quot;logstash&quot;</span> <span class="attr">host</span>=<span class="string">&quot;localhost&quot;</span> <span class="attr">port</span>=<span class="string">&quot;1218&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;TCP&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;%d&#123;HH:mm:ss.SSS&#125; [%25t] %-5level %l - %msg%n&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Socket</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Appenders</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Loggers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">&quot;$&#123;jx.level&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;Console&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;RollingRandomAccessFile&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;logstash&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;com.laolang&quot;</span> <span class="attr">level</span>=<span class="string">&quot;$&#123;jx.level&#125;&quot;</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;Console&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;RollingRandomAccessFile&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;logstash&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="mybatis"><a href="#mybatis" class="headerlink" title="mybatis"></a>mybatis</h1><h2 id="打印-sql"><a href="#打印-sql" class="headerlink" title="打印 sql"></a>打印 sql</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.framework.mybatis.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.ReflectUtil;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.StrUtil;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.parameter.ParameterHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.statement.StatementHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.BoundSql;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.MappedStatement;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ParameterMapping;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ParameterMode;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.plugin.Interceptor;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.plugin.Intercepts;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.plugin.Invocation;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.plugin.Plugin;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.plugin.Signature;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.MetaObject;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.SystemMetaObject;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.ResultHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.type.TypeHandlerRegistry;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 打印 sql 拦截器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Intercepts(&#123;</span></span><br><span class="line"><span class="meta">        @Signature(type = StatementHandler.class, method = &quot;query&quot;, args = &#123;Statement.class, ResultHandler.class&#125;),</span></span><br><span class="line"><span class="meta">        @Signature(type = StatementHandler.class, method = &quot;update&quot;, args = &#123;Statement.class&#125;),</span></span><br><span class="line"><span class="meta">        @Signature(type = StatementHandler.class, method = &quot;batch&quot;, args = &#123;Statement.class&#125;)&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPrintSqlInterceptor</span> <span class="keyword">implements</span> <span class="title class_">Interceptor</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * mybatis 配置对象.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Configuration</span> <span class="variable">configuration</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 时间格式化.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ThreadLocal&lt;SimpleDateFormat&gt; DATE_FORMAT_THREAD_LOCAL = ThreadLocal</span><br><span class="line">            .withInitial(() -&gt; <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss.SSS&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 拦截器主方法.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> invocation invocation</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> sql 执行结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Throwable Throwable</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;rawtypes&quot;)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">intercept</span><span class="params">(Invocation invocation)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">startTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        <span class="type">Object</span> <span class="variable">result</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            result = invocation.proceed();</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">long</span> <span class="variable">endTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">                <span class="type">long</span> <span class="variable">sqlCost</span> <span class="operator">=</span> endTime - startTime;</span><br><span class="line">                <span class="type">StatementHandler</span> <span class="variable">statementHandler</span> <span class="operator">=</span> getRealTarget(invocation.getTarget());</span><br><span class="line">                <span class="type">BoundSql</span> <span class="variable">boundSql</span> <span class="operator">=</span> statementHandler.getBoundSql();</span><br><span class="line">                <span class="keyword">if</span> (configuration == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">final</span> <span class="type">ParameterHandler</span> <span class="variable">parameterHandler</span> <span class="operator">=</span> statementHandler.getParameterHandler();</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// Field configurationField = ReflectionUtils.findField(parameterHandler.getClass(), &quot;configuration&quot;);</span></span><br><span class="line">                    <span class="comment">// ReflectionUtils.makeAccessible(configurationField);</span></span><br><span class="line"></span><br><span class="line">                    <span class="type">Field</span> <span class="variable">configurationField</span> <span class="operator">=</span> ReflectUtil.getField(parameterHandler.getClass(), <span class="string">&quot;configuration&quot;</span>);</span><br><span class="line">                    ReflectUtil.setAccessible(configurationField);</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.configuration = (Configuration) configurationField.get(parameterHandler);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 输出 mapper id</span></span><br><span class="line">                <span class="type">MetaObject</span> <span class="variable">metaObject</span> <span class="operator">=</span> SystemMetaObject.forObject(statementHandler);</span><br><span class="line">                <span class="type">MappedStatement</span> <span class="variable">ms</span> <span class="operator">=</span> (MappedStatement) metaObject.getValue(<span class="string">&quot;delegate.mappedStatement&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> ms.getId();</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 替换参数格式化Sql语句，去除换行符</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> formatSql(boundSql, configuration).concat(<span class="string">&quot;;&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">warning</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">                <span class="comment">// CHECKSTYLE:OFF</span></span><br><span class="line">                <span class="keyword">if</span> (sqlCost &gt; <span class="number">2000</span>) &#123;</span><br><span class="line">                    warning = <span class="string">&quot;[耗时过长]&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// CHECKSTYLE:ON</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">// 开始输出 sql</span></span><br><span class="line">                log.info(<span class="string">&quot;map-id: &#123;&#125;&quot;</span>, id);</span><br><span class="line">                log.info(<span class="string">&quot;[ &#123;&#125; ] [ &#123;&#125; ] ms &#123;&#125;&quot;</span>, sql, sqlCost, warning);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (result <span class="keyword">instanceof</span> List) &#123;</span><br><span class="line">                    log.info(<span class="string">&quot;Total: &#123;&#125;&quot;</span>, ((List) result).size());</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    log.info(<span class="string">&quot;Updates: &#123;&#125;&quot;</span>, result);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                log.error(<span class="string">&quot;==&gt; 打印sql 日志异常 &#123;0&#125;&quot;</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 获取真正的对象（非代理对象）</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 解决报错:</span></span><br><span class="line"><span class="comment">     * &lt;code&gt;There is no getter for property named &#x27;delegate&#x27; in &#x27;class com.sun.proxy.$Proxy199&#x27;&lt;/code&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; T <span class="title function_">getRealTarget</span><span class="params">(Object target)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (Proxy.isProxyClass(target.getClass())) &#123;</span><br><span class="line">            <span class="type">MetaObject</span> <span class="variable">metaObject</span> <span class="operator">=</span> SystemMetaObject.forObject(target);</span><br><span class="line">            <span class="keyword">return</span> getRealTarget(metaObject.getValue(<span class="string">&quot;h.target&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (T) target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * plugin.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> target target</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Object</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">plugin</span><span class="params">(Object target)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Plugin.wrap(target, <span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * setProperties.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> properties properties</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setProperties</span><span class="params">(Properties properties)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取完整的sql实体的信息.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> boundSql      boundSql</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> configuration configuration</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 格式化后的 sql</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">formatSql</span><span class="params">(BoundSql boundSql, Configuration configuration)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> boundSql.getSql();</span><br><span class="line"></span><br><span class="line">        <span class="type">Object</span> <span class="variable">parameterObject</span> <span class="operator">=</span> boundSql.getParameterObject();</span><br><span class="line">        <span class="comment">// 输入sql字符串空判断</span></span><br><span class="line">        <span class="keyword">if</span> (StrUtil.isBlank(sql)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (configuration == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">TypeHandlerRegistry</span> <span class="variable">typeHandlerRegistry</span> <span class="operator">=</span> configuration.getTypeHandlerRegistry();</span><br><span class="line">        sql = beautifySql(sql);</span><br><span class="line">        List&lt;ParameterMapping&gt; parameterMappings = boundSql.getParameterMappings();</span><br><span class="line">        <span class="comment">// 参考mybatis 源码 DefaultParameterHandler</span></span><br><span class="line">        <span class="keyword">if</span> (parameterMappings != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (ParameterMapping parameterMapping : parameterMappings) &#123;</span><br><span class="line">                <span class="keyword">if</span> (parameterMapping.getMode() != ParameterMode.OUT) &#123;</span><br><span class="line">                    Object value;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">propertyName</span> <span class="operator">=</span> parameterMapping.getProperty();</span><br><span class="line">                    <span class="keyword">if</span> (boundSql.hasAdditionalParameter(propertyName)) &#123;</span><br><span class="line">                        value = boundSql.getAdditionalParameter(propertyName);</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (parameterObject == <span class="literal">null</span>) &#123;</span><br><span class="line">                        value = <span class="literal">null</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) &#123;</span><br><span class="line">                        value = parameterObject;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">MetaObject</span> <span class="variable">metaObject</span> <span class="operator">=</span> configuration.newMetaObject(parameterObject);</span><br><span class="line">                        value = metaObject.getValue(propertyName);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">paramValueStr</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    <span class="keyword">if</span> (value <span class="keyword">instanceof</span> String) &#123;</span><br><span class="line">                        paramValueStr = <span class="string">&quot;&#x27;&quot;</span> + value + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (value <span class="keyword">instanceof</span> Date) &#123;</span><br><span class="line">                        paramValueStr = <span class="string">&quot;&#x27;&quot;</span> + DATE_FORMAT_THREAD_LOCAL.get().format(value) + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        paramValueStr = value + <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    sql = sql.replaceFirst(<span class="string">&quot;\\?&quot;</span>, paramValueStr);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sql;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 美化 sql.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql sql</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> sql</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">beautifySql</span><span class="params">(String sql)</span> &#123;</span><br><span class="line">        sql = sql.replaceAll(<span class="string">&quot;[\\s\n ]+&quot;</span>, <span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> sql;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="资源汇总"><a href="#资源汇总" class="headerlink" title="资源汇总"></a>资源汇总</h1>]]></content>
  </entry>
  <entry>
    <title>avalonia hello world</title>
    <url>/2024/08/12/avalonia-hello-world/</url>
    <content><![CDATA[<p>avalonia hello world</p>
<span id="more"></span>

<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://github.com/dorisoy/Prism.Avalonia">https://github.com/dorisoy/Prism.Avalonia</a><br><a href="https://github.com/SuessLabs/Prism.Avalonia.Templates/tree/master">https://github.com/SuessLabs/Prism.Avalonia.Templates/tree/master</a></p>
<p><a href="https://www.bilibili.com/video/BV1Ei4y1F7du">WPF-Prism8.0核心教程(公益)</a></p>
<p><a href="https://www.cnblogs.com/zh7791/category/1893907.html">prism 合集</a></p>
<p><a href="https://github.com/irihitech/Semi.Avalonia/tree/main">Semi.Avalonia</a></p>
<h1 id="新建-avalonia-项目"><a href="#新建-avalonia-项目" class="headerlink" title="新建 avalonia 项目"></a>新建 avalonia 项目</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">md AvaloniaStudy</span><br><span class="line">cd AvaloniaStudy</span><br><span class="line">dotnet new sln</span><br><span class="line">dotnet new avalonia.app -o AvaloniaHello</span><br><span class="line">dotnet sln add AvaloniaHello\AvaloniaHello.csproj</span><br></pre></td></tr></table></figure>

<h1 id="添加-prism-依赖"><a href="#添加-prism-依赖" class="headerlink" title="添加 prism 依赖"></a>添加 prism 依赖</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Project</span> <span class="attr">Sdk</span>=<span class="string">&quot;Microsoft.NET.Sdk&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">PropertyGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">OutputType</span>&gt;</span>WinExe<span class="tag">&lt;/<span class="name">OutputType</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TargetFramework</span>&gt;</span>net8.0<span class="tag">&lt;/<span class="name">TargetFramework</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Nullable</span>&gt;</span>enable<span class="tag">&lt;/<span class="name">Nullable</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">BuiltInComInteropSupport</span>&gt;</span>true<span class="tag">&lt;/<span class="name">BuiltInComInteropSupport</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ApplicationManifest</span>&gt;</span>app.manifest<span class="tag">&lt;/<span class="name">ApplicationManifest</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">AvaloniaUseCompiledBindingsByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">AvaloniaUseCompiledBindingsByDefault</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">PropertyGroup</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">&quot;Avalonia&quot;</span> <span class="attr">Version</span>=<span class="string">&quot;11.1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">&quot;Avalonia.Desktop&quot;</span> <span class="attr">Version</span>=<span class="string">&quot;11.1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">&quot;Avalonia.Themes.Fluent&quot;</span> <span class="attr">Version</span>=<span class="string">&quot;11.1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">&quot;Avalonia.Fonts.Inter&quot;</span> <span class="attr">Version</span>=<span class="string">&quot;11.1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Condition</span>=<span class="string">&quot;&#x27;$(Configuration)&#x27; == &#x27;Debug&#x27;&quot;</span> <span class="attr">Include</span>=<span class="string">&quot;Avalonia.Diagnostics&quot;</span> <span class="attr">Version</span>=<span class="string">&quot;11.1.0&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- prism 依赖,只能使用 DryIoc , avalonia 不支持 unity ioc --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">&quot;Prism.DryIoc.Avalonia&quot;</span> <span class="attr">Version</span>=<span class="string">&quot;8.1.97.11073&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/images/2024-08-12_avalonia_hello_world/001.png"></p>
<h1 id="修改项目文件"><a href="#修改项目文件" class="headerlink" title="修改项目文件"></a>修改项目文件</h1><h2 id="App-axaml-cs"><a href="#App-axaml-cs" class="headerlink" title="App.axaml.cs"></a>App.axaml.cs</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> Avalonia;</span><br><span class="line"><span class="keyword">using</span> Avalonia.Controls.ApplicationLifetimes;</span><br><span class="line"><span class="keyword">using</span> Avalonia.Markup.Xaml;</span><br><span class="line"><span class="keyword">using</span> AvaloniaHello.ViewModels;</span><br><span class="line"><span class="keyword">using</span> AvaloniaHello.Views;</span><br><span class="line"><span class="keyword">using</span> Prism.DryIoc;</span><br><span class="line"><span class="keyword">using</span> Prism.Ioc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AvaloniaHello</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">App</span> : <span class="title">PrismApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Initialize</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        AvaloniaXamlLoader.Load(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">base</span>.Initialize(); <span class="comment">// 该行必须存在</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnFrameworkInitializationCompleted</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ApplicationLifetime <span class="keyword">is</span> IClassicDesktopStyleApplicationLifetime desktop)</span><br><span class="line">        &#123;</span><br><span class="line">            desktop.MainWindow = <span class="keyword">new</span> MainWindow</span><br><span class="line">            &#123;</span><br><span class="line">                DataContext = <span class="keyword">new</span> MainWindowViewModel() <span class="comment">// 指定 datacontext</span></span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">base</span>.OnFrameworkInitializationCompleted();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> AvaloniaObject <span class="title">CreateShell</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> Container.Resolve&lt;MainWindow&gt;(); <span class="comment">// 启动窗口</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">RegisterTypes</span>(<span class="params">IContainerRegistry containerRegistry</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="MainWindow"><a href="#MainWindow" class="headerlink" title="MainWindow"></a>MainWindow</h2><h3 id="新建"><a href="#新建" class="headerlink" title="新建"></a>新建</h3><p>新建一个 <code>MainWindow</code> , 注意: 要先新建目录,并且将 <code>namespace</code> 修改正确</p>
<p><img src="/images/2024-08-12_avalonia_hello_world/002.png"></p>
<h3 id="axaml"><a href="#axaml" class="headerlink" title="axaml"></a>axaml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Window</span> <span class="attr">xmlns</span>=<span class="string">&quot;https://github.com/avaloniaui&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:x</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:d</span>=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:mc</span>=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">mc:Ignorable</span>=<span class="string">&quot;d&quot;</span> <span class="attr">d:DesignWidth</span>=<span class="string">&quot;800&quot;</span> <span class="attr">d:DesignHeight</span>=<span class="string">&quot;450&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">xmlns:prism</span>=<span class="string">&quot;http://prismlibrary.com/&quot;</span> <span class="attr">注意这里</span></span></span><br><span class="line"><span class="tag">		<span class="attr">xmlns:vm</span>=<span class="string">&quot;using:AvaloniaHello.ViewModels&quot;</span> <span class="attr">注意这里</span></span></span><br><span class="line"><span class="tag">		<span class="attr">x:DataType</span>=<span class="string">&quot;vm:MainWindowViewModel&quot;</span> <span class="attr">注意这里</span></span></span><br><span class="line"><span class="tag">        <span class="attr">x:Class</span>=<span class="string">&quot;AvaloniaHello.Views.MainWindow&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">prism:ViewModelLocator.AutoWireViewModel</span>=<span class="string">&quot;True&quot;</span> <span class="attr">注意这里</span></span></span><br><span class="line"><span class="tag">        <span class="attr">Title</span>=<span class="string">&quot;MainWindow&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;Binding Greeting&#125;&quot;</span></span></span><br><span class="line"><span class="tag">			   <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span></span></span><br><span class="line"><span class="tag">			   <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Window</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="MainWindowViewModel"><a href="#MainWindowViewModel" class="headerlink" title="MainWindowViewModel"></a>MainWindowViewModel</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> Prism.Mvvm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AvaloniaHello.ViewModels</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">class</span> <span class="title">MainWindowViewModel</span> : <span class="title">BindableBase</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> Greeting =&gt; <span class="string">&quot;Welcome to Prism.Avalonia!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><p><img src="/images/2024-08-12_avalonia_hello_world/003.png"></p>
]]></content>
      <categories>
        <category>桌面端开发</category>
        <category>dotnet</category>
        <category>avalonia</category>
      </categories>
      <tags>
        <tag>桌面端开发</tag>
        <tag>dotnet</tag>
        <tag>avalonia</tag>
      </tags>
  </entry>
  <entry>
    <title>logback 基操</title>
    <url>/2024/08/13/logback-%E5%9F%BA%E6%93%8D/</url>
    <content><![CDATA[<p>logback 基操</p>
<span id="more"></span>

<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>官网: <a href="https://logback.qos.ch/">https://logback.qos.ch/</a></p>
<p><a href="https://www.docs4dev.com/docs/zh/logback/1.3.0-alpha4/reference/">1.3.0-alpha4 Manual 中文手册</a></p>
<p><a href="https://github.com/YLongo/logback-chinese-manual">logback 中文手册</a><br><a href="https://logbackcn.gitbook.io/logback">logback 中文手册</a></p>
<p><a href="https://www.bilibili.com/video/BV1J3411e7oy">Logback从入门到精通</a></p>
<p><a href="https://www.bilibili.com/video/BV1jD4y1c71M">logback学习[2] 日志脱敏</a></p>
<h1 id="logback-简介"><a href="#logback-简介" class="headerlink" title="logback 简介"></a>logback 简介</h1><h2 id="logback-包含的三个模块"><a href="#logback-包含的三个模块" class="headerlink" title="logback 包含的三个模块"></a>logback 包含的三个模块</h2><ol>
<li><code>logback-core</code> 是其它两个模块的基础。</li>
<li><code>logback-classic</code> 模块可以看作是 log4j 的一个优化版本，它天然的支持 SLF4J，所以你可以随意的从其它日志框架（例如：log4j 或者 java.util.logging）切回到 logack。</li>
<li><code>logback-access</code> 可以与 Servlet 容器进行整合，例如：Tomcat、Jetty。它提供了 http 访问日志的功能。</li>
</ol>
]]></content>
      <categories>
        <category>java</category>
        <category>logback</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>logback</tag>
      </tags>
  </entry>
  <entry>
    <title>B树 基操</title>
    <url>/2024/08/19/B%E6%A0%91-%E5%9F%BA%E6%93%8D/</url>
    <content><![CDATA[<p>B树 基操</p>
<span id="more"></span>

<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://blog.csdn.net/qq_41404557/article/details/115447169">二叉树知识点最详细最全讲解</a><br><a href="https://www.cnblogs.com/henuliulei/p/15114440.html">b树，b+树，b-树,红黑树详解一锅端</a></p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>flowable 基操</title>
    <url>/2024/08/19/flowable-%E5%9F%BA%E6%93%8D/</url>
    <content><![CDATA[<p>flowable 基操</p>
<span id="more"></span>


<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://tkjohn.github.io/flowable-userguide/">flowable 6.3.0 中文文档</a></p>
<p><a href="https://www.bilibili.com/video/BV1Uu411W78u">2023工作流-Flowable基础篇最新教程</a><br><a href="https://www.bilibili.com/video/BV1yc411G7uq">Java编程工作流Flowable高级篇2023最新录制</a><br><a href="https://www.bilibili.com/video/BV1PY411F7ir">【工作流】Flowable大合集-值得收藏</a></p>
<p><a href="https://www.bilibili.com/video/BV1oQ4y1J76o">【2024】最新版本Flowable详细讲解，赶快收藏起来吧</a></p>
<p><a href="https://blog.csdn.net/u012558210/article/details/129342543">BPMN2.0规范及流程引擎选型方案</a></p>
<p><a href="https://blog.csdn.net/qq_51484868/article/details/128676587">Flowable 6.7.X 学习笔记（一） 安装及请假流程的创建</a><br><a href="https://blog.csdn.net/qq_51484868/article/details/128687026">Flowable 6.7.X 学习笔记（二） FlowableUI 和IDEA插件</a></p>
<p><a href="https://blog.csdn.net/Ai_Ting_Java/article/details/125054986">Flowable高级篇 - Flowable表结构</a></p>
<h1 id="bpmn-业务过程模型和符号"><a href="#bpmn-业务过程模型和符号" class="headerlink" title="bpmn 业务过程模型和符号"></a>bpmn 业务过程模型和符号</h1><p><img src="/images/2024-08-19-flowable_%E5%9F%BA%E6%93%8D/001.png"></p>
<h1 id="flowabl-hello-world"><a href="#flowabl-hello-world" class="headerlink" title="flowabl hello world"></a>flowabl hello world</h1><h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.flowable<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>flowable-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Maps;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.flowable.engine.ProcessEngine;</span><br><span class="line"><span class="keyword">import</span> org.flowable.engine.ProcessEngineConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.flowable.engine.RepositoryService;</span><br><span class="line"><span class="keyword">import</span> org.flowable.engine.RuntimeService;</span><br><span class="line"><span class="keyword">import</span> org.flowable.engine.impl.cfg.StandaloneProcessEngineConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.flowable.engine.repository.Deployment;</span><br><span class="line"><span class="keyword">import</span> org.flowable.engine.repository.ProcessDefinition;</span><br><span class="line"><span class="keyword">import</span> org.flowable.engine.repository.ProcessDefinitionQuery;</span><br><span class="line"><span class="keyword">import</span> org.flowable.engine.runtime.ProcessInstance;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.BeforeClass;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ProcessEngineConfiguration configuration;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BeforeClass</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeClass</span><span class="params">()</span> &#123;</span><br><span class="line">        buildConfiguration();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">buildConfiguration</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">/* 流程引擎配置 */</span></span><br><span class="line">        configuration = <span class="keyword">new</span> <span class="title class_">StandaloneProcessEngineConfiguration</span>();</span><br><span class="line">        <span class="comment">// 数据库链接信息</span></span><br><span class="line">        configuration.setJdbcDriver(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        configuration.setJdbcUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        configuration.setJdbcPassword(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        configuration.setJdbcUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/flowable_study?useUnicode=true&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=true&amp;serverTimezone=GMT%2B8&quot;</span>);</span><br><span class="line">        <span class="comment">// 如果数据库中的表结构不存在则新建</span></span><br><span class="line">        configuration.setDatabaseSchemaUpdate(ProcessEngineConfiguration.DB_SCHEMA_UPDATE_TRUE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testProcessEngine</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">/* 流程引擎对象 */</span></span><br><span class="line">        <span class="type">ProcessEngine</span> <span class="variable">processEngine</span> <span class="operator">=</span> configuration.buildProcessEngine();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 部署流程</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * select * from act_ge_bytearray ;</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * select * from act_re_procdef ;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDeploy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">/* 流程引擎对象 */</span></span><br><span class="line">        <span class="type">ProcessEngine</span> <span class="variable">processEngine</span> <span class="operator">=</span> configuration.buildProcessEngine();</span><br><span class="line">        <span class="type">RepositoryService</span> <span class="variable">repositoryService</span> <span class="operator">=</span> processEngine.getRepositoryService();</span><br><span class="line"></span><br><span class="line">        <span class="type">Deployment</span> <span class="variable">deployment</span> <span class="operator">=</span> repositoryService.createDeployment() <span class="comment">// 创建 Deployment 对象</span></span><br><span class="line">                .addClasspathResource(<span class="string">&quot;bpmn/holiday-request.bpmn20.xml&quot;</span>) <span class="comment">// 添加流程部署文件</span></span><br><span class="line">                .name(<span class="string">&quot;approveTask&quot;</span>) <span class="comment">// 设置部署流程名称</span></span><br><span class="line">                .deploy(); <span class="comment">// 执行部署操作</span></span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;deployment.getId():&#123;&#125;&quot;</span>, deployment.getId());</span><br><span class="line">        log.info(<span class="string">&quot;deployment.getName():&#123;&#125;&quot;</span>, deployment.getName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询流程定义信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDeployQuery</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">/* 流程引擎对象 */</span></span><br><span class="line">        <span class="type">ProcessEngine</span> <span class="variable">processEngine</span> <span class="operator">=</span> configuration.buildProcessEngine();</span><br><span class="line">        <span class="type">RepositoryService</span> <span class="variable">repositoryService</span> <span class="operator">=</span> processEngine.getRepositoryService();</span><br><span class="line"></span><br><span class="line">        <span class="type">ProcessDefinitionQuery</span> <span class="variable">definitionQuery</span> <span class="operator">=</span> repositoryService.createProcessDefinitionQuery();</span><br><span class="line">        <span class="type">ProcessDefinition</span> <span class="variable">definition</span> <span class="operator">=</span> definitionQuery.deploymentId(<span class="string">&quot;1&quot;</span>).singleResult();</span><br><span class="line">        log.info(<span class="string">&quot;definition.getDeploymentId:&#123;&#125;&quot;</span>, definition.getDeploymentId());</span><br><span class="line">        log.info(<span class="string">&quot;definition.getName:&#123;&#125;&quot;</span>, definition.getName());</span><br><span class="line">        log.info(<span class="string">&quot;definition.getDescription:&#123;&#125;&quot;</span>, definition.getDescription());</span><br><span class="line">        log.info(<span class="string">&quot;definition.getId:&#123;&#125;&quot;</span>, definition.getId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除流程定义</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDeployDelete</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">/* 流程引擎对象 */</span></span><br><span class="line">        <span class="type">ProcessEngine</span> <span class="variable">processEngine</span> <span class="operator">=</span> configuration.buildProcessEngine();</span><br><span class="line">        <span class="type">RepositoryService</span> <span class="variable">repositoryService</span> <span class="operator">=</span> processEngine.getRepositoryService();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// deploymentId : 部署流程 id, 如果流程启动了就不允许删除了</span></span><br><span class="line">        <span class="comment">// cascade : 如果流程启动了, 也可以删除, 先关的人物一并删除</span></span><br><span class="line">        repositoryService.deleteDeployment(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 启动流程实例</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * select * from act_ru_execution ; -- 流程实例信息</span></span><br><span class="line"><span class="comment">     * select * from act_ru_variable ; -- 流程变量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testRunProcess</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">/* 流程引擎对象 */</span></span><br><span class="line">        <span class="type">ProcessEngine</span> <span class="variable">processEngine</span> <span class="operator">=</span> configuration.buildProcessEngine();</span><br><span class="line">        <span class="type">RuntimeService</span> <span class="variable">runtimeService</span> <span class="operator">=</span> processEngine.getRuntimeService();</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Object&gt; variables = Maps.newHashMap();</span><br><span class="line">        variables.put(<span class="string">&quot;employee&quot;</span>, <span class="string">&quot;张三&quot;</span>);</span><br><span class="line">        variables.put(<span class="string">&quot;nrOfHolidays&quot;</span>, <span class="number">3</span>);</span><br><span class="line">        variables.put(<span class="string">&quot;desciption&quot;</span>, <span class="string">&quot;出去玩&quot;</span>);</span><br><span class="line">        <span class="type">ProcessInstance</span> <span class="variable">holidayRequest</span> <span class="operator">=</span> runtimeService.startProcessInstanceByKey(<span class="string">&quot;holidayRequest&quot;</span>, variables);</span><br><span class="line">        log.info(<span class="string">&quot;holidayRequest.getProcessDefinitionId():&#123;&#125;&quot;</span>, holidayRequest.getProcessDefinitionId());</span><br><span class="line">        log.info(<span class="string">&quot;holidayRequest.getActivityId():&#123;&#125;&quot;</span>, holidayRequest.getActivityId());</span><br><span class="line">        log.info(<span class="string">&quot;holidayRequest.getId():&#123;&#125;&quot;</span>, holidayRequest.getId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="添加-flowable-表结构"><a href="#添加-flowable-表结构" class="headerlink" title="添加 flowable 表结构"></a>添加 flowable 表结构</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.flowable.engine.ProcessEngine;</span><br><span class="line"><span class="keyword">import</span> org.flowable.engine.ProcessEngineConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.flowable.engine.impl.cfg.StandaloneProcessEngineConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testProcessEngine</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">/* 流程引擎配置 */</span></span><br><span class="line">        <span class="type">ProcessEngineConfiguration</span> <span class="variable">configuration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StandaloneProcessEngineConfiguration</span>();</span><br><span class="line">        <span class="comment">// 数据库链接信息</span></span><br><span class="line">        configuration.setJdbcDriver(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        configuration.setJdbcUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        configuration.setJdbcPassword(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        configuration.setJdbcUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/flowable_study?useUnicode=true&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=true&amp;serverTimezone=GMT%2B8&quot;</span>);</span><br><span class="line">        <span class="comment">// 如果数据库中的表结构不存在则新建</span></span><br><span class="line">        configuration.setDatabaseSchemaUpdate(ProcessEngineConfiguration.DB_SCHEMA_UPDATE_TRUE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 流程引擎对象 */</span></span><br><span class="line">        <span class="type">ProcessEngine</span> <span class="variable">processEngine</span> <span class="operator">=</span> configuration.buildProcessEngine();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行完毕后创建了如下 <code>34</code> 个表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">act_evt_log</span><br><span class="line">act_ge_bytearray</span><br><span class="line">act_ge_property</span><br><span class="line">act_hi_actinst</span><br><span class="line">act_hi_attachment</span><br><span class="line">act_hi_comment</span><br><span class="line">act_hi_detail</span><br><span class="line">act_hi_identitylink</span><br><span class="line">act_hi_procinst</span><br><span class="line">act_hi_taskinst</span><br><span class="line">act_hi_varinst</span><br><span class="line">act_id_bytearray</span><br><span class="line">act_id_group</span><br><span class="line">act_id_info</span><br><span class="line">act_id_membership</span><br><span class="line">act_id_priv</span><br><span class="line">act_id_priv_mapping</span><br><span class="line">act_id_property</span><br><span class="line">act_id_token</span><br><span class="line">act_id_user</span><br><span class="line">act_procdef_info</span><br><span class="line">act_re_deployment</span><br><span class="line">act_re_model</span><br><span class="line">act_re_procdef</span><br><span class="line">act_ru_deadletter_job</span><br><span class="line">act_ru_event_subscr</span><br><span class="line">act_ru_execution</span><br><span class="line">act_ru_history_job</span><br><span class="line">act_ru_identitylink</span><br><span class="line">act_ru_job</span><br><span class="line">act_ru_suspended_job</span><br><span class="line">act_ru_task</span><br><span class="line">act_ru_timer_job</span><br><span class="line">act_ru_variable</span><br></pre></td></tr></table></figure>

<h2 id="flowable-表结构说明"><a href="#flowable-表结构说明" class="headerlink" title="flowable 表结构说明"></a>flowable 表结构说明</h2><h1 id="各个-service-的说明"><a href="#各个-service-的说明" class="headerlink" title="各个 service 的说明"></a>各个 service 的说明</h1>]]></content>
      <categories>
        <category>java</category>
        <category>工作流</category>
        <category>flowable</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>工作流</tag>
        <tag>flowable</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql 常用查询</title>
    <url>/2024/08/22/mysql-%E5%B8%B8%E7%94%A8%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="mysql%E7%9A%847%E7%A7%8Djoin(%E5%9B%BE%E7%A0%81%E5%B9%B6%E8%8C%82,%E6%B8%85%E6%99%B0%E6%98%93%E6%87%82!)">mysql的7种join(图码并茂,清晰易懂!)</a><br><a href="https://cloud.tencent.com/developer/article/1164332">常见电商项目的数据库表设计（MySQL版）</a></p>
<h1 id="表结构"><a href="#表结构" class="headerlink" title="表结构"></a>表结构</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> customer_info;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> customer_info(</span><br><span class="line">customer_id <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> auto_increment comment <span class="string">&#x27;订单id&#x27;</span>,</span><br><span class="line">customer_name <span class="type">varchar</span>(<span class="number">150</span>) comment <span class="string">&#x27;用户名称&#x27;</span>,</span><br><span class="line">phone <span class="type">varchar</span>(<span class="number">20</span>) comment <span class="string">&#x27;手机号&#x27;</span>,</span><br><span class="line">gender <span class="type">char</span>(<span class="number">1</span>) comment <span class="string">&#x27;性别: M:男性 F:女性 U:未知&#x27;</span>,</span><br><span class="line"><span class="keyword">primary</span> key(customer_id)</span><br><span class="line">)ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 COMMENT<span class="operator">=</span><span class="string">&#x27;订单表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> orders;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> orders(</span><br><span class="line">order_id <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> auto_increment comment <span class="string">&#x27;订单id&#x27;</span>,</span><br><span class="line">order_num <span class="type">varchar</span>(<span class="number">150</span>) comment <span class="string">&#x27;订单编号&#x27;</span>,</span><br><span class="line">customer_id <span class="type">bigint</span>(<span class="number">20</span>) comment <span class="string">&#x27;用户&#x27;</span>,</span><br><span class="line">pay_method <span class="type">varchar</span>(<span class="number">10</span>) comment <span class="string">&#x27;支付方式: cash:现金 balance:余额 alipay:支付宝 wx:微信&#x27;</span>,</span><br><span class="line">total_amount <span class="type">decimal</span>(<span class="number">10</span>,<span class="number">2</span>) comment <span class="string">&#x27;支付金额&#x27;</span>,</span><br><span class="line">discount_amount <span class="type">decimal</span>(<span class="number">10</span>,<span class="number">2</span>) comment <span class="string">&#x27;优惠金额&#x27;</span>,</span><br><span class="line">shipping_amount <span class="type">decimal</span>(<span class="number">10</span>,<span class="number">2</span>) comment <span class="string">&#x27;运费金额&#x27;</span>,</span><br><span class="line">created_time datetime comment <span class="string">&#x27;下单时间&#x27;</span>,</span><br><span class="line">pay_time datetime comment <span class="string">&#x27;支付时间&#x27;</span>,</span><br><span class="line">receive_time datetime comment <span class="string">&#x27;收货时间&#x27;</span>,</span><br><span class="line">status <span class="type">varchar</span>(<span class="number">20</span>) comment <span class="string">&#x27;订单状态: created:新建(未支付) paid:支付完成(待发货) canceled:已取消 finished:已完成&#x27;</span>,</span><br><span class="line"><span class="keyword">primary</span> key(order_id)</span><br><span class="line">)ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 COMMENT<span class="operator">=</span><span class="string">&#x27;订单表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> orders_item;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> orders_item(</span><br><span class="line">order_item_id <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> auto_increment comment <span class="string">&#x27;订单项id&#x27;</span>,</span><br><span class="line">order_num <span class="type">varchar</span>(<span class="number">150</span>) comment <span class="string">&#x27;订单编号&#x27;</span>,</span><br><span class="line">product_id <span class="type">bigint</span>(<span class="number">20</span>) comment <span class="string">&#x27;商品 id&#x27;</span>,</span><br><span class="line">product_cnt <span class="type">int</span> comment <span class="string">&#x27;商品数量&#x27;</span>,</span><br><span class="line">product_price <span class="type">decimal</span>(<span class="number">10</span>,<span class="number">2</span>) comment <span class="string">&#x27;单价&#x27;</span>,</span><br><span class="line">avg_discount_amount <span class="type">decimal</span>(<span class="number">10</span>,<span class="number">2</span>) comment <span class="string">&#x27;优惠分摊金额&#x27;</span>,</span><br><span class="line">total_amount <span class="type">decimal</span>(<span class="number">10</span>,<span class="number">2</span>) comment <span class="string">&#x27;订单项总金额&#x27;</span>,</span><br><span class="line"><span class="keyword">primary</span> key(order_item_id)</span><br><span class="line">)ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 COMMENT<span class="operator">=</span><span class="string">&#x27;订单项表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> product_info;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> product_info(</span><br><span class="line">product_id <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> auto_increment comment <span class="string">&#x27;订单项id&#x27;</span>,</span><br><span class="line">product_num <span class="type">varchar</span>(<span class="number">150</span>) comment <span class="string">&#x27;商品编号&#x27;</span>,</span><br><span class="line">product_title <span class="type">varchar</span>(<span class="number">150</span>) comment <span class="string">&#x27;商品标题&#x27;</span>,</span><br><span class="line">product_price <span class="type">decimal</span>(<span class="number">10</span>,<span class="number">2</span>) comment <span class="string">&#x27;商品价格&#x27;</span>,</span><br><span class="line"><span class="keyword">primary</span> key(product_id)</span><br><span class="line">)ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 COMMENT<span class="operator">=</span><span class="string">&#x27;商品信息表&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h1 id="7-种-join"><a href="#7-种-join" class="headerlink" title="7 种 join"></a>7 种 join</h1><h2 id="7-种-join-总览"><a href="#7-种-join-总览" class="headerlink" title="7 种 join 总览"></a>7 种 join 总览</h2><p><img src="/images/2024-08-22-mysql_%E5%B8%B8%E7%94%A8%E6%9F%A5%E8%AF%A2/001.png"></p>
<h2 id="内链接"><a href="#内链接" class="headerlink" title="内链接"></a>内链接</h2><p><img src="/images/2024-08-22-mysql_%E5%B8%B8%E7%94%A8%E6%9F%A5%E8%AF%A2/002.png"></p>
]]></content>
      <categories>
        <category>数据库</category>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>lua 开发环境搭建</title>
    <url>/2024/08/29/lua-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p>luarocks 的基本使用</p>
<span id="more"></span>

<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>lua 官网: <a href="https://www.lua.org/">https://www.lua.org/</a></p>
<p>luarocks 官网: <a href="https://luarocks.org/">https://luarocks.org/</a></p>
<hr>
<p><a href="https://panguangyu.blog.csdn.net/article/details/88775896">Lua 最全的快速入门教程</a></p>
<p><a href="https://www.bilibili.com/video/BV1yv4y1g78G">lua从入门到进厂</a></p>
<p><a href="https://www.codenong.com/cs110780708/">Lua 包管理 – Luarocks 使用指南</a></p>
<p><a href="https://atom-l.github.io/lua5.4-manual-zh/">Lua 5.4 中文参考手册</a></p>
<p><a href="https://www.jianshu.com/p/91fac87bd6d3">linux 下编译Lua源码，同时生成 动态库.so 静态库.a 文件</a></p>
<p><a href="https://blog.csdn.net/qq826364410/article/details/88624824">【最详细易懂】C++和Lua交互总结</a></p>
<p><a href="https://www.bilibili.com/video/BV1oT4y1B7DL">C++与Lua联合编程实战</a></p>
<p><a href="https://blog.csdn.net/qq_42317817/article/details/120666327">高性能混合编程：用脚本语言配合C++使用之Lua</a></p>
<p><a href="https://indienova.com/indie-game-development/lua-as-script-with-cpp-development/">用 lua 脚本配合 C++ 开发</a></p>
<p><a href="https://blog.csdn.net/andylauren/article/details/99841848">（9）CMake入门笔记–同时生成动态库与静态库</a></p>
<h1 id="Linux-基本环境搭建"><a href="#Linux-基本环境搭建" class="headerlink" title="Linux 基本环境搭建"></a>Linux 基本环境搭建</h1><h2 id="lua-基本环境"><a href="#lua-基本环境" class="headerlink" title="lua 基本环境"></a>lua 基本环境</h2><h3 id="下载-lua"><a href="#下载-lua" class="headerlink" title="下载 lua"></a>下载 lua</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://www.lua.org/ftp/lua-5.4.2.tar.gz</span><br></pre></td></tr></table></figure>

<h3 id="编译-lua"><a href="#编译-lua" class="headerlink" title="编译 lua"></a>编译 lua</h3><p>直接 <code>make</code> 即可, 我把编译后的 <code>lua</code> 与 <code>luac</code> 放在了 <code>~/program/lua/lua542</code>, 然后将这个目录放入 <code>~/.bashrc</code> 即可</p>
<h3 id="测试-lua"><a href="#测试-lua" class="headerlink" title="测试 lua"></a>测试 lua</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:lua$ cat hello.lua </span><br><span class="line">print(&quot;Hello World&quot;)</span><br><span class="line">laolang@laolang-mint:lua$ lua hello.lua </span><br><span class="line">Hello World</span><br><span class="line">laolang@laolang-mint:lua$ </span><br></pre></td></tr></table></figure>

<h2 id="luarocks-基本环境"><a href="#luarocks-基本环境" class="headerlink" title="luarocks 基本环境"></a>luarocks 基本环境</h2><h3 id="下载-luarocks"><a href="#下载-luarocks" class="headerlink" title="下载 luarocks"></a>下载 luarocks</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://luarocks.org/releases/luarocks-3.11.1.tar.gz</span><br></pre></td></tr></table></figure>

<h3 id="安装-luarocks"><a href="#安装-luarocks" class="headerlink" title="安装 luarocks"></a>安装 luarocks</h3><p>解压后执行 <code>./configure</code> 提示</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:luarocks-3.11.1$ ./configure </span><br><span class="line"></span><br><span class="line">Configuring LuaRocks version 3.11.1...</span><br><span class="line"></span><br><span class="line">Lua version detected: 5.4</span><br><span class="line">Lua interpreter found: /home/laolang/program/lua/lua542/lua</span><br><span class="line">lua.h for Lua 5.4 not found (tried /home/laolang/program/lua/include/lua/5.4/lua.h /home/laolang/program/lua/include/lua5.4/lua.h /home/laolang/program/lua/include/lua-5.4/lua.h /home/laolang/program/lua/include/lua54/lua.h /home/laolang/program/lua/include/lua.h)</span><br><span class="line"></span><br><span class="line">If the development files for Lua (headers and libraries)</span><br><span class="line">are installed in your system, you may need to use the</span><br><span class="line">--with-lua or --with-lua-include flags to specify their location.</span><br><span class="line"></span><br><span class="line">If those files are not yet installed, you need to install</span><br><span class="line">them using the appropriate method for your operating system.</span><br><span class="line"></span><br><span class="line">Run ./configure --help for details on flags.</span><br><span class="line"></span><br><span class="line">configure failed.</span><br><span class="line"></span><br><span class="line">laolang@laolang-mint:luarocks-3.11.1$ which lua</span><br><span class="line">/home/laolang/program/lua/lua542/lua</span><br><span class="line">laolang@laolang-mint:luarocks-3.11.1$ </span><br></pre></td></tr></table></figure>

<p>根据提示, 将 <code>lua</code> 头文件放入 <code>~/program/lua/include/lua/5.4</code> , 然后再次执行 <code>./configure</code><br><strong><code>lua</code> 头文件</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:5.4$ pwd</span><br><span class="line">/home/laolang/program/lua/include/lua/5.4</span><br><span class="line">laolang@laolang-mint:5.4$ l</span><br><span class="line">总计 216K</span><br><span class="line">-rw-r--r-- 1 laolang laolang 1.3K 2024-06-01 17:10:06 lapi.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang 8.7K 2024-06-01 17:10:06 lauxlib.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang 3.8K 2024-06-01 17:10:06 lcode.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang 2.1K 2024-06-01 17:10:06 lctype.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang 1.9K 2024-06-01 17:10:06 ldebug.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang 2.8K 2024-06-01 17:10:06 ldo.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang 1.8K 2024-06-01 17:10:06 lfunc.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang 5.9K 2024-06-01 17:10:06 lgc.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang 1.7K 2024-06-01 17:10:06 ljumptab.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang 2.4K 2024-06-01 17:10:06 llex.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang 8.8K 2024-06-01 17:10:06 llimits.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang 3.3K 2024-06-01 17:10:06 lmem.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang  22K 2024-06-01 17:10:06 lobject.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang  13K 2024-06-01 17:10:06 lopcodes.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang 1.2K 2024-06-01 17:10:06 lopnames.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang 5.8K 2024-06-01 17:10:06 lparser.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang  828 2024-06-01 17:10:06 lprefix.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang  14K 2024-06-01 17:10:06 lstate.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang 1.6K 2024-06-01 17:10:06 lstring.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang 2.0K 2024-06-01 17:10:06 ltable.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang 2.9K 2024-06-01 17:10:06 ltm.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang  21K 2024-06-01 17:10:06 luaconf.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang  16K 2024-06-01 17:10:06 lua.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang  191 2024-06-01 17:10:06 lua.hpp</span><br><span class="line">-rw-r--r-- 1 laolang laolang 1.2K 2024-06-01 17:10:06 lualib.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang  863 2024-06-01 17:10:06 lundump.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang 4.3K 2024-06-01 17:10:06 lvm.h</span><br><span class="line">-rw-r--r-- 1 laolang laolang 1.5K 2024-06-01 17:10:06 lzio.h</span><br><span class="line">laolang@laolang-mint:5.4$ </span><br></pre></td></tr></table></figure>

<p><strong><code>./configure</code></strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:luarocks-3.11.1$ ./configure </span><br><span class="line"></span><br><span class="line">Configuring LuaRocks version 3.11.1...</span><br><span class="line"></span><br><span class="line">Lua version detected: 5.4</span><br><span class="line">Lua interpreter found: /home/laolang/program/lua/lua542/lua</span><br><span class="line">lua.h found: /home/laolang/program/lua/include/lua/5.4/lua.h</span><br><span class="line">unzip found in PATH: /usr/bin</span><br><span class="line"></span><br><span class="line">Done configuring.</span><br><span class="line"></span><br><span class="line">LuaRocks will be installed at......: /usr/local</span><br><span class="line">LuaRocks will install rocks at.....: /usr/local</span><br><span class="line">LuaRocks configuration directory...: /usr/local/etc/luarocks</span><br><span class="line">Using Lua from.....................: /home/laolang/program/lua</span><br><span class="line"></span><br><span class="line">* Type make and make install:</span><br><span class="line">  to install to /usr/local as usual.</span><br><span class="line">* Type make bootstrap:</span><br><span class="line">  to install LuaRocks into /usr/local as a rock.</span><br><span class="line"></span><br><span class="line">laolang@laolang-mint:luarocks-3.11.1$ </span><br></pre></td></tr></table></figure>

<p>然后执行 <code>make &amp;&amp; sudo make install</code> 即可</p>
<h3 id="luarocks-安装后的配置"><a href="#luarocks-安装后的配置" class="headerlink" title="luarocks 安装后的配置"></a>luarocks 安装后的配置</h3><p>此时直接执行 <code>luarocks</code> 会提示</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:lua-hello$ luarocks</span><br><span class="line">Variables:</span><br><span class="line">   Variables from the &quot;variables&quot; table of the configuration file can be</span><br><span class="line">   overridden with VAR=VALUE assignments.</span><br><span class="line"></span><br><span class="line">Configuration:</span><br><span class="line">   Lua:</span><br><span class="line">      Version    : 5.4</span><br><span class="line">      LUA        : /home/laolang/program/lua/lua542/lua (ok)</span><br><span class="line">      LUA_INCDIR : (lua.h not found) 看这里看这里看这里看这里看这里</span><br><span class="line">                   ****************************************</span><br><span class="line">                   Use the command</span><br><span class="line"></span><br><span class="line">                      luarocks config variables.LUA_INCDIR &lt;dir&gt;</span><br><span class="line"></span><br><span class="line">                   to fix the location</span><br><span class="line">                   ****************************************</span><br><span class="line">      LUA_LIBDIR : (Lua library itself not found)</span><br><span class="line">                   ****************************************</span><br><span class="line">                   Use the command</span><br><span class="line"></span><br><span class="line">                      luarocks config variables.LUA_LIBDIR &lt;dir&gt;</span><br><span class="line"></span><br><span class="line">                   to fix the location</span><br><span class="line">                   ****************************************</span><br><span class="line"></span><br><span class="line">   Configuration files:</span><br><span class="line">      System  : /usr/local/etc/luarocks/config-5.4.lua (ok)</span><br><span class="line">      User    : /home/laolang/.luarocks/config-5.4.lua (ok)</span><br><span class="line"></span><br><span class="line">   Rocks trees in use:</span><br><span class="line">      /home/laolang/.luarocks (&quot;user&quot;)</span><br><span class="line">      /usr/local (&quot;system&quot;)</span><br><span class="line"></span><br><span class="line">laolang@laolang-mint:lua-hello$ </span><br></pre></td></tr></table></figure>

<p>解决这个问题很简单, 只需要再复制一次 <code>lua</code> 头文件到 <code>lua</code> 可执行程序所在目录即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:lua542$ tree</span><br><span class="line">.</span><br><span class="line">├── include</span><br><span class="line">│   └── lua</span><br><span class="line">│       └── 5.4</span><br><span class="line">│           ├── lapi.h</span><br><span class="line">│           ├── lauxlib.h</span><br><span class="line">│           ├── lcode.h</span><br><span class="line">│           ├── lctype.h</span><br><span class="line">│           ├── ldebug.h</span><br><span class="line">│           ├── ldo.h</span><br><span class="line">│           ├── lfunc.h</span><br><span class="line">│           ├── lgc.h</span><br><span class="line">│           ├── ljumptab.h</span><br><span class="line">│           ├── llex.h</span><br><span class="line">│           ├── llimits.h</span><br><span class="line">│           ├── lmem.h</span><br><span class="line">│           ├── lobject.h</span><br><span class="line">│           ├── lopcodes.h</span><br><span class="line">│           ├── lopnames.h</span><br><span class="line">│           ├── lparser.h</span><br><span class="line">│           ├── lprefix.h</span><br><span class="line">│           ├── lstate.h</span><br><span class="line">│           ├── lstring.h</span><br><span class="line">│           ├── ltable.h</span><br><span class="line">│           ├── ltm.h</span><br><span class="line">│           ├── luaconf.h</span><br><span class="line">│           ├── lua.h</span><br><span class="line">│           ├── lua.hpp</span><br><span class="line">│           ├── lualib.h</span><br><span class="line">│           ├── lundump.h</span><br><span class="line">│           ├── lvm.h</span><br><span class="line">│           └── lzio.h</span><br><span class="line">├── lua</span><br><span class="line">└── luac</span><br><span class="line"></span><br><span class="line">3 directories, 30 files</span><br><span class="line">laolang@laolang-mint:lua542$ </span><br></pre></td></tr></table></figure>

<h3 id="luarocks-安装库测试"><a href="#luarocks-安装库测试" class="headerlink" title="luarocks 安装库测试"></a>luarocks 安装库测试</h3><p>然后安装两个库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">luarocks install --tree=rocks luasocket</span><br><span class="line">luarocks install --tree=rocks lualogging</span><br></pre></td></tr></table></figure>

<p>安装过程如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:lua-hello$ luarocks install --tree=rocks luasocket</span><br><span class="line">Installing https://luarocks.org/luasocket-3.1.0-1.src.rock</span><br><span class="line"></span><br><span class="line">luasocket 3.1.0-1 depends on lua &gt;= 5.1 (5.4-1 provided by VM: success)</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/luasocket.c -o src/luasocket.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/timeout.c -o src/timeout.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/buffer.c -o src/buffer.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/io.c -o src/io.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/auxiliar.c -o src/auxiliar.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/options.c -o src/options.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/inet.c -o src/inet.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/except.c -o src/except.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/select.c -o src/select.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/tcp.c -o src/tcp.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/udp.c -o src/udp.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/compat.c -o src/compat.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/usocket.c -o src/usocket.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc  -shared -o /tmp/luarocks_build-LuaSocket-3.1.0-1-9566323/socket/core.so src/luasocket.o src/timeout.o src/buffer.o src/io.o src/auxiliar.o src/options.o src/inet.o src/except.o src/select.o src/tcp.o src/udp.o src/compat.o src/usocket.o</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/buffer.c -o src/buffer.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/compat.c -o src/compat.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/auxiliar.c -o src/auxiliar.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/options.c -o src/options.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/timeout.c -o src/timeout.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/io.c -o src/io.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/usocket.c -o src/usocket.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/serial.c -o src/serial.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc  -shared -o /tmp/luarocks_build-LuaSocket-3.1.0-1-9566323/socket/serial.so src/buffer.o src/compat.o src/auxiliar.o src/options.o src/timeout.o src/io.o src/usocket.o src/serial.o</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/mime.c -o src/mime.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/compat.c -o src/compat.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc  -shared -o /tmp/luarocks_build-LuaSocket-3.1.0-1-9566323/mime/core.so src/mime.o src/compat.o</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/buffer.c -o src/buffer.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/compat.c -o src/compat.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/auxiliar.c -o src/auxiliar.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/options.c -o src/options.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/timeout.c -o src/timeout.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/io.c -o src/io.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/usocket.c -o src/usocket.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/unix.c -o src/unix.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/unixdgram.c -o src/unixdgram.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc -O2 -fPIC -I/home/laolang/program/lua/lua542/include/lua/5.4 -c src/unixstream.c -o src/unixstream.o -DLUASOCKET_DEBUG</span><br><span class="line">gcc  -shared -o /tmp/luarocks_build-LuaSocket-3.1.0-1-9566323/socket/unix.so src/buffer.o src/compat.o src/auxiliar.o src/options.o src/timeout.o src/io.o src/usocket.o src/unix.o src/unixdgram.o src/unixstream.o</span><br><span class="line">No existing manifest. Attempting to rebuild...</span><br><span class="line">luasocket 3.1.0-1 is now installed in /home/laolang/code/lua/lua-hello/rocks (license: MIT)</span><br><span class="line"></span><br><span class="line">laolang@laolang-mint:lua-hello$ luarocks install --tree=rocks lualogging</span><br><span class="line">Installing https://luarocks.org/lualogging-1.8.2-1.src.rock</span><br><span class="line"></span><br><span class="line">lualogging 1.8.2-1 depends on luasocket (3.1.0-1 installed: success)</span><br><span class="line">lualogging 1.8.2-1 is now installed in /home/laolang/code/lua/lua-hello/rocks (license: MIT/X11)</span><br><span class="line"></span><br><span class="line">laolang@laolang-mint:lua-hello$ </span><br></pre></td></tr></table></figure>


<p>测试文件内容如下</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="built_in">package</span>.<span class="built_in">path</span> = <span class="built_in">package</span>.<span class="built_in">path</span> .. <span class="string">&quot;;./rocks/share/lua/5.4/?.lua&quot;</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;logging&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> #<span class="built_in">arg</span> &gt; <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">arg</span>[<span class="number">1</span>] ~= <span class="literal">nil</span> <span class="keyword">and</span> <span class="built_in">arg</span>[<span class="number">1</span>] == <span class="string">&quot;on&quot;</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">local</span> dbg = <span class="built_in">require</span>(<span class="string">&quot;emmy_core&quot;</span>)</span><br><span class="line">        dbg.tcpListen(<span class="string">&quot;localhost&quot;</span>, <span class="number">9966</span>)</span><br><span class="line">        dbg.waitIDE()</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> Logging = <span class="built_in">require</span> <span class="string">&quot;logging&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> appender = <span class="function"><span class="keyword">function</span><span class="params">(self, level, message)</span></span></span><br><span class="line">    <span class="built_in">print</span>(level, message)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> logger = Logging.new(appender)</span><br><span class="line">logger:setLevel(logger.INFO)</span><br><span class="line">logger:info(<span class="string">&quot;Hello Lua&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>执行结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:lua-hello$ lua main.lua </span><br><span class="line">INFO	Hello Lua</span><br><span class="line">laolang@laolang-mint:lua-hello$ </span><br></pre></td></tr></table></figure>

<h2 id="C-与-lua-混合编程"><a href="#C-与-lua-混合编程" class="headerlink" title="C++ 与 lua 混合编程"></a>C++ 与 lua 混合编程</h2><h3 id="创建-lua-动态库"><a href="#创建-lua-动态库" class="headerlink" title="创建 lua 动态库"></a>创建 lua 动态库</h3><h4 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:lua_lib$ tree</span><br><span class="line">.</span><br><span class="line">├── CMakeLists.txt</span><br><span class="line">├── CMakePresets.json</span><br><span class="line">├── include</span><br><span class="line">│   ├── lapi.h</span><br><span class="line">│   ├── lauxlib.h</span><br><span class="line">│   ├── lcode.h</span><br><span class="line">│   ├── lctype.h</span><br><span class="line">│   ├── ldebug.h</span><br><span class="line">│   ├── ldo.h</span><br><span class="line">│   ├── lfunc.h</span><br><span class="line">│   ├── lgc.h</span><br><span class="line">│   ├── ljumptab.h</span><br><span class="line">│   ├── llex.h</span><br><span class="line">│   ├── llimits.h</span><br><span class="line">│   ├── lmem.h</span><br><span class="line">│   ├── lobject.h</span><br><span class="line">│   ├── lopcodes.h</span><br><span class="line">│   ├── lopnames.h</span><br><span class="line">│   ├── lparser.h</span><br><span class="line">│   ├── lprefix.h</span><br><span class="line">│   ├── lstate.h</span><br><span class="line">│   ├── lstring.h</span><br><span class="line">│   ├── ltable.h</span><br><span class="line">│   ├── ltm.h</span><br><span class="line">│   ├── luaconf.h</span><br><span class="line">│   ├── lua.h</span><br><span class="line">│   ├── lua.hpp</span><br><span class="line">│   ├── lualib.h</span><br><span class="line">│   ├── lundump.h</span><br><span class="line">│   ├── lvm.h</span><br><span class="line">│   └── lzio.h</span><br><span class="line">└── src</span><br><span class="line">    ├── lapi.c</span><br><span class="line">    ├── lauxlib.c</span><br><span class="line">    ├── lbaselib.c</span><br><span class="line">    ├── lcode.c</span><br><span class="line">    ├── lcorolib.c</span><br><span class="line">    ├── lctype.c</span><br><span class="line">    ├── ldblib.c</span><br><span class="line">    ├── ldebug.c</span><br><span class="line">    ├── ldo.c</span><br><span class="line">    ├── ldump.c</span><br><span class="line">    ├── lfunc.c</span><br><span class="line">    ├── lgc.c</span><br><span class="line">    ├── linit.c</span><br><span class="line">    ├── liolib.c</span><br><span class="line">    ├── llex.c</span><br><span class="line">    ├── lmathlib.c</span><br><span class="line">    ├── lmem.c</span><br><span class="line">    ├── loadlib.c</span><br><span class="line">    ├── lobject.c</span><br><span class="line">    ├── lopcodes.c</span><br><span class="line">    ├── loslib.c</span><br><span class="line">    ├── lparser.c</span><br><span class="line">    ├── lstate.c</span><br><span class="line">    ├── lstring.c</span><br><span class="line">    ├── lstrlib.c</span><br><span class="line">    ├── ltable.c</span><br><span class="line">    ├── ltablib.c</span><br><span class="line">    ├── ltm.c</span><br><span class="line">    ├── lundump.c</span><br><span class="line">    ├── lutf8lib.c</span><br><span class="line">    ├── lvm.c</span><br><span class="line">    └── lzio.c</span><br><span class="line"></span><br><span class="line">2 directories, 62 files</span><br><span class="line">laolang@laolang-mint:lua_lib$ </span><br></pre></td></tr></table></figure>

<h4 id="CMakeLists-txt"><a href="#CMakeLists-txt" class="headerlink" title="CMakeLists.txt"></a>CMakeLists.txt</h4><blockquote>
<p><strong>注意:</strong><br><strong><code>src</code> 目录中没有 <code>lua.c</code> 和 <code>luac.c</code></strong><br><strong>其实有也不要紧, 在 CMakeLists.txt 中手动指定了源文件列表</strong></p>
</blockquote>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.26</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_STANDARD <span class="number">17</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_STANDARD_REQUIRED <span class="keyword">True</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_EXTENSIONS <span class="keyword">OFF</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">project</span>(lua LANGUAGES C)</span><br><span class="line"></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span>/<span class="keyword">include</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(src_list</span><br><span class="line">src/lapi.c</span><br><span class="line">src/lauxlib.c</span><br><span class="line">src/lbaselib.c</span><br><span class="line">src/lcode.c</span><br><span class="line">src/lcorolib.c</span><br><span class="line">src/lctype.c</span><br><span class="line">src/ldblib.c</span><br><span class="line">src/ldebug.c</span><br><span class="line">src/ldo.c</span><br><span class="line">src/ldump.c</span><br><span class="line">src/lfunc.c</span><br><span class="line">src/lgc.c</span><br><span class="line">src/linit.c</span><br><span class="line">src/liolib.c</span><br><span class="line">src/llex.c</span><br><span class="line">src/lmathlib.c</span><br><span class="line">src/lmem.c</span><br><span class="line">src/loadlib.c</span><br><span class="line">src/lobject.c</span><br><span class="line">src/lopcodes.c</span><br><span class="line">src/loslib.c</span><br><span class="line">src/lparser.c</span><br><span class="line">src/lstate.c</span><br><span class="line">src/lstring.c</span><br><span class="line">src/lstrlib.c</span><br><span class="line">src/ltable.c</span><br><span class="line">src/ltablib.c</span><br><span class="line">src/ltm.c</span><br><span class="line">src/lundump.c</span><br><span class="line">src/lutf8lib.c</span><br><span class="line">src/lvm.c</span><br><span class="line">src/lzio.c</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成动态库</span></span><br><span class="line"><span class="keyword">add_library</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span> SHARED <span class="variable">$&#123;src_list&#125;</span>)</span><br><span class="line"><span class="comment"># 设置动态库版本</span></span><br><span class="line"><span class="keyword">SET_TARGET_PROPERTIES</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span> PROPERTIES VERSION <span class="number">5.4</span>.<span class="number">2</span> SOVERSION <span class="number">5</span>)</span><br><span class="line"><span class="comment"># 生成静态库</span></span><br><span class="line"><span class="keyword">add_library</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span>_static STATIC <span class="variable">$&#123;src_list&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使动态库和静态库同时存在</span></span><br><span class="line"><span class="keyword">set_target_properties</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span>_static PROPERTIES OUTPUT_NAME <span class="variable">$&#123;PROJECT_NAME&#125;</span>)</span><br><span class="line"><span class="keyword">set_target_properties</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span> PROPERTIES CLEAN_DIRECT_OUTPUT <span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<h4 id="CMakePresets-json"><a href="#CMakePresets-json" class="headerlink" title="CMakePresets.json"></a>CMakePresets.json</h4><blockquote>
<p><strong>注意:<code>ninja</code>路径修改为自己的实际路径</strong></p>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;cmakeMinimumRequired&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;major&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;minor&quot;</span><span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;patch&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurePresets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows-base&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;displayName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;preset base&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;通用设置&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cacheVariables&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_MAKE_PROGRAM&quot;</span><span class="punctuation">:</span> <span class="string">&quot;D:/program/qt/Tools/Ninja/ninja.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_GENERATOR&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Ninja&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_C_COMPILER&quot;</span><span class="punctuation">:</span> <span class="string">&quot;D:/program/qt/Tools/mingw1120_64/bin/gcc.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_C_FLAGS&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-Wall -Wextra&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows-release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;displayName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;使用 ninja 与 g++ 构建 release 版本&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;inherits&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows-base&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;binaryDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;sourceDir&#125;/build/ninja-release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cacheVariables&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_BUILD_TYPE&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Release&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;displayName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;使用 ninja 与 g++ 构建 debug 版本&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;inherits&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows-base&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;binaryDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;sourceDir&#125;/build/ninja-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cacheVariables&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_BUILD_TYPE&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_DEBUG_POSTFIX&quot;</span><span class="punctuation">:</span> <span class="string">&quot;d&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linux-base&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;displayName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;preset base&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;通用设置&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cacheVariables&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_GENERATOR&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Ninja&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_MAKE_PROGRAM&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/home/laolang/.local/bin/ninja&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_C_COMPILER&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/bin/gcc&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_C_FLAGS&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-Wall -Wextra&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linux-release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;displayName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linux release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;使用 ninja 与 g++ 构建 release 版本&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;inherits&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linux-base&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;binaryDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;sourceDir&#125;/build/ninja-release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cacheVariables&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_BUILD_TYPE&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Release&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linux-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;displayName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linux debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;使用 ninja 与 g++ 构建 debug 版本&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;inherits&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linux-base&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;binaryDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;sourceDir&#125;/build/ninja-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cacheVariables&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_BUILD_TYPE&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_DEBUG_POSTFIX&quot;</span><span class="punctuation">:</span> <span class="string">&quot;d&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;buildPresets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows-release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;configurePreset&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows-release&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;configurePreset&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows-debug&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linux-release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;configurePreset&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linux-release&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linux-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;configurePreset&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linux-debug&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h4 id="生成动态库"><a href="#生成动态库" class="headerlink" title="生成动态库"></a>生成动态库</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cmake --preset=linux-release &amp;&amp; cmake --build --preset=linux-release</span><br></pre></td></tr></table></figure>

<p>构建过程如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:lua_lib$ cmake --preset=linux-release &amp;&amp; cmake --build --preset=linux-release</span><br><span class="line">Preset CMake variables:</span><br><span class="line"></span><br><span class="line">  CMAKE_BUILD_TYPE=&quot;Release&quot;</span><br><span class="line">  CMAKE_C_COMPILER=&quot;/usr/bin/gcc&quot;</span><br><span class="line">  CMAKE_C_FLAGS=&quot;-Wall -Wextra&quot;</span><br><span class="line">  CMAKE_GENERATOR=&quot;Ninja&quot;</span><br><span class="line">  CMAKE_MAKE_PROGRAM=&quot;/home/laolang/.local/bin/ninja&quot;</span><br><span class="line"></span><br><span class="line">-- The C compiler identification is GNU 11.4.0</span><br><span class="line">-- Detecting C compiler ABI info</span><br><span class="line">-- Detecting C compiler ABI info - done</span><br><span class="line">-- Check for working C compiler: /usr/bin/gcc - skipped</span><br><span class="line">-- Detecting C compile features</span><br><span class="line">-- Detecting C compile features - done</span><br><span class="line">-- Configuring done (0.2s)</span><br><span class="line">-- Generating done (0.0s)</span><br><span class="line">-- Build files have been written to: /home/laolang/program/lua/lua_lib/build/ninja-release</span><br><span class="line">[64/67] Linking C shared library liblua.so.5.4.2</span><br><span class="line">/usr/bin/ld: CMakeFiles/lua.dir/src/loslib.c.o: in function `os_tmpname&#x27;:</span><br><span class="line">loslib.c:(.text+0x405): 警告： the use of `tmpnam&#x27; is dangerous, better use `mkstemp&#x27;</span><br><span class="line">[67/67] Linking C static library liblua.a</span><br><span class="line">laolang@laolang-mint:lua_lib$ l build/ninja-release/</span><br><span class="line">总计 1.1M</span><br><span class="line">-rw-rw-r-- 1 laolang laolang  53K 2024-06-01 17:28:58 build.ninja</span><br><span class="line">-rw-rw-r-- 1 laolang laolang  13K 2024-06-01 17:28:58 CMakeCache.txt</span><br><span class="line">drwxrwxr-x 7 laolang laolang 4.0K 2024-06-01 17:28:58 CMakeFiles/</span><br><span class="line">-rw-rw-r-- 1 laolang laolang 1.7K 2024-06-01 17:28:58 cmake_install.cmake</span><br><span class="line">-rw-rw-r-- 1 laolang laolang 595K 2024-06-01 17:29:00 liblua.a</span><br><span class="line">lrwxrwxrwx 1 laolang laolang   11 2024-06-01 17:28:59 liblua.so -&gt; liblua.so.5*</span><br><span class="line">lrwxrwxrwx 1 laolang laolang   15 2024-06-01 17:28:59 liblua.so.5 -&gt; liblua.so.5.4.2*</span><br><span class="line">-rwxrwxr-x 1 laolang laolang 353K 2024-06-01 17:28:59 liblua.so.5.4.2*</span><br><span class="line">laolang@laolang-mint:lua_lib$ </span><br></pre></td></tr></table></figure>


<h3 id="使用动态库"><a href="#使用动态库" class="headerlink" title="使用动态库"></a>使用动态库</h3><h4 id="目录结构-1"><a href="#目录结构-1" class="headerlink" title="目录结构"></a>目录结构</h4><blockquote>
<p><strong>注意:</strong><br><strong>需要复制上一步编译好的 <code>lua</code> 动态库</strong></p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:test$ tree</span><br><span class="line">.</span><br><span class="line">├── CMakeLists.txt</span><br><span class="line">├── CMakePresets.json</span><br><span class="line">├── copylib.sh</span><br><span class="line">├── lib</span><br><span class="line">│   ├── liblua.so</span><br><span class="line">│   ├── liblua.so.5</span><br><span class="line">│   └── liblua.so.5.4.2</span><br><span class="line">├── lua</span><br><span class="line">│   └── main.lua</span><br><span class="line">├── main.cpp</span><br><span class="line">├── Makefile</span><br><span class="line">└── third</span><br><span class="line">    └── lua</span><br><span class="line">        ├── lapi.h</span><br><span class="line">        ├── lauxlib.h</span><br><span class="line">        ├── lcode.h</span><br><span class="line">        ├── lctype.h</span><br><span class="line">        ├── ldebug.h</span><br><span class="line">        ├── ldo.h</span><br><span class="line">        ├── lfunc.h</span><br><span class="line">        ├── lgc.h</span><br><span class="line">        ├── ljumptab.h</span><br><span class="line">        ├── llex.h</span><br><span class="line">        ├── llimits.h</span><br><span class="line">        ├── lmem.h</span><br><span class="line">        ├── lobject.h</span><br><span class="line">        ├── lopcodes.h</span><br><span class="line">        ├── lopnames.h</span><br><span class="line">        ├── lparser.h</span><br><span class="line">        ├── lprefix.h</span><br><span class="line">        ├── lstate.h</span><br><span class="line">        ├── lstring.h</span><br><span class="line">        ├── ltable.h</span><br><span class="line">        ├── ltm.h</span><br><span class="line">        ├── luaconf.h</span><br><span class="line">        ├── lua.h</span><br><span class="line">        ├── lua.hpp</span><br><span class="line">        ├── lualib.h</span><br><span class="line">        ├── lundump.h</span><br><span class="line">        ├── lvm.h</span><br><span class="line">        └── lzio.h</span><br><span class="line"></span><br><span class="line">4 directories, 37 files</span><br><span class="line">laolang@laolang-mint:test$ </span><br></pre></td></tr></table></figure>

<h4 id="main-cpp"><a href="#main-cpp" class="headerlink" title="main.cpp"></a>main.cpp</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;lua/lauxlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;lua/lua.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;lua/lualib.h&gt;</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 创建 lua 状态</span></span><br><span class="line">    lua_State *L = <span class="built_in">luaL_newstate</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 启用基本的 lua 库</span></span><br><span class="line">    <span class="built_in">luaopen_base</span>(L);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载 lua 文件</span></span><br><span class="line">    <span class="built_in">luaL_loadfile</span>(L, <span class="string">&quot;main.lua&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 运行 lua 文件</span></span><br><span class="line">    <span class="type">int</span> ret = <span class="built_in">lua_pcall</span>(L, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;ret:&quot;</span> &lt;&lt; ret &lt;&lt; std::endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="CMakeLists-txt-1"><a href="#CMakeLists-txt-1" class="headerlink" title="CMakeLists.txt"></a>CMakeLists.txt</h4><blockquote>
<p>注意 windows 与 linux 的区别</p>
</blockquote>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 指定 cmake 最小版本, 意指 cmake 版本小于指定版本则构建过程终止</span></span><br><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.26</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#[[</span></span><br><span class="line"><span class="comment">    语言环境配置</span></span><br><span class="line"><span class="comment">]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 语言版本</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">17</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果指定的语言版本不受支持, 则构建过程终止</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD_REQUIRED <span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只弃用 ISO C++ 标准的编译器标志, 而不使用特定编译器的扩展</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_EXTENSIONS <span class="keyword">OFF</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(UNIX)</span><br><span class="line">    <span class="comment"># 将 install_rpath 的设置应用在 build_rpath 上 避免在开发期间出现动态库找不到的问题</span></span><br><span class="line">    <span class="keyword">set</span>(CMAKE_BUILD_WITH_INSTALL_RPATH <span class="keyword">True</span>)</span><br><span class="line"><span class="keyword">endif</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">#[[</span></span><br><span class="line"><span class="comment">    项目配置</span></span><br><span class="line"><span class="comment">]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 项目名称和语言</span></span><br><span class="line"><span class="keyword">project</span>( graver LANGUAGES CXX VERSION <span class="number">1.0</span>.<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发布目录</span></span><br><span class="line"><span class="keyword">set</span>(dist_dir <span class="variable">$&#123;CMAKE_BINARY_DIR&#125;</span>/dist)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 二进制文件目录</span></span><br><span class="line"><span class="keyword">set</span>(bin_dir <span class="variable">$&#123;dist_dir&#125;</span>/bin)</span><br><span class="line"><span class="keyword">file</span>(<span class="keyword">MAKE_DIRECTORY</span> <span class="variable">$&#123;bin_dir&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(UNIX)</span><br><span class="line">    <span class="comment"># 库文件目录</span></span><br><span class="line">    <span class="keyword">set</span>(lib_dir <span class="variable">$&#123;dist_dir&#125;</span>/lib)</span><br><span class="line">    <span class="keyword">file</span>(<span class="keyword">MAKE_DIRECTORY</span> <span class="variable">$&#123;lib_dir&#125;</span>)</span><br><span class="line"><span class="keyword">endif</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">#[[</span></span><br><span class="line"><span class="comment">    编译相关配置</span></span><br><span class="line"><span class="comment">]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成 compile_commands.json</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_EXPORT_COMPILE_COMMANDS <span class="keyword">ON</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制 lua 脚本</span></span><br><span class="line"><span class="keyword">configure_file</span>(<span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span>/lua/main.lua <span class="variable">$&#123;bin_dir&#125;</span>/)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 包含全局头文件</span></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span>/third)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加库链接路径</span></span><br><span class="line"><span class="comment"># 添加库链接路径</span></span><br><span class="line"><span class="keyword">if</span>(UNIX)</span><br><span class="line">    <span class="keyword">link_directories</span>(<span class="variable">$&#123;lib_dir&#125;</span>)</span><br><span class="line"><span class="keyword">elseif</span>(WIN32)</span><br><span class="line">    <span class="keyword">link_directories</span>(<span class="variable">$&#123;bin_dir&#125;</span>)</span><br><span class="line"><span class="keyword">endif</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 源文件列表</span></span><br><span class="line"><span class="keyword">aux_source_directory</span>(. SRCS_MAIN)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成可执行程序</span></span><br><span class="line"><span class="keyword">add_executable</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span> <span class="variable">$&#123;SRCS_MAIN&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 链接 lua 库</span></span><br><span class="line"><span class="keyword">target_link_libraries</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span> lua)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可执行程序路径</span></span><br><span class="line"><span class="keyword">set_target_properties</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span> PROPERTIES RUNTIME_OUTPUT_DIRECTORY <span class="variable">$&#123;bin_dir&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置可执行程序 rpath</span></span><br><span class="line"><span class="keyword">if</span>(UNIX)</span><br><span class="line">    <span class="keyword">set_target_properties</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span> PROPERTIES INSTALL_RPATH <span class="string">&quot;\$&#123;ORIGIN&#125;/../lib&quot;</span>)</span><br><span class="line"><span class="keyword">endif</span>()</span><br></pre></td></tr></table></figure>

<h4 id="CMakePresets-json-1"><a href="#CMakePresets-json-1" class="headerlink" title="CMakePresets.json"></a>CMakePresets.json</h4><blockquote>
<p><strong>注意:</strong><br><strong>将 <code>g++</code> <code>ninja</code> 等设置为自己的实际路径</strong></p>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;cmakeMinimumRequired&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;major&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;minor&quot;</span><span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;patch&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurePresets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows-base&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;displayName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;preset base&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;通用设置&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cacheVariables&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_MAKE_PROGRAM&quot;</span><span class="punctuation">:</span> <span class="string">&quot;D:/program/qt/Tools/Ninja/ninja.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_GENERATOR&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Ninja&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_CXX_COMPILER&quot;</span><span class="punctuation">:</span> <span class="string">&quot;D:/program/qt/Tools/mingw1120_64/bin/g++.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_CXX_FLAGS&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-Wall -Wextra&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows-release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;displayName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;使用 ninja 与 g++ 构建 release 版本&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;inherits&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows-base&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;binaryDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;sourceDir&#125;/build/ninja-release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cacheVariables&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_BUILD_TYPE&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Release&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;displayName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;使用 ninja 与 g++ 构建 debug 版本&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;inherits&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows-base&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;binaryDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;sourceDir&#125;/build/ninja-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cacheVariables&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_BUILD_TYPE&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_DEBUG_POSTFIX&quot;</span><span class="punctuation">:</span> <span class="string">&quot;d&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linux-base&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;displayName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;preset base&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;通用设置&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cacheVariables&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_MAKE_PROGRAM&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/home/laolang/.local/bin/ninja&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_GENERATOR&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Ninja&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_CXX_COMPILER&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/bin/g++&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_CXX_FLAGS&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-Wall -Wextra&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linux-release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;displayName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linux release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;使用 ninja 与 g++ 构建 release 版本&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;inherits&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linux-base&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;binaryDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;sourceDir&#125;/build/ninja-release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cacheVariables&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_BUILD_TYPE&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Release&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linux-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;displayName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linux debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;使用 ninja 与 g++ 构建 debug 版本&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;inherits&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linux-base&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;binaryDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;sourceDir&#125;/build/ninja-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cacheVariables&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_BUILD_TYPE&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_DEBUG_POSTFIX&quot;</span><span class="punctuation">:</span> <span class="string">&quot;d&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;buildPresets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows-release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;configurePreset&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows-release&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;configurePreset&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows-debug&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linux-release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;configurePreset&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linux-release&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linux-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;configurePreset&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linux-debug&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h4 id="copylib-sh"><a href="#copylib-sh" class="headerlink" title="copylib.sh"></a>copylib.sh</h4><blockquote>
<p>注意 windows 和 linux 的区别</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$OSTYPE</span>&quot;</span> == <span class="string">&quot;linux-gnu&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">mkdir</span> -p build/ninja-release/dist/lib</span><br><span class="line">    <span class="built_in">cp</span> lib/liblua.so*.* build/ninja-release/dist/lib/</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$MSYSTEM</span>&quot;</span> == <span class="string">&quot;MINGW64&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">mkdir</span> -p build/ninja-release/dist/bin</span><br><span class="line">	<span class="built_in">cp</span> lib/*.dll build/ninja-release/dist/bin/</span><br><span class="line">    <span class="built_in">cp</span> lib/*.dll.a build/ninja-release/dist/bin/</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<h4 id="Makefile"><a href="#Makefile" class="headerlink" title="Makefile"></a>Makefile</h4><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="section">ALL:run</span></span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="keyword">.PHONY</span>: copylib configure build run rebuild rerun clean format</span></span><br><span class="line"><span class="section">copylib:</span></span><br><span class="line">	bash copylib.sh</span><br><span class="line"></span><br><span class="line"><span class="section">configure: copylib</span></span><br><span class="line">	cmake --preset=linux-release</span><br><span class="line"><span class="section">build: configure</span></span><br><span class="line">	cmake --build --preset=linux-release</span><br><span class="line"><span class="section">run: build</span></span><br><span class="line">	cd build/ninja-release/dist/bin &amp;&amp; ./graver</span><br><span class="line"><span class="section">rebuild: clean build</span></span><br><span class="line"><span class="section">rerun: rebuild run</span></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">	rm -rf build</span><br><span class="line"><span class="section">format:</span></span><br><span class="line">	<span class="comment"># 格式化 c++ 代码</span></span><br><span class="line">	find src -type f \( -name <span class="string">&quot;*.c&quot;</span> -o -name <span class="string">&quot;*.cc&quot;</span> -o -name <span class="string">&quot;*.cpp&quot;</span> -o -name <span class="string">&quot;*.h&quot;</span> -o -name <span class="string">&quot;*.hpp&quot;</span> \) -exec clang-format -style=file:.clang-format -i &#123;&#125; \;</span><br><span class="line">	find <span class="keyword">include</span> -type f \( -name <span class="string">&quot;*.c&quot;</span> -o -name <span class="string">&quot;*.cc&quot;</span> -o -name <span class="string">&quot;*.cpp&quot;</span> -o -name <span class="string">&quot;*.h&quot;</span> -o -name <span class="string">&quot;*.hpp&quot;</span> \) -exec clang-format -style=file:.clang-format -i &#123;&#125; \;</span><br><span class="line">	<span class="comment"># 格式化 CMakeLists.txt</span></span><br><span class="line">	cmake-format -c .cmake-format.py -i CMakeLists.txt</span><br><span class="line">	cmake-format -c .cmake-format.py -i src/CMakeLists.txt</span><br><span class="line">	cmake-format -c .cmake-format.py -i src/app/CMakeLists.txt</span><br><span class="line">	cmake-format -c .cmake-format.py -i src/lua/CMakeLists.txt</span><br></pre></td></tr></table></figure>

<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>直接 <code>make</code> 即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:test$ make</span><br><span class="line">bash copylib.sh</span><br><span class="line">cmake --preset=linux-release</span><br><span class="line">Preset CMake variables:</span><br><span class="line"></span><br><span class="line">  CMAKE_BUILD_TYPE=&quot;Release&quot;</span><br><span class="line">  CMAKE_CXX_COMPILER=&quot;/usr/bin/g++&quot;</span><br><span class="line">  CMAKE_CXX_FLAGS=&quot;-Wall -Wextra&quot;</span><br><span class="line">  CMAKE_GENERATOR=&quot;Ninja&quot;</span><br><span class="line">  CMAKE_MAKE_PROGRAM=&quot;/home/laolang/.local/bin/ninja&quot;</span><br><span class="line"></span><br><span class="line">-- The CXX compiler identification is GNU 11.4.0</span><br><span class="line">-- Detecting CXX compiler ABI info</span><br><span class="line">-- Detecting CXX compiler ABI info - done</span><br><span class="line">-- Check for working CXX compiler: /usr/bin/g++ - skipped</span><br><span class="line">-- Detecting CXX compile features</span><br><span class="line">-- Detecting CXX compile features - done</span><br><span class="line">-- Configuring done (0.1s)</span><br><span class="line">-- Generating done (0.0s)</span><br><span class="line">-- Build files have been written to: /home/laolang/code/lua/lua542/test/build/ninja-release</span><br><span class="line">cmake --build --preset=linux-release</span><br><span class="line">[2/2] Linking CXX executable dist/bin/graver</span><br><span class="line">cd build/ninja-release/dist/bin &amp;&amp; ./graver</span><br><span class="line">Hello lua</span><br><span class="line">ret:0</span><br><span class="line">laolang@laolang-mint:test$ </span><br></pre></td></tr></table></figure>

<h1 id="windows-基本环境搭建"><a href="#windows-基本环境搭建" class="headerlink" title="windows 基本环境搭建"></a>windows 基本环境搭建</h1><h2 id="lua-基本环境-1"><a href="#lua-基本环境-1" class="headerlink" title="lua 基本环境"></a>lua 基本环境</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><blockquote>
<p><strong>注意:</strong><br><strong>需要下载二进制包和源码包</strong></p>
</blockquote>
<p>二进制包</p>
<p><a href="https://luabinaries.sourceforge.net/download.html">https://luabinaries.sourceforge.net/download.html</a></p>
<p><img src="/images/2024-08-29-lua_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/001.png"></p>
<p>源码包</p>
<p><a href="https://www.lua.org/ftp/lua-5.4.2.tar.gz">https://www.lua.org/ftp/lua-5.4.2.tar.gz</a></p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>将下载的两个二进制包的内容全部解压到同一个目录, 有提示覆盖, 直接是, 覆盖即可</p>
<p><img src="/images/2024-08-29-lua_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/002.png"></p>
<p>然后将 <code>lua54.exe</code> 和 <code>lua54c.exe</code> 复制一份并改名, 再将目录添加到 path</p>
<p><img src="/images/2024-08-29-lua_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/003.png"></p>
<h3 id="测试-lua-1"><a href="#测试-lua-1" class="headerlink" title="测试 lua"></a>测试 lua</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\code\lua\lua-hello&gt;type main.lua</span><br><span class="line">print(&quot;Hello Lua&quot;)</span><br><span class="line"></span><br><span class="line">E:\code\lua\lua-hello&gt;lua main.lua</span><br><span class="line">Hello Lua</span><br><span class="line"></span><br><span class="line">E:\code\lua\lua-hello&gt;</span><br></pre></td></tr></table></figure>

<h2 id="luarocks"><a href="#luarocks" class="headerlink" title="luarocks"></a>luarocks</h2><h3 id="下载-1"><a href="#下载-1" class="headerlink" title="下载"></a>下载</h3><p><a href="http://luarocks.github.io/luarocks/releases/">http://luarocks.github.io/luarocks/releases/</a></p>
<p><img src="/images/2024-08-29-lua_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/004.png"></p>
<p><a href="http://luarocks.github.io/luarocks/releases/luarocks-3.11.1-windows-64.zip">http://luarocks.github.io/luarocks/releases/luarocks-3.11.1-windows-64.zip</a></p>
<p>然后将 luarocks 压缩包的内容全部解压到 lua.exe 所在目录</p>
<p><img src="/images/2024-08-29-lua_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/005.png"></p>
<h3 id="安装后的配置"><a href="#安装后的配置" class="headerlink" title="安装后的配置"></a>安装后的配置</h3><p>此时直接运行 luarocks 提示如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Variables:</span><br><span class="line">   Variables from the &quot;variables&quot; table of the configuration file can be</span><br><span class="line">   overridden with VAR=VALUE assignments.</span><br><span class="line"></span><br><span class="line">Configuration:</span><br><span class="line">   Lua:</span><br><span class="line">      Version    : 5.4</span><br><span class="line">      LUA        : D:\program\lua\lua542\bin\lua54.exe (ok)</span><br><span class="line">      LUA_INCDIR : D:\program\lua\lua542\bin/include (lua.h not found) 看这里 看这里 看这里</span><br><span class="line">                   ****************************************</span><br><span class="line">                   Use the command</span><br><span class="line"></span><br><span class="line">                      luarocks config variables.LUA_INCDIR &lt;dir&gt;</span><br><span class="line"></span><br><span class="line">                   to fix the location</span><br><span class="line">                   ****************************************</span><br><span class="line">      LUA_LIBDIR : D:/program/lua/lua542/bin (ok)</span><br><span class="line"></span><br><span class="line">   Configuration files:</span><br><span class="line">      System  : C:\Program Files\luarocks\config-5.4.lua (not found)</span><br><span class="line">      User    : C:\Users\laolang\AppData\Roaming\luarocks\config-5.4.lua (ok)</span><br><span class="line"></span><br><span class="line">   Rocks trees in use:</span><br><span class="line">      C:\Users\laolang\AppData\Roaming\luarocks (&quot;user&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">E:\code\lua\lua-hello&gt;</span><br></pre></td></tr></table></figure>

<p>根据提示复制头文件即可</p>
<p><img src="/images/2024-08-29-lua_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/006.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\code\lua\lua-hello&gt;luarocks</span><br><span class="line"></span><br><span class="line">Variables:</span><br><span class="line">   Variables from the &quot;variables&quot; table of the configuration file can be</span><br><span class="line">   overridden with VAR=VALUE assignments.</span><br><span class="line"></span><br><span class="line">Configuration:</span><br><span class="line">   Lua:</span><br><span class="line">      Version    : 5.4</span><br><span class="line">      LUA        : D:\program\lua\lua542\bin\lua54.exe (ok) 看这三行 </span><br><span class="line">      LUA_INCDIR : D:\program\lua\lua542\bin/include (ok) 看这三行</span><br><span class="line">      LUA_LIBDIR : D:/program/lua/lua542/bin (ok) 看这三行</span><br><span class="line"></span><br><span class="line">   Configuration files:</span><br><span class="line">      System  : C:\Program Files\luarocks\config-5.4.lua (not found)</span><br><span class="line">      User    : C:\Users\laolang\AppData\Roaming\luarocks\config-5.4.lua (ok)</span><br><span class="line"></span><br><span class="line">   Rocks trees in use:</span><br><span class="line">      C:\Users\laolang\AppData\Roaming\luarocks (&quot;user&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">E:\code\lua\lua-hello&gt;</span><br></pre></td></tr></table></figure>

<h3 id="安装依赖的前置准备"><a href="#安装依赖的前置准备" class="headerlink" title="安装依赖的前置准备"></a>安装依赖的前置准备</h3><p>此时执行 <code>luarocks install --tree=rocks luasocket</code> 依然报错</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\code\lua\lua-hello&gt;luarocks install --tree=rocks luasocket</span><br><span class="line">Installing https://luarocks.org/luasocket-3.1.0-1.src.rock</span><br><span class="line"></span><br><span class="line">luasocket 3.1.0-1 depends on lua &gt;= 5.1 (5.4-1 provided by VM: success)</span><br><span class="line">x86_64-w64-mingw32-gcc -O2 -c -o src/mime.o -ID:\program\lua\lua542\bin/include src/mime.c -DLUASOCKET_DEBUG -DWINVER=0x0501 -Ic:\windows\system32\include</span><br><span class="line">x86_64-w64-mingw32-gcc -O2 -c -o src/compat.o -ID:\program\lua\lua542\bin/include src/compat.c -DLUASOCKET_DEBUG -DWINVER=0x0501 -Ic:\windows\system32\include</span><br><span class="line">x86_64-w64-mingw32-gcc  -shared -o C:\Users\laolang\AppData\Local\Temp\luarocks_build-LuaSocket-3.1.0-1-299710\mime\core.dll src/mime.o src/compat.o -Lc:\windows\system32 D:\program\lua\lua542\bin\lua54.dll -lm</span><br><span class="line">D:/program/qt/Tools/mingw1120_64/bin/../lib/gcc/x86_64-w64-mingw32/11.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: D:/program/qt/Tools/mingw1120_64/bin/../lib/gcc/x86_64-w64-mingw32/11.2.0/../../../../x86_64-w64-mingw32/lib/../lib/dllcrt2.o:crtdll.c:(.text+0x16a): undefined reference to `_execute_onexit_table&#x27;</span><br><span class="line">D:/program/qt/Tools/mingw1120_64/bin/../lib/gcc/x86_64-w64-mingw32/11.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: D:/program/qt/Tools/mingw1120_64/bin/../lib/gcc/x86_64-w64-mingw32/11.2.0/../../../../x86_64-w64-mingw32/lib/../lib/dllcrt2.o:crtdll.c:(.text+0x8): undefined reference to `_initialize_onexit_table&#x27;</span><br><span class="line">D:/program/qt/Tools/mingw1120_64/bin/../lib/gcc/x86_64-w64-mingw32/11.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: D:/program/qt/Tools/mingw1120_64/bin/../lib/gcc/x86_64-w64-mingw32/11.2.0/../../../../x86_64-w64-mingw32/lib/../lib/dllcrt2.o:crtdll.c:(.text+0x35b): undefined reference to `_register_onexit_function&#x27;</span><br><span class="line">D:/program/qt/Tools/mingw1120_64/bin/../lib/gcc/x86_64-w64-mingw32/11.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: D:/program/qt/Tools/mingw1120_64/bin/../lib/gcc/x86_64-w64-mingw32/11.2.0/../../../../x86_64-w64-mingw32/lib/../lib/libmingw32.a(lib64_libmingw32_a-pseudo-reloc.o):pseudo-reloc.c:(.text+0x28): undefined reference to `__acrt_iob_func&#x27;</span><br><span class="line">D:/program/qt/Tools/mingw1120_64/bin/../lib/gcc/x86_64-w64-mingw32/11.2.0/../../../../x86_64-w64-mingw32/bin/ld.exe: D:/program/qt/Tools/mingw1120_64/bin/../lib/gcc/x86_64-w64-mingw32/11.2.0/../../../../x86_64-w64-mingw32/lib/../lib/libmingw32.a(lib64_libmingw32_a-pseudo-reloc.o):pseudo-reloc.c:(.text+0x51): undefined reference to `__acrt_iob_func&#x27;</span><br><span class="line">collect2.exe: error: ld returned 1 exit status</span><br><span class="line"></span><br><span class="line">Error: Build error: Failed compiling module mime\core.dll</span><br><span class="line"></span><br><span class="line">E:\code\lua\lua-hello&gt;</span><br></pre></td></tr></table></figure>

<p>这是因为运行环境不正确, 我们应该使用 visual studio 的命令行</p>
<p><img src="/images/2024-08-29-lua_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/007.png"></p>
<p>此时依然会报错</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">**********************************************************************</span><br><span class="line">** Visual Studio 2022 Developer Command Prompt v17.9.1</span><br><span class="line">** Copyright (c) 2022 Microsoft Corporation</span><br><span class="line">**********************************************************************</span><br><span class="line">[vcvarsall.bat] Environment initialized for: &#x27;x64&#x27;</span><br><span class="line"></span><br><span class="line">E:\code\lua\lua-hello&gt;luarocks install --tree=rocks luasocket</span><br><span class="line">Installing https://luarocks.org/luasocket-3.1.0-1.src.rock</span><br><span class="line"></span><br><span class="line">luasocket 3.1.0-1 depends on lua &gt;= 5.1 (5.4-1 provided by VM: success)</span><br><span class="line"></span><br><span class="line">Error: Build error: Failed finding the Lua library. You can use `luarocks config variables.LUA_LIBDIR &lt;path&gt;` to set the correct location.</span><br><span class="line"></span><br><span class="line">E:\code\lua\lua-hello&gt;</span><br></pre></td></tr></table></figure>

<p>我们需要下载 visual studio 对应的静态库, visual studio 版本与 vc 版本的对应关系</p>
<table>
<thead>
<tr>
<th>VC 版本</th>
<th>_MSC_VER 宏的值</th>
<th>VS版本</th>
<th>MSVC toolset version</th>
</tr>
</thead>
<tbody><tr>
<td>VC6.0</td>
<td>1200</td>
<td>vs 6.0</td>
<td></td>
</tr>
<tr>
<td>VC7.0</td>
<td>1300</td>
<td>vs 2002</td>
<td></td>
</tr>
<tr>
<td>VC7.1</td>
<td>1310</td>
<td>vs 2003</td>
<td></td>
</tr>
<tr>
<td>VC8.0</td>
<td>1400</td>
<td>vs 2005</td>
<td>80</td>
</tr>
<tr>
<td>VC9.0</td>
<td>1500</td>
<td>vs 2008</td>
<td>90</td>
</tr>
<tr>
<td>VC10.0</td>
<td>1600</td>
<td>vs 2010</td>
<td>100</td>
</tr>
<tr>
<td>VC11.0</td>
<td>1700</td>
<td>vs 2012</td>
<td>110</td>
</tr>
<tr>
<td>VC12.0</td>
<td>1800</td>
<td>vs 2013</td>
<td>120</td>
</tr>
<tr>
<td>VC14.0</td>
<td>1900</td>
<td>vs 2015</td>
<td>140</td>
</tr>
<tr>
<td>VC15.0</td>
<td><code>[1910,1916]</code></td>
<td>vs 2017</td>
<td>141</td>
</tr>
<tr>
<td>VC16.0</td>
<td><code>[1920,1929]</code></td>
<td>vs 2019</td>
<td>142</td>
</tr>
<tr>
<td>VC17.0</td>
<td><code>[1930,)</code></td>
<td>vs 2022</td>
<td>143</td>
</tr>
</tbody></table>
<p>我的是 vs2022 , 所以下载的是 vc17.lib , 下载地址: <a href="https://sourceforge.net/projects/luabinaries/files/5.4.2/Windows%20Libraries/Static/">https://sourceforge.net/projects/luabinaries/files/5.4.2/Windows%20Libraries/Static/</a></p>
<p><img src="/images/2024-08-29-lua_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/008.png"></p>
<p>然后我们将静态库复制到 lua.exe 所在目录</p>
<p><img src="/images/2024-08-29-lua_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/009.png"></p>
<p>再次执行如下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">luarocks install --tree=rocks luasocket</span><br><span class="line">luarocks install --tree=rocks lualogging</span><br></pre></td></tr></table></figure>

<p>过程如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\code\lua\lua-hello&gt;luarocks install --tree=rocks luasocket</span><br><span class="line">Installing https://luarocks.org/luasocket-3.1.0-1.src.rock</span><br><span class="line"></span><br><span class="line">luasocket 3.1.0-1 depends on lua &gt;= 5.1 (5.4-1 provided by VM: success)</span><br><span class="line">cl /nologo /MD /O2 -c -Fosrc/luasocket.obj -ID:\program\lua\lua542\bin/include src/luasocket.c -DLUASOCKET_DEBUG -DNDEBUG -Ic:\windows\system32\include</span><br><span class="line">luasocket.c</span><br><span class="line">cl /nologo /MD /O2 -c -Fosrc/timeout.obj -ID:\program\lua\lua542\bin/include src/timeout.c -DLUASOCKET_DEBUG -DNDEBUG -Ic:\windows\system32\include</span><br><span class="line">timeout.c</span><br><span class="line">cl /nologo /MD /O2 -c -Fosrc/buffer.obj -ID:\program\lua\lua542\bin/include src/buffer.c -DLUASOCKET_DEBUG -DNDEBUG -Ic:\windows\system32\include</span><br><span class="line">buffer.c</span><br><span class="line">cl /nologo /MD /O2 -c -Fosrc/io.obj -ID:\program\lua\lua542\bin/include src/io.c -DLUASOCKET_DEBUG -DNDEBUG -Ic:\windows\system32\include</span><br><span class="line">io.c</span><br><span class="line">cl /nologo /MD /O2 -c -Fosrc/auxiliar.obj -ID:\program\lua\lua542\bin/include src/auxiliar.c -DLUASOCKET_DEBUG -DNDEBUG -Ic:\windows\system32\include</span><br><span class="line">auxiliar.c</span><br><span class="line">cl /nologo /MD /O2 -c -Fosrc/options.obj -ID:\program\lua\lua542\bin/include src/options.c -DLUASOCKET_DEBUG -DNDEBUG -Ic:\windows\system32\include</span><br><span class="line">options.c</span><br><span class="line">cl /nologo /MD /O2 -c -Fosrc/inet.obj -ID:\program\lua\lua542\bin/include src/inet.c -DLUASOCKET_DEBUG -DNDEBUG -Ic:\windows\system32\include</span><br><span class="line">inet.c</span><br><span class="line">cl /nologo /MD /O2 -c -Fosrc/except.obj -ID:\program\lua\lua542\bin/include src/except.c -DLUASOCKET_DEBUG -DNDEBUG -Ic:\windows\system32\include</span><br><span class="line">except.c</span><br><span class="line">cl /nologo /MD /O2 -c -Fosrc/select.obj -ID:\program\lua\lua542\bin/include src/select.c -DLUASOCKET_DEBUG -DNDEBUG -Ic:\windows\system32\include</span><br><span class="line">select.c</span><br><span class="line">cl /nologo /MD /O2 -c -Fosrc/tcp.obj -ID:\program\lua\lua542\bin/include src/tcp.c -DLUASOCKET_DEBUG -DNDEBUG -Ic:\windows\system32\include</span><br><span class="line">tcp.c</span><br><span class="line">cl /nologo /MD /O2 -c -Fosrc/udp.obj -ID:\program\lua\lua542\bin/include src/udp.c -DLUASOCKET_DEBUG -DNDEBUG -Ic:\windows\system32\include</span><br><span class="line">udp.c</span><br><span class="line">cl /nologo /MD /O2 -c -Fosrc/compat.obj -ID:\program\lua\lua542\bin/include src/compat.c -DLUASOCKET_DEBUG -DNDEBUG -Ic:\windows\system32\include</span><br><span class="line">compat.c</span><br><span class="line">cl /nologo /MD /O2 -c -Fosrc/wsocket.obj -ID:\program\lua\lua542\bin/include src/wsocket.c -DLUASOCKET_DEBUG -DNDEBUG -Ic:\windows\system32\include</span><br><span class="line">wsocket.c</span><br><span class="line">link -dll -def:core.def -out:C:\Users\laolang\AppData\Local\Temp\luarocks_build-LuaSocket-3.1.0-1-3920812\socket\core.dll D:\program\lua\lua542\bin\lua54.lib src/luasocket.obj src/timeout.obj src/buffer.obj src/io.obj src/auxiliar.obj src/options.obj src/inet.obj src/except.obj src/select.obj src/tcp.obj src/udp.obj src/compat.obj src/wsocket.obj ws2_32.lib</span><br><span class="line">Microsoft (R) Incremental Linker Version 14.39.33520.0</span><br><span class="line">Copyright (C) Microsoft Corporation.  All rights reserved.</span><br><span class="line"></span><br><span class="line">  正在创建库 C:\Users\laolang\AppData\Local\Temp\luarocks_build-LuaSocket-3.1.0-1-3920812\socket\core.lib 和对象 C:\Users\laolang\AppData\Local\Temp\luarocks_build-LuaSocket-3.1.0-1-3920812\socket\core.exp</span><br><span class="line">LINK : warning LNK4098: 默认库“LIBCMT”与其他库的使用冲突；请使用 /NODEFAULTLIB:library</span><br><span class="line">cl /nologo /MD /O2 -c -Fosrc/mime.obj -ID:\program\lua\lua542\bin/include src/mime.c -DLUASOCKET_DEBUG -DNDEBUG -Ic:\windows\system32\include</span><br><span class="line">mime.c</span><br><span class="line">cl /nologo /MD /O2 -c -Fosrc/compat.obj -ID:\program\lua\lua542\bin/include src/compat.c -DLUASOCKET_DEBUG -DNDEBUG -Ic:\windows\system32\include</span><br><span class="line">compat.c</span><br><span class="line">link -dll -def:core.def -out:C:\Users\laolang\AppData\Local\Temp\luarocks_build-LuaSocket-3.1.0-1-3920812\mime\core.dll D:\program\lua\lua542\bin\lua54.lib src/mime.obj src/compat.obj -libpath:c:\windows\system32</span><br><span class="line">Microsoft (R) Incremental Linker Version 14.39.33520.0</span><br><span class="line">Copyright (C) Microsoft Corporation.  All rights reserved.</span><br><span class="line"></span><br><span class="line">  正在创建库 C:\Users\laolang\AppData\Local\Temp\luarocks_build-LuaSocket-3.1.0-1-3920812\mime\core.lib 和对象 C:\Users\laolang\AppData\Local\Temp\luarocks_build-LuaSocket-3.1.0-1-3920812\mime\core.exp</span><br><span class="line">LINK : warning LNK4098: 默认库“LIBCMT”与其他库的使用冲突；请使用 /NODEFAULTLIB:library</span><br><span class="line">No existing manifest. Attempting to rebuild...</span><br><span class="line">luasocket 3.1.0-1 is now installed in E:\code\lua\lua-hello\rocks (license: MIT)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">E:\code\lua\lua-hello&gt;luarocks install --tree=rocks lualogging</span><br><span class="line">Installing https://luarocks.org/lualogging-1.8.2-1.src.rock</span><br><span class="line"></span><br><span class="line">lualogging 1.8.2-1 depends on luasocket (3.1.0-1 installed: success)</span><br><span class="line">lualogging 1.8.2-1 is now installed in E:\code\lua\lua-hello\rocks (license: MIT/X11)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">E:\code\lua\lua-hello&gt;</span><br></pre></td></tr></table></figure>

<h3 id="测试脚本"><a href="#测试脚本" class="headerlink" title="测试脚本"></a>测试脚本</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="built_in">package</span>.<span class="built_in">path</span> = <span class="built_in">package</span>.<span class="built_in">path</span> .. <span class="string">&quot;;./rocks/share/lua/5.4/?.lua&quot;</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;logging&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- if #arg &gt; 0 then</span></span><br><span class="line"><span class="comment">--     if arg[1] ~= nil and arg[1] == &quot;on&quot; then</span></span><br><span class="line"><span class="comment">--         local dbg = require(&quot;emmy_core&quot;)</span></span><br><span class="line"><span class="comment">--         dbg.tcpListen(&quot;localhost&quot;, 9966)</span></span><br><span class="line"><span class="comment">--         dbg.waitIDE()</span></span><br><span class="line"><span class="comment">--     end</span></span><br><span class="line"><span class="comment">-- end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> Logging = <span class="built_in">require</span> <span class="string">&quot;logging&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> appender = <span class="function"><span class="keyword">function</span><span class="params">(self, level, message)</span></span></span><br><span class="line">    <span class="built_in">print</span>(level, message)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> logger = Logging.new(appender)</span><br><span class="line">logger:setLevel(logger.INFO)</span><br><span class="line">logger:info(<span class="string">&quot;Hello Lua&quot;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\code\lua\lua-hello&gt;lua main.lua</span><br><span class="line">INFO    Hello Lua</span><br><span class="line"></span><br><span class="line">E:\code\lua\lua-hello&gt;</span><br></pre></td></tr></table></figure>

<h2 id="C-与-lua-混合编程-1"><a href="#C-与-lua-混合编程-1" class="headerlink" title="C++ 与 lua 混合编程"></a>C++ 与 lua 混合编程</h2><blockquote>
<p><strong>注意:</strong><br><strong>需要在 <code>git bash</code> 中运行</strong></p>
</blockquote>
<p>将 linux 的工程直接复制到 windows </p>
<blockquote>
<p><strong>注意:</strong><br><strong>某些 exe 的路径修改为自己系统的实际值</strong></p>
</blockquote>
<p><img src="/images/2024-08-29-lua_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/010.png"></p>
<h3 id="编译动态库"><a href="#编译动态库" class="headerlink" title="编译动态库"></a>编译动态库</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@DESKTOP-O12ME4M MINGW64 /e/code/lua/lua542/lua_lib</span><br><span class="line">$ pwd</span><br><span class="line">/e/code/lua/lua542/lua_lib</span><br><span class="line"></span><br><span class="line">laolang@DESKTOP-O12ME4M MINGW64 /e/code/lua/lua542/lua_lib</span><br><span class="line">$ ll</span><br><span class="line">total 16</span><br><span class="line">-rw-r--r-- 1 laolang 197121 1070  6月  1 18:37 CMakeLists.txt</span><br><span class="line">-rw-r--r-- 1 laolang 197121 2986  6月  1 18:37 CMakePresets.json</span><br><span class="line">drwxr-xr-x 1 laolang 197121    0  6月  1 18:37 include/</span><br><span class="line">drwxr-xr-x 1 laolang 197121    0  6月  1 18:37 src/</span><br><span class="line"></span><br><span class="line">laolang@DESKTOP-O12ME4M MINGW64 /e/code/lua/lua542/lua_lib</span><br><span class="line">$ cmake --preset=windows-release</span><br><span class="line">Preset CMake variables:</span><br><span class="line"></span><br><span class="line">  CMAKE_BUILD_TYPE=&quot;Release&quot;</span><br><span class="line">  CMAKE_C_COMPILER=&quot;D:/program/qt/Tools/mingw1120_64/bin/gcc.exe&quot;</span><br><span class="line">  CMAKE_C_FLAGS=&quot;-Wall -Wextra&quot;</span><br><span class="line">  CMAKE_GENERATOR=&quot;Ninja&quot;</span><br><span class="line">  CMAKE_MAKE_PROGRAM=&quot;D:/program/qt/Tools/Ninja/ninja.exe&quot;</span><br><span class="line"></span><br><span class="line">-- The C compiler identification is GNU 11.2.0</span><br><span class="line">-- Detecting C compiler ABI info</span><br><span class="line">-- Detecting C compiler ABI info - done</span><br><span class="line">-- Check for working C compiler: D:/program/qt/Tools/mingw1120_64/bin/gcc.exe - skipped</span><br><span class="line">-- Detecting C compile features</span><br><span class="line">-- Detecting C compile features - done</span><br><span class="line">-- Configuring done (0.6s)</span><br><span class="line">-- Generating done (0.0s)</span><br><span class="line">-- Build files have been written to: E:/code/lua/lua542/lua_lib/build/ninja-release</span><br><span class="line"></span><br><span class="line">laolang@DESKTOP-O12ME4M MINGW64 /e/code/lua/lua542/lua_lib</span><br><span class="line">$ cmake --build --preset=windows-release</span><br><span class="line">[1/66] Building C object CMakeFiles/lua.dir/src/lcorolib.c.obj</span><br><span class="line">...</span><br><span class="line">[64/66] Linking C shared library liblua.dll</span><br><span class="line">[65/66] Building C object CMakeFiles/lua_static.dir/src/lvm.c.obj</span><br><span class="line">[66/66] Linking C static library liblua.a</span><br><span class="line"></span><br><span class="line">laolang@DESKTOP-O12ME4M MINGW64 /e/code/lua/lua542/lua_lib</span><br><span class="line">$ ls -l build/ninja-release/</span><br><span class="line">total 1112</span><br><span class="line">-rw-r--r-- 1 laolang 197121  52679  6月  1 18:39 build.ninja</span><br><span class="line">-rw-r--r-- 1 laolang 197121   1607  6月  1 18:39 cmake_install.cmake</span><br><span class="line">-rw-r--r-- 1 laolang 197121  14538  6月  1 18:39 CMakeCache.txt</span><br><span class="line">drwxr-xr-x 1 laolang 197121      0  6月  1 18:39 CMakeFiles/</span><br><span class="line">-rw-r--r-- 1 laolang 197121 433062  6月  1 18:39 liblua.a</span><br><span class="line">-rwxr-xr-x 1 laolang 197121 413755  6月  1 18:39 liblua.dll*</span><br><span class="line">-rw-r--r-- 1 laolang 197121 205782  6月  1 18:39 liblua.dll.a</span><br><span class="line"></span><br><span class="line">laolang@DESKTOP-O12ME4M MINGW64 /e/code/lua/lua542/lua_lib</span><br><span class="line">$</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="测试混编"><a href="#测试混编" class="headerlink" title="测试混编"></a>测试混编</h3><p>需要修改 Makefile</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALL:run</span><br><span class="line"></span><br><span class="line">.PHONY: copylib configure build run rebuild rerun clean format</span><br><span class="line">copylib:</span><br><span class="line">	bash copylib.sh</span><br><span class="line"></span><br><span class="line">configure: copylib</span><br><span class="line">	cmake --preset=windows-release # 注意这里</span><br><span class="line">build: configure</span><br><span class="line">	cmake --build --preset=windows-release # 以及这里</span><br><span class="line">run: build</span><br><span class="line">	cd build/ninja-release/dist/bin &amp;&amp; ./graver</span><br><span class="line">rebuild: clean build</span><br><span class="line">rerun: rebuild run</span><br><span class="line">clean:</span><br><span class="line">	rm -rf build</span><br><span class="line">format:</span><br><span class="line">	# 格式化 c++ 代码</span><br><span class="line">	find src -type f \( -name &quot;*.c&quot; -o -name &quot;*.cc&quot; -o -name &quot;*.cpp&quot; -o -name &quot;*.h&quot; -o -name &quot;*.hpp&quot; \) -exec clang-format -style=file:.clang-format -i &#123;&#125; \;</span><br><span class="line">	find include -type f \( -name &quot;*.c&quot; -o -name &quot;*.cc&quot; -o -name &quot;*.cpp&quot; -o -name &quot;*.h&quot; -o -name &quot;*.hpp&quot; \) -exec clang-format -style=file:.clang-format -i &#123;&#125; \;</span><br><span class="line">	# 格式化 CMakeLists.txt</span><br><span class="line">	cmake-format -c .cmake-format.py -i CMakeLists.txt</span><br><span class="line">	cmake-format -c .cmake-format.py -i src/CMakeLists.txt</span><br><span class="line">	cmake-format -c .cmake-format.py -i src/app/CMakeLists.txt</span><br><span class="line">	cmake-format -c .cmake-format.py -i src/lua/CMakeLists.txt</span><br></pre></td></tr></table></figure>

<p>需要把上一步编译的 dll 复制到 lib 目录</p>
<p>测试过程</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@DESKTOP-O12ME4M MINGW64 /e/code/lua/lua542/test</span><br><span class="line">$ pwd</span><br><span class="line">/e/code/lua/lua542/test</span><br><span class="line"></span><br><span class="line">laolang@DESKTOP-O12ME4M MINGW64 /e/code/lua/lua542/test</span><br><span class="line">$ ll</span><br><span class="line">total 18</span><br><span class="line">-rw-r--r-- 1 laolang 197121 1750  6月  1 18:49 CMakeLists.txt</span><br><span class="line">-rw-r--r-- 1 laolang 197121 2994  6月  1 18:36 CMakePresets.json</span><br><span class="line">-rwxr-xr-x 1 laolang 197121  320  6月  1 18:46 copylib.sh*</span><br><span class="line">drwxr-xr-x 1 laolang 197121    0  6月  1 18:45 lib/</span><br><span class="line">drwxr-xr-x 1 laolang 197121    0  6月  1 18:37 lua/</span><br><span class="line">-rw-r--r-- 1 laolang 197121  419  6月  1 18:36 main.cpp</span><br><span class="line">-rw-r--r-- 1 laolang 197121  925  6月  1 18:42 Makefile</span><br><span class="line">drwxr-xr-x 1 laolang 197121    0  6月  1 18:37 third/</span><br><span class="line"></span><br><span class="line">laolang@DESKTOP-O12ME4M MINGW64 /e/code/lua/lua542/test</span><br><span class="line">$ make</span><br><span class="line">bash copylib.sh</span><br><span class="line">cmake --preset=windows-release</span><br><span class="line">Preset CMake variables:</span><br><span class="line"></span><br><span class="line">  CMAKE_BUILD_TYPE=&quot;Release&quot;</span><br><span class="line">  CMAKE_CXX_COMPILER=&quot;D:/program/qt/Tools/mingw1120_64/bin/g++.exe&quot;</span><br><span class="line">  CMAKE_CXX_FLAGS=&quot;-Wall -Wextra&quot;</span><br><span class="line">  CMAKE_GENERATOR=&quot;Ninja&quot;</span><br><span class="line">  CMAKE_MAKE_PROGRAM=&quot;D:/program/qt/Tools/Ninja/ninja.exe&quot;</span><br><span class="line"></span><br><span class="line">-- The CXX compiler identification is GNU 11.2.0</span><br><span class="line">-- Detecting CXX compiler ABI info</span><br><span class="line">-- Detecting CXX compiler ABI info - done</span><br><span class="line">-- Check for working CXX compiler: D:/program/qt/Tools/mingw1120_64/bin/g++.exe - skipped</span><br><span class="line">-- Detecting CXX compile features</span><br><span class="line">-- Detecting CXX compile features - done</span><br><span class="line">-- Configuring done (0.6s)</span><br><span class="line">-- Generating done (0.0s)</span><br><span class="line">-- Build files have been written to: E:/code/lua/lua542/test/build/ninja-release</span><br><span class="line">cmake --build --preset=windows-release</span><br><span class="line">[1/2] Building CXX object CMakeFiles/graver.dir/main.cpp.obj</span><br><span class="line">[2/2] Linking CXX executable dist\bin\graver.exe</span><br><span class="line">cd build/ninja-release/dist/bin &amp;&amp; ./graver</span><br><span class="line">Hello lua</span><br><span class="line">ret:0</span><br><span class="line"></span><br><span class="line">laolang@DESKTOP-O12ME4M MINGW64 /e/code/lua/lua542/test</span><br><span class="line">$</span><br></pre></td></tr></table></figure>

<h1 id="待完成项"><a href="#待完成项" class="headerlink" title="待完成项"></a>待完成项</h1><ol>
<li>Makefile 优化</li>
<li>C++ 与 lua 混编时, 调用 luarocks 安装的依赖的问题</li>
<li>lua 源码加入到 C++ 工程, 一次性完成编译 lua 库与 C++ lua 混编</li>
</ol>
]]></content>
      <categories>
        <category>graver</category>
        <category>lua</category>
      </categories>
      <tags>
        <tag>graver</tag>
        <tag>lua</tag>
      </tags>
  </entry>
  <entry>
    <title>luarocks 的基本使用</title>
    <url>/2024/08/29/luarocks-%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>luarocks 的基本使用</p>
<span id="more"></span>

<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>LuaRocks 官网: <a href="https://luarocks.org/">https://luarocks.org/</a></p>
<p>Lua 包管理 – Luarocks 使用指南: <a href="https://www.codenong.com/cs110780708/">https://www.codenong.com/cs110780708/</a></p>
<p>Windows平台lua包管理工具luarocks的安装: <a href="https://www.bilibili.com/read/cv26687230/">https://www.bilibili.com/read/cv26687230/</a></p>
<h1 id="Linux-环境搭建"><a href="#Linux-环境搭建" class="headerlink" title="Linux 环境搭建"></a>Linux 环境搭建</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://luarocks.org/releases/luarocks-3.11.0.tar.gz</span><br><span class="line">tar zxpf luarocks-3.11.0.tar.gz</span><br><span class="line">cd luarocks-3.11.0</span><br><span class="line">./configure &amp;&amp; make &amp;&amp; sudo make install</span><br></pre></td></tr></table></figure>

<h2 id="lua-头文件配置"><a href="#lua-头文件配置" class="headerlink" title="lua 头文件配置"></a>lua 头文件配置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:lua542$ pwd</span><br><span class="line">/home/laolang/program/lua/lua542</span><br><span class="line">laolang@laolang-mint:lua542$ tree</span><br><span class="line">.</span><br><span class="line">├── include</span><br><span class="line">│   └── lua</span><br><span class="line">│       └── 5.4</span><br><span class="line">│           ├── lua.h</span><br><span class="line">            ... 从源码包复制即可</span><br><span class="line">├── lua54</span><br><span class="line">└── luac54</span><br><span class="line"></span><br><span class="line">3 directories, 29 files</span><br><span class="line">laolang@laolang-mint:lua542$ </span><br></pre></td></tr></table></figure>

<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><blockquote>
<p>正常来说, 需要 <code>lua</code> 库, 不过我并没有下载, <code>luarocks</code> 命令检测动态库也是没有找到的状态, 不过确实安装成功了, 也可以正常使用</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">luarocks install --tree=rocks luasocket</span><br><span class="line">luarocks install --tree=rocks lualogging</span><br></pre></td></tr></table></figure>

<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="built_in">package</span>.<span class="built_in">path</span> = <span class="built_in">package</span>.<span class="built_in">path</span> .. <span class="string">&quot;;./rocks/share/lua/5.4/?.lua&quot;</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;logging&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> #<span class="built_in">arg</span> &gt; <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">arg</span>[<span class="number">1</span>] ~= <span class="literal">nil</span> <span class="keyword">and</span> <span class="built_in">arg</span>[<span class="number">1</span>] == <span class="string">&quot;on&quot;</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">local</span> dbg = <span class="built_in">require</span>(<span class="string">&quot;emmy_core&quot;</span>)</span><br><span class="line">        dbg.tcpListen(<span class="string">&quot;localhost&quot;</span>, <span class="number">9966</span>)</span><br><span class="line">        dbg.waitIDE()</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> Logging = <span class="built_in">require</span> <span class="string">&quot;logging&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> appender = <span class="function"><span class="keyword">function</span><span class="params">(self, level, message)</span></span></span><br><span class="line">    <span class="built_in">print</span>(level, message)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> logger = Logging.new(appender)</span><br><span class="line">logger:setLevel(logger.INFO)</span><br><span class="line">logger:info(<span class="string">&quot;Hello Lua&quot;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:lua-hello$ lua54 main.lua </span><br><span class="line">INFO	Hello Lua</span><br><span class="line">laolang@laolang-mint:lua-hello$ </span><br></pre></td></tr></table></figure>

<h1 id="Windows-环境搭建"><a href="#Windows-环境搭建" class="headerlink" title="Windows 环境搭建"></a>Windows 环境搭建</h1><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><p>把 <code>lua</code> 与 <code>luarocks</code> 的可执行文件, 动态库等全部放在同一个目录, 然后根据 <code>luarocks</code> 的检测结果配置头文件与库文件目录</p>
<p>lua windows 库文件下载地址</p>
<p><a href="https://sourceforge.net/projects/luabinaries/files/5.4.2/Windows%20Libraries/Static/">https://sourceforge.net/projects/luabinaries/files/5.4.2/Windows%20Libraries/Static/</a></p>
<h2 id="检测"><a href="#检测" class="headerlink" title="检测"></a>检测</h2><blockquote>
<p>注意: 需要使用 visual studio 的命令行</p>
</blockquote>
<p><img src="/images/2024-08-29-luarocks_%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/001.png" alt="image"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\code\lua\lua-hello&gt;luarocks</span><br><span class="line"></span><br><span class="line">Configuration:</span><br><span class="line">   Lua:</span><br><span class="line">      Version    : 5.4</span><br><span class="line">      LUA        : D:\program\lua\lua542\bin\lua54.exe (ok) 看这三行</span><br><span class="line">      LUA_INCDIR : D:\program\lua\lua542\bin/include (ok) 看这三行</span><br><span class="line">      LUA_LIBDIR : D:/program/lua/lua542/bin (ok) 看这三行</span><br><span class="line"></span><br><span class="line">   Configuration files:</span><br><span class="line">      System  : C:\Program Files\luarocks\config-5.4.lua (not found)</span><br><span class="line">      User    : C:\Users\laolang\AppData\Roaming\luarocks\config-5.4.lua (ok)</span><br><span class="line"></span><br><span class="line">   Rocks trees in use:</span><br><span class="line">      C:\Users\laolang\AppData\Roaming\luarocks (&quot;user&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">E:\code\lua\lua-hello&gt;</span><br></pre></td></tr></table></figure>

<h2 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h2><p>与 Linux 并无不同</p>
]]></content>
      <categories>
        <category>graver</category>
        <category>lua</category>
      </categories>
      <tags>
        <tag>graver</tag>
        <tag>lua</tag>
      </tags>
  </entry>
  <entry>
    <title>spring boot kotlin java 混编</title>
    <url>/2024/08/29/spring-boot-kotlin-java-%E6%B7%B7%E7%BC%96/</url>
    <content><![CDATA[<p>spring boot kotlin java 混编</p>
<span id="more"></span>

<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://blog.csdn.net/kill_the_king/article/details/123246308">SpringBoot（maven）项目接入Kotlin与Java混合开发</a></p>
<p><a href="https://blog.csdn.net/ly199108171231/article/details/105121249">maven如何编译java和kotlin编码的混合项目</a></p>
<h1 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.laolang.thresh<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thresh-boot<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">springboot.version</span>&gt;</span>2.2.13.RELEASE<span class="tag">&lt;/<span class="name">springboot.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tlog.version</span>&gt;</span>1.5.0<span class="tag">&lt;/<span class="name">tlog.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 设置kotlin版本 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">kotlin.version</span>&gt;</span>1.3.72<span class="tag">&lt;/<span class="name">kotlin.version</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 启用kotlin增量编译 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">kotlin.compiler.incremental</span>&gt;</span>true<span class="tag">&lt;/<span class="name">kotlin.compiler.incremental</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven-compiler-plugin.version</span>&gt;</span>3.11.0<span class="tag">&lt;/<span class="name">maven-compiler-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;springboot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.yomahub<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tlog-web-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;tlog.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- kotlin --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jetbrains.kotlin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>kotlin-reflect<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;kotlin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jetbrains.kotlin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>kotlin-stdlib-jdk8<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;kotlin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.module<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-module-kotlin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>kotlin-reflect<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jetbrains.kotlin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources/<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jetbrains.kotlin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>kotlin-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;kotlin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">jvmTarget</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">jvmTarget</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">args</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">arg</span>&gt;</span>-Xjsr305=strict<span class="tag">&lt;/<span class="name">arg</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">args</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">compilerPlugins</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- Spring使用动态代理需要所有Bean可继承，该插件为所有Bean添加open关键字 --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span>spring<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- 该插件为jpa实体类解决没有无参构造器的问题 --&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- &lt;plugin&gt;jpa&lt;/plugin&gt; --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span>no-arg<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">compilerPlugins</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">pluginOptions</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- 有些持久层框架需要实体类需要无参构造器，使用该注解标注解决kotlin data class没有无参构造器的问题 --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span>&gt;</span>no-arg:annotation=com.example.annotations.NoArg<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">pluginOptions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jetbrains.kotlin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>kotlin-maven-allopen<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;kotlin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jetbrains.kotlin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>kotlin-maven-noarg<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;kotlin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-compiler-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;maven.compiler.source&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;maven.compiler.target&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>$&#123;project.build.sourceEncoding&#125;<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- 替换会被 maven 特别处理的 default-compile --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>default-compile<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>none<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- 替换会被 maven 特别处理的 default-testCompile --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>default-testCompile<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>none<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>java-compile<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>java-test-compile<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>test-compile<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>testCompile<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">skip</span>&gt;</span>true<span class="tag">&lt;/<span class="name">skip</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;springboot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">goal</span>&gt;</span> <span class="comment">&lt;!-- 将引入的 jar 打入其中 --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.thresh;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreshApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(ThreshApplication.class, args);</span><br><span class="line">        log.info(<span class="string">&quot;thresh is running...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="JavaDemoController"><a href="#JavaDemoController" class="headerlink" title="JavaDemoController"></a>JavaDemoController</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.thresh.controller.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.thresh.domain.R;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;java&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JavaDemoController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;hello&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">hello</span><span class="params">()</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;java hello&quot;</span>);</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(<span class="number">1</span>);</span><br><span class="line">        map.put(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> R.ok(map);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="KotlinDemoController"><a href="#KotlinDemoController" class="headerlink" title="KotlinDemoController"></a>KotlinDemoController</h1><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.thresh.controller.kotlin</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.thresh.domain.R</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.GetMapping</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.RequestMapping</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.RestController</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(<span class="string">&quot;kotlin&quot;</span>)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">KotlinDemoController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> log = LoggerFactory.getLogger(KotlinDemoController::<span class="keyword">class</span>.java)</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(<span class="string">&quot;hello&quot;</span>)</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">hello</span><span class="params">()</span></span>: R&lt;Map&lt;String, Any&gt;&gt; &#123;</span><br><span class="line">        log.info(<span class="string">&quot;kotlin hello&quot;</span>)</span><br><span class="line">        <span class="keyword">val</span> map = hashMapOf&lt;String, Any&gt;(<span class="string">&quot;msg&quot;</span> to <span class="string">&quot;Hello World&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> R.ok(map)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p><code>kotlin</code> 版本为 <code>1.3.72</code> , 是经过验证的,其他版本可能会有问题, 比如:</p>
<p><code>java.lang.NoSuchMethodError: kotlin.collections.MapsKt.createMapBuilder()Ljava/util/Map;</code></p>
]]></content>
      <categories>
        <category>java</category>
        <category>spring boot</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>spring boot</tag>
      </tags>
  </entry>
  <entry>
    <title>spring Hello World</title>
    <url>/2024/08/29/spring-Hello-World/</url>
    <content><![CDATA[<p>spring Hello World</p>
<span id="more"></span>

<h1 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.laolang.s4x<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>chapter-02<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven-compiler-plugin.version</span>&gt;</span>3.11.0<span class="tag">&lt;/<span class="name">maven-compiler-plugin.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>5.3.31<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">logback.version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">logback.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">lombok.version</span>&gt;</span>1.18.30<span class="tag">&lt;/<span class="name">lombok.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">testng.version</span>&gt;</span>6.14.3<span class="tag">&lt;/<span class="name">testng.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- logback --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;logback.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- lombok --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;lombok.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- testng --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.testng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>testng<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;testng.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources/<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-compiler-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;maven.compiler.source&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;maven.compiler.target&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>$&#123;project.build.sourceEncoding&#125;<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="Bean"><a href="#Bean" class="headerlink" title="Bean"></a>Bean</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.s4x;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sayHello</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="test"><a href="#test" class="headerlink" title="test"></a>test</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.s4x;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testHello</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-context.xml&quot;</span>);</span><br><span class="line">        <span class="type">HelloWorld</span> <span class="variable">helloWorld</span> <span class="operator">=</span> (HelloWorld) context.getBean(<span class="string">&quot;helloWorld&quot;</span>);</span><br><span class="line">        log.info(<span class="string">&quot;my name is &#123;&#125; , &#123;&#125;&quot;</span>, helloWorld.getName(), helloWorld.sayHello());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-08-29 22:46:15.270 [main] DEBUG o.s.c.s.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7ec7ffd3</span><br><span class="line">2024-08-29 22:46:15.340 [main] DEBUG o.s.b.f.x.XmlBeanDefinitionReader - Loaded 1 bean definitions from class path resource [spring-context.xml]</span><br><span class="line">2024-08-29 22:46:15.356 [main] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean &#x27;helloWorld&#x27;</span><br><span class="line">2024-08-29 22:46:15.392 [main] INFO  c.l.s4x.HelloTest - my name is laolang , Hello World</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>java</category>
        <category>ssm</category>
        <category>spring</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>spring</tag>
        <tag>ssm</tag>
      </tags>
  </entry>
  <entry>
    <title>spring mvc 搭建</title>
    <url>/2024/08/29/spring-mvc-%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\code\sts3\spring_study\jx-ssm&gt;tree /f</span><br><span class="line">卷 新加卷 的文件夹 PATH 列表</span><br><span class="line">卷序列号为 FA05-F6BD</span><br><span class="line">E:.</span><br><span class="line">│  pom.xml</span><br><span class="line">│</span><br><span class="line">│</span><br><span class="line">└─src</span><br><span class="line">    ├─main</span><br><span class="line">    │  ├─java</span><br><span class="line">    │  │  └─com</span><br><span class="line">    │  │      └─laolang</span><br><span class="line">    │  │          └─jx</span><br><span class="line">    │  │              └─modules</span><br><span class="line">    │  │                  └─system</span><br><span class="line">    │  │                      └─dict</span><br><span class="line">    │  │                          └─controller</span><br><span class="line">    │  │                                  SysDictController.java</span><br><span class="line">    │  │</span><br><span class="line">    │  ├─resources</span><br><span class="line">    │  │  │  logback.xml</span><br><span class="line">    │  │  │</span><br><span class="line">    │  │  └─spring</span><br><span class="line">    │  │          spring-context.xml</span><br><span class="line">    │  │          spring-mvc.xml</span><br><span class="line">    │  │          spring-public.xml</span><br><span class="line">    │  │</span><br><span class="line">    │  └─webapp</span><br><span class="line">    │      │  favicon.ico</span><br><span class="line">    │      │</span><br><span class="line">    │      └─WEB-INF</span><br><span class="line">    │              web.xml</span><br><span class="line">    │</span><br><span class="line">    └─test</span><br><span class="line">        ├─java</span><br><span class="line">        └─resources</span><br><span class="line"></span><br><span class="line">E:\code\sts3\spring_study\jx-ssm&gt;</span><br></pre></td></tr></table></figure>

<h1 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h1><blockquote>
<p>推荐使用 <code>jetty</code> 插件, 本代码示例使用的 <code>spring</code> 版本为 <code>5.x</code> , <code>tomcat</code> 插件在启动时会报错: <code>Invalid byte tag in constant pool: 19</code>, 解决方法为使用更高版本的 <code>tomcat</code> 进行部署<br>jetty:run     命令会直接使用源代码运行web程序，不将其打包成war文件。jetty插件会保证在运行前所有的类和资源都是最新的。如果你修改了代码，插件会自动重新部署。<br>jetty:run-war 会先将程序打包成war文件然后再将其部署。如果有代码修改，会重新打包war文件并部署。</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.laolang.jx<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jx-ssm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">maven-compiler-plugin.version</span>&gt;</span>3.11.0<span class="tag">&lt;/<span class="name">maven-compiler-plugin.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- java ee --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">javax.servlet-api.version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="name">javax.servlet-api.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">jsp-api.version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">jsp-api.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">jstl.version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">jstl.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- spring --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>5.3.31<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- jackson --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">jackson.version</span>&gt;</span>2.13.5<span class="tag">&lt;/<span class="name">jackson.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 日志 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">logback.version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">logback.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 工具类库 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">lombok.version</span>&gt;</span>1.18.30<span class="tag">&lt;/<span class="name">lombok.version</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">		<span class="comment">&lt;!-- 测试先关 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">testng.version</span>&gt;</span>6.14.3<span class="tag">&lt;/<span class="name">testng.version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- java ee --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;javax.servlet-api.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jsp-api.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jstl.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- spring --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- jackson --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jackson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.datatype<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-datatype-jdk8<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jackson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.datatype<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-datatype-jsr310<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jackson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.module<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-module-parameter-names<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jackson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- logback --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;logback.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- lombok --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;lombok.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- testng --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.testng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>testng<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;testng.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.sql<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.ftl<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-compiler-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;maven.compiler.source&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;maven.compiler.target&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">encoding</span>&gt;</span>$&#123;project.build.sourceEncoding&#125;<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 配置 tomcat 插件 --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">				如果使用的 spring 版本是 4.x , </span></span><br><span class="line"><span class="comment">				可以使用此插件, 更高版本会报错:Invalid byte tag in constant pool: 19  </span></span><br><span class="line"><span class="comment">			--&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">port</span>&gt;</span>8096<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">uriEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">uriEncoding</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 配置 jetty 插件 --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">				jetty 和 jdk 版本是对应的, 此版本已经过验证</span></span><br><span class="line"><span class="comment">				jetty:run     命令会直接使用源代码运行web程序，不将其打包成war文件。jetty插件会保证在运行前所有的类和资源都是最新的。如果你修改了代码，插件会自动重新部署。</span></span><br><span class="line"><span class="comment">				jetty:run-war 会先将程序打包成war文件然后再将其部署。如果有代码修改，会重新打包war文件并部署。</span></span><br><span class="line"><span class="comment">			--&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.eclipse.jetty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jetty-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>9.4.55.v20240627<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">httpConnector</span>&gt;</span></span><br><span class="line">						<span class="comment">&lt;!-- 端口 --&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">port</span>&gt;</span>8096<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">						<span class="comment">&lt;!-- 服务器监听地址 --&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">host</span>&gt;</span>localhost<span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">httpConnector</span>&gt;</span></span><br><span class="line">					<span class="comment">&lt;!-- 扫描进行热部署的间隔时间 --&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">scanIntervalSeconds</span>&gt;</span>1<span class="tag">&lt;/<span class="name">scanIntervalSeconds</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="web-xml"><a href="#web-xml" class="headerlink" title="web.xml"></a>web.xml</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">version</span>=<span class="string">&quot;3.0&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">display-name</span>&gt;</span>jx-ssm<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span><span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 加载配置文件 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring/spring-context.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 防止 maven 部署时出现内在泄漏 --&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--&lt;listener&gt; --&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--&lt;listener-class&gt;se.jiderhamn.classloader.leak.prevention.ClassLoaderLeakPreventorListener&lt;/listener-class&gt; --&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--&lt;/listener&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- Spring监听器 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 防止Spring内存溢出监听器 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.util.IntrospectorCleanupListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 编码过滤器 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 解决PUT请求无法提交表单数据的问题 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>HttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.HttpPutFormContentFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>HttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 配置 HiddenHttpMethodFilter: 把 POST 请求转为 DELETE、PUT 请求 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- spring servlet --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring/spring-mvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>default<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.ico<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="spring-配置文件"><a href="#spring-配置文件" class="headerlink" title="spring 配置文件"></a>spring 配置文件</h1><h2 id="spring-context-xml"><a href="#spring-context-xml" class="headerlink" title="spring-context.xml"></a>spring-context.xml</h2><blockquote>
<p>此文件为 <code>spring</code> 总配置文件, 其他所有的 <code>spring</code> 配置文件都 <code>import</code> 到本文件中, <code>web.xml</code> 只需要引入此配置文件即可</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Spring容器中注册非@controller注解的Bean --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 使用Annotation自动注册Bean，解决事物失效问题：在主容器中不扫描@Controller注解，在SpringMvc中只扫描@Controller注解。  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.laolang&quot;</span>&gt;</span><span class="comment">&lt;!-- base-package 如果多个，用“,”分隔 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">context:exclude-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;classpath:spring/spring-public.xml&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;classpath:spring/spring-mvc.xml&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="spring-public-xml"><a href="#spring-public-xml" class="headerlink" title="spring-public.xml"></a>spring-public.xml</h2><blockquote>
<p>此文件主要包含公用的类或者配置, 例如配置文件的导入或者数据源等</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="spring-mvc-xml"><a href="#spring-mvc-xml" class="headerlink" title="spring-mvc.xml"></a>spring-mvc.xml</h2><blockquote>
<p>此文件专门用于配置 <code>spring mvc</code></p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- TODO 添加 接口包的扫描 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Spring容器中注册@controller注解的Bean --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.laolang.jx.**.controller&quot;</span> <span class="attr">use-default-filters</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 注解驱动 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 静态资源过虑 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/favicon.ico&quot;</span> <span class="attr">location</span>=<span class="string">&quot;favicon.ico&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="logback-xml"><a href="#logback-xml" class="headerlink" title="logback.xml"></a>logback.xml</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 </span></span><br><span class="line"><span class="comment">	de<span class="doctag">bug:</span> 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">scan</span>=<span class="string">&quot;true&quot;</span> <span class="attr">scanPeriod</span>=<span class="string">&quot;60 seconds&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">debug</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 输出到控制台 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;console&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;20&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 输出到滚动文件 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;rolling-file&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">file</span>&gt;</span>../logs/jx-ssm/app.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;20&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">rollingPolicy</span></span></span><br><span class="line"><span class="tag">			<span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>../logs/jx-ssm/%d&#123;yyyy-MM-dd&#125;/app-%d&#123;yyyy-MM-dd&#125;.%i.log</span><br><span class="line">			<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">timeBasedFileNamingAndTriggeringPolicy</span></span></span><br><span class="line"><span class="tag">				<span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>10MB<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">timeBasedFileNamingAndTriggeringPolicy</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 日志文件保留天数 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>150<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;DEBUG&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;console&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;rolling-file&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;com.laolang&quot;</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;console&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;rolling-file&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.modules.system.dict.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;system/dict&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysDictController</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@GetMapping(&quot;list&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title function_">list</span><span class="params">()</span>&#123;</span><br><span class="line">		log.info(<span class="string">&quot;system dict list&quot;</span>);</span><br><span class="line">		Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;();</span><br><span class="line">		map.put(<span class="string">&quot;id&quot;</span>, <span class="number">1001L</span>);</span><br><span class="line">		map.put(<span class="string">&quot;groupCode&quot;</span>, <span class="string">&quot;system&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> map;</span><br><span class="line">	&#125;	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ curl --request GET \</span><br><span class="line">  --url http://localhost:8096/system/dict/list \</span><br><span class="line">  --header &#x27;Accept: */*&#x27; \</span><br><span class="line">  --header &#x27;Accept-Encoding: gzip, deflate, br&#x27; \</span><br><span class="line">  --header &#x27;Connection: keep-alive&#x27; \</span><br><span class="line">  --header &#x27;User-Agent: PostmanRuntime-ApipostRuntime/1.1.0&#x27;</span><br><span class="line">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100    32    0    32    0     0    146      0 --:--:-- --:--:-- --:--:--   146</span><br><span class="line"></span><br><span class="line">&#123;&quot;id&quot;:1001,&quot;groupCode&quot;:&quot;system&quot;&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
        <category>ssm</category>
        <category>spring mvc</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>ssm</tag>
        <tag>spring mvc</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu 基本操作</title>
    <url>/2024/08/29/ubuntu-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<p>ubuntu 基本操作</p>
<span id="more"></span>

<h1 id="安装输入法"><a href="#安装输入法" class="headerlink" title="安装输入法"></a>安装输入法</h1><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/Mr_Sudo/article/details/124874239">Ubuntu 22.04安装搜狗输入法</a><br><a href="https://blog.csdn.net/Jason_Yansir/article/details/139849062">【经验分享】Ubuntu 24.04 安装搜狗输入法（亲测有效）</a><br><a href="https://bbs.deepin.org/post/270700">[问题求助] 安装搜狗输入法显示fcitx依赖不足该怎么处理</a></p>
<h1 id="desktop-快捷方式"><a href="#desktop-快捷方式" class="headerlink" title="desktop 快捷方式"></a>desktop 快捷方式</h1><h2 id="检测-desktop-文件"><a href="#检测-desktop-文件" class="headerlink" title="检测 desktop 文件"></a>检测 desktop 文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">desktop-file-validate myapp.desktop</span><br></pre></td></tr></table></figure>

<h2 id="更新-desktop-数据库"><a href="#更新-desktop-数据库" class="headerlink" title="更新 .desktop 数据库"></a>更新 .desktop 数据库</h2><p>更新如下两个位置的 .desktop 文件</p>
<ol>
<li><code>/usr/share/applications/</code></li>
<li><code>~/.local/share/applications/</code></li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo update-desktop-database</span><br></pre></td></tr></table></figure>

<h1 id="appimage"><a href="#appimage" class="headerlink" title="appimage"></a>appimage</h1><p>运行时可能会报错，直接解压即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xxxx.AppImage --appimage-extract</span><br></pre></td></tr></table></figure>

<h1 id="运行-electron-时-chrome-sandbox-报错"><a href="#运行-electron-时-chrome-sandbox-报错" class="headerlink" title="运行 electron 时 chrome-sandbox 报错"></a>运行 electron 时 chrome-sandbox 报错</h1><h2 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/guanglin/p/14950126.html">linux环境运行electron报chrome-sandbox错误解决办法</a></p>
<p>删除解压的软件，重新解压，然后运行如下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo chown root chrome-sandbox &amp;&amp; sudo chmod 4755 chrome-sandbox</span><br></pre></td></tr></table></figure>

<h1 id="安装字体"><a href="#安装字体" class="headerlink" title="安装字体"></a>安装字体</h1><p>例如 jetbrain 字体，将所有的 .ttf 文件复制到如下路径</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/home/laolang/.local/share/fonts/jetbrain</span><br></pre></td></tr></table></figure>

<p>然后执行如下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fc-cache -f -v ~/.local/share/fonts/</span><br></pre></td></tr></table></figure>

<p><img src="https://img2024.cnblogs.com/blog/3446831/202407/3446831-20240713165935233-1771152015.png" alt="image"></p>
]]></content>
      <categories>
        <category>linux</category>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>eclipse</title>
    <url>/2024/08/30/eclipse/</url>
    <content><![CDATA[<h1 id="eclipse-与-jdk-版本对应关系"><a href="#eclipse-与-jdk-版本对应关系" class="headerlink" title="eclipse 与 jdk 版本对应关系"></a>eclipse 与 jdk 版本对应关系</h1><p><a href="https://blog.csdn.net/tchder/article/details/124835866">Eclipse版本与jdk对应版本等信息</a></p>
<table border="1" cellpadding="1" cellspacing="1">
    <tbody>
        <tr>
            <td>JDk版本</td>
            <td style="width:164px;">Eclipse版本</td>
            <td style="width:350px;">版本日期</td>
        </tr>
        <tr>
            <td>JDK1.6</td>
            <td style="width:164px;">Eclipse 4.3 (Kepler)&nbsp;</td>
            <td style="width:350px;">released in June 2013.</td>
        </tr>
        <tr>
            <td colspan="1" rowspan="2">JDK1.7</td>
            <td style="width:164px;">Eclipse 4.4 (Luna)&nbsp;</td>
            <td style="width:350px;">released on June 25, 2014.</td>
        </tr>
        <tr>
            <td style="width:164px;">Eclipse 4.5 (Mars)</td>
            <td style="width:350px;">&nbsp;released on June 24, 2015.</td>
        </tr>
        <tr>
            <td colspan="1">JDK1.8</td>
            <td style="width:164px;">Eclipse 4.6 (<a href="https://wiki.eclipse.org/Neon" rel="nofollow" title="Neon">Neon</a>)</td>
            <td style="width:350px;">released on June 22, 2016. See&nbsp;<a href="https://wiki.eclipse.org/Neon/Simultaneous_Release_Plan#Schedule" rel="nofollow" title="Neon schedule">Neon schedule</a>.</td>
        </tr>
        <tr>
            <td colspan="1" rowspan="10">JDK1.8及以上版本</td>
            <td style="width:164px;">Eclipse 4.7 (<a href="https://wiki.eclipse.org/Oxygen" rel="nofollow" title="Oxygen">Oxygen</a>)&nbsp;</td>
            <td style="width:350px;">released on June 28, 2017. See&nbsp;<a href="https://wiki.eclipse.org/Oxygen/Simultaneous_Release_Plan#Schedule" rel="nofollow" title="Oxygen schedule">Oxygen schedule</a>.</td>
        </tr>
        <tr>
            <td style="width:164px;">Eclipse 4.8 (<a href="https://wiki.eclipse.org/Photon" rel="nofollow" title="Photon">Photon</a>)&nbsp;</td>
            <td style="width:350px;">released on June 27, 2018. See&nbsp;<a href="https://wiki.eclipse.org/Photon/Simultaneous_Release_Plan#Schedule" rel="nofollow" title="Photon schedule">Photon schedule</a>.</td>
        </tr>
        <tr>
            <td style="width:164px;">Eclipse 4.9 (<a href="https://wiki.eclipse.org/Category:SimRel-2018-09" rel="nofollow" title="2018-09">2018-09</a>)&nbsp;</td>
            <td style="width:350px;">released on September 19, 2018.</td>
        </tr>
        <tr>
            <td style="width:164px;">Eclipse 4.10 (<a href="https://wiki.eclipse.org/Category:SimRel-2018-12" rel="nofollow" title="2018-12">2018-12</a>)&nbsp;</td>
            <td style="width:350px;">released on December 20, 2018.</td>
        </tr>
        <tr>
            <td style="width:164px;">Eclipse 4.11 (<a href="https://wiki.eclipse.org/Category:SimRel-2019-03" rel="nofollow" title="2019-03">2019-03</a>)&nbsp;</td>
            <td style="width:350px;">released on March 20, 2019.</td>
        </tr>
        <tr>
            <td style="width:164px;">Eclipse 4.12 (<a href="https://wiki.eclipse.org/Category:SimRel-2019-06" rel="nofollow" title="2019-06">2019-06</a>)&nbsp;</td>
            <td style="width:350px;">released on June 19, 2019.</td>
        </tr>
        <tr>
            <td style="width:164px;">Eclipse 4.13 (<a href="https://wiki.eclipse.org/Category:SimRel-2019-03" rel="nofollow" title="2019-09">2019-09</a>)</td>
            <td style="width:350px;">released on September 18, 2019.</td>
        </tr>
        <tr>
            <td style="width:164px;">Eclipse 4.14 (<a href="https://wiki.eclipse.org/Category:SimRel-2019-12" rel="nofollow" title="2019-12">2019-12</a>)&nbsp;</td>
            <td style="width:350px;">released on December 18, 2019.&nbsp;</td>
        </tr>
        <tr>
            <td style="width:164px;">Eclipse 4.15 (<a href="https://wiki.eclipse.org/Category:SimRel-2020-03" rel="nofollow" title="2020-03">2020-03</a>)&nbsp;</td>
            <td style="width:350px;">released on March 18, 2020.</td>
        </tr>
        <tr>
            <td style="width:164px;"><a href="https://projects.eclipse.org/projects/eclipse/releases/4.16.0" rel="nofollow" title="Eclipse 4.16">Eclipse 4.16</a>&nbsp;(<a href="https://wiki.eclipse.org/Category:SimRel-2020-06" rel="nofollow" title="2020-06">2020-06</a>)</td>
            <td style="width:350px;">released on June 17, 2020.</td>
        </tr>
        <tr>
            <td colspan="1" rowspan="8">JDK1.11及以上版本</td>
            <td style="width:164px;"><a href="https://projects.eclipse.org/projects/eclipse/releases/4.17.0" rel="nofollow" title="Eclipse 4.17">Eclipse 4.17</a>&nbsp;(<a href="https://wiki.eclipse.org/Category:SimRel-2020-09" rel="nofollow" title="2020-09">2020-09</a>)</td>
            <td style="width:350px;">released on September 16, 2020.</td>
        </tr>
        <tr>
            <td style="width:164px;"><a href="https://projects.eclipse.org/projects/eclipse/releases/4.18.0" rel="nofollow" title="Eclipse 4.18">Eclipse 4.18</a>&nbsp;(<a href="https://wiki.eclipse.org/Category:SimRel-2020-12" rel="nofollow" title="2020-12">2020-12</a>)&nbsp;</td>
            <td style="width:350px;">released on December 16, 2020.</td>
        </tr>
        <tr>
            <td style="width:164px;"><a href="https://projects.eclipse.org/projects/eclipse/releases/4.19.0" rel="nofollow" title="Eclipse 4.19">Eclipse 4.19</a>&nbsp;(<a href="https://wiki.eclipse.org/Category:SimRel-2021-03" rel="nofollow" title="2021-03">2021-03</a>)&nbsp;</td>
            <td style="width:350px;">released on March 17, 2021.</td>
        </tr>
        <tr>
            <td style="width:164px;"><a href="https://projects.eclipse.org/projects/eclipse/releases/4.20.0" rel="nofollow" title="Eclipse 4.20">Eclipse 4.20</a>&nbsp;(<a href="https://wiki.eclipse.org/Category:SimRel-2021-06" rel="nofollow" title="2021-06">2021-06</a>)</td>
            <td style="width:350px;">released on June 16, 2021.</td>
        </tr>
        <tr>
            <td style="width:164px;"><a href="https://projects.eclipse.org/projects/eclipse/releases/4.21.0" rel="nofollow" title="Eclipse 4.21">Eclipse 4.21</a>&nbsp;(<a href="https://wiki.eclipse.org/Category:SimRel-2021-09" rel="nofollow" title="2021-09">2021-09</a>)</td>
            <td style="width:350px;">released on September 15, 2021.</td>
        </tr>
        <tr>
            <td style="width:164px;"><a href="https://projects.eclipse.org/projects/eclipse/releases/4.22.0" rel="nofollow" title="Eclipse 4.22">Eclipse 4.22</a>&nbsp;(<a href="https://wiki.eclipse.org/Category:SimRel-2021-12" rel="nofollow" title="2021-12">2021-12</a>)</td>
            <td style="width:350px;">released on December 8, 2021.</td>
        </tr>
        <tr>
            <td style="width:164px;"><a href="https://projects.eclipse.org/projects/eclipse/releases/4.23.0" rel="nofollow" title="Eclipse 4.23">Eclipse 4.23</a>&nbsp;(<a href="https://wiki.eclipse.org/Category:SimRel-2021-12" rel="nofollow" title="2021-12">2021-12</a>)&nbsp;</td>
            <td style="width:350px;">released on March 16, 2022.&nbsp;</td>
        </tr>
        <tr>
            <td style="width:164px;"><a href="https://projects.eclipse.org/projects/eclipse/releases/4.24.0" rel="nofollow" title="Eclipse 4.24">Eclipse 4.24</a>&nbsp;(<a href="https://wiki.eclipse.org/Category:SimRel-2022-06" rel="nofollow" title="2022-06">2022-06</a>)&nbsp;</td>
            <td style="width:350px;">released on June 15, 2022.</td>
        </tr>
        <tr>
            <td colspan="1" rowspan="3">&nbsp;Java 17及以上版本，首选LTS版本</td>
            <td style="width:164px;"><a href="https://projects.eclipse.org/projects/eclipse/releases/4.25.0" rel="nofollow" title="Eclipse 4.25">Eclipse 4.25</a>&nbsp;(<a href="https://wiki.eclipse.org/Category:SimRel-2022-09" rel="nofollow" title="2022-09">2022-09</a>)</td>
            <td style="width:350px;">released on September 14, 2022.</td>
        </tr>
        <tr>
            <td style="width:164px;"><a href="https://projects.eclipse.org/projects/eclipse/releases/4.26.0" rel="nofollow" title="Eclipse 4.26">Eclipse 4.26</a>&nbsp;(<a href="https://wiki.eclipse.org/Category:SimRel-2022-12" rel="nofollow" title="2022-12">2022-12</a>)</td>
            <td style="width:350px;">released on December 7, 2022.</td>
        </tr>
        <tr>
            <td style="width:164px;"><a href="https://projects.eclipse.org/projects/eclipse/releases/4.27.0" rel="nofollow" title="Eclipse 4.27">Eclipse 4.27</a>&nbsp;(<a href="https://wiki.eclipse.org/Category:SimRel-2023-03" rel="nofollow" title="2023-03">2023-03</a>)</td>
            <td style="width:350px;">released on March 15, 2023. It is the supported release.</td>
        </tr>
    </tbody>
</table>

<h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><h2 id="插件安装方式"><a href="#插件安装方式" class="headerlink" title="插件安装方式"></a>插件安装方式</h2><p>可参考: <a href="https://blog.csdn.net/qq_48081868/article/details/127578015">【扩展篇】Eclipse插件的8种安装方式</a></p>
<p>一般常用的有四种</p>
<ol>
<li>有安装地址, 可以使用 Eclipse→Help→Install New Software , 输入地址的方式安装</li>
<li>手动下载打包好的插件, 然后通过 link 的方式安装</li>
<li>手动下载打包好的插件, 可以使用 Eclipse→Help→Install New Software 选择压缩包的方式安装</li>
<li>直接 Eclipse→Help→Eclipse Marketplace 搜索插件进行安装</li>
</ol>
<h2 id="link-安装插件方式步骤"><a href="#link-安装插件方式步骤" class="headerlink" title="link 安装插件方式步骤"></a>link 安装插件方式步骤</h2><ol>
<li>在 <code>eclipse</code> 根目录下新建一个目录, 例如 <code>eclipse_plugin</code></li>
<li>在 <code>eclipse_plugin</code> 目录中新建插件目录, 例如 <code>testng/eclipse</code>, <strong>注意:<code>eclipse</code> 这一层必须要有</strong></li>
<li>解压下载好的插件, 将 <code>features</code> 目录和 <code>plugins</code> 目录复制到 <code>testng/eclipse</code>, <strong>注意:只需要复制这两个目录,其他的文件不要复制</strong></li>
<li>在 <code>eclipse</code> 根目录下新建 <code>links</code> 目录</li>
<li>在 <code>links</code> 目录下新建一个文件, 例如 <code>testng.link</code> <strong>注意: 名字并不重要, 重要的是扩展名</strong></li>
<li>文件内容如下<blockquote>
<p>可以使用相对路径<br>相对路径中的 <code>eclipse</code> 是启动文件所在目录的名称, 例如 <code>sts3</code> 则应该是: <code>path=../sts-3.9.13.RELEASE/eclipse_plugin/indentGuide</code></p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">path=../eclipse/eclipse_plugin/indentGuide</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="properties-editor"><a href="#properties-editor" class="headerlink" title="properties editor"></a>properties editor</h2><p><a href="https://github.com/gildur/SimplePropertiesEditor">https://github.com/gildur/SimplePropertiesEditor</a></p>
<blockquote>
<p>Drag and drop above button into a running Eclipse workspace or click “Help -&gt; Install new software” and paste update site URL:<br><a href="http://gildur.github.io/SimplePropertiesEditor/updates/">http://gildur.github.io/SimplePropertiesEditor/updates/</a></p>
</blockquote>
<h2 id="mybatipse"><a href="#mybatipse" class="headerlink" title="mybatipse"></a>mybatipse</h2><p><a href="https://github.com/mybatis/mybatipse">https://github.com/mybatis/mybatipse</a></p>
<blockquote>
<p>Choose Install New Software… in Help menu and enter the following URL.<br><a href="https://harawata.github.io/eclipse-site/">https://harawata.github.io/eclipse-site/</a></p>
</blockquote>
<h2 id="IndentGuide"><a href="#IndentGuide" class="headerlink" title="IndentGuide"></a>IndentGuide</h2><p><a href="https://github.com/kiritsuku/IndentGuide">https://github.com/kiritsuku/IndentGuide</a></p>
<blockquote>
<p>Update Site<br><a href="https://sschaef.github.io/IndentGuide/update">https://sschaef.github.io/IndentGuide/update</a></p>
</blockquote>
<p><a href="https://blog.csdn.net/weixin_34250709/article/details/85904770">Eclipse代码&#x2F;目录虚线对齐设置</a></p>
<blockquote>
<p>直接下载 <code>github</code> , 解压后将 <code>pdt_tools.indentGuide.updateSite</code> 直接放到 <code>dropins</code> 目录即可</p>
</blockquote>
<h2 id="testng"><a href="#testng" class="headerlink" title="testng"></a>testng</h2><p><a href="https://github.com/testng-team/testng-eclipse">https://github.com/testng-team/testng-eclipse</a></p>
<blockquote>
<p>Click “Help -&gt; Install New Software…” on top level menu<br>Paste the url <a href="https://testng.org/testng-eclipse-update-site">https://testng.org/testng-eclipse-update-site</a> to Work with:  text field and press enter.<br>Select the plugins<br>Click “Next” button and accept the license to complete the installation.<br>Restart Eclipse</p>
</blockquote>
<p>直接在 github 上下载, 将解压后的 features 和 plugins 放到 dropins 目录中</p>
<h2 id="checkstyle"><a href="#checkstyle" class="headerlink" title="checkstyle"></a>checkstyle</h2><p>离线安装包: <a href="http://sourceforge.net/projects/eclipse-cs/">http://sourceforge.net/projects/eclipse-cs/</a></p>
<h1 id="sts3"><a href="#sts3" class="headerlink" title="sts3"></a>sts3</h1><p><a href="https://github.com/spring-attic/toolsuite-distribution/wiki/Spring-Tool-Suite-3">https://github.com/spring-attic/toolsuite-distribution/wiki/Spring-Tool-Suite-3</a></p>
<h1 id="问题汇总"><a href="#问题汇总" class="headerlink" title="问题汇总"></a>问题汇总</h1><h2 id="debug-无法关联源码"><a href="#debug-无法关联源码" class="headerlink" title="debug 无法关联源码"></a>debug 无法关联源码</h2><p>参考:<br><a href="https://blog.csdn.net/zhang_java_11/article/details/108489707">解决eclipse的debug无法跟进代码的问题</a><br><a href="https://blog.csdn.net/javabaidu/article/details/84757735">eclipse maven debug时找不到源代码</a></p>
<p><code>tomcat</code> 可以在 tomcat 上右键 -&gt; edit source lookup , 选择需要关联的项目<br><code>maven</code> 可以 run–》run configurations–&gt;选中命令–》source–&gt;add–&gt;project–&gt;勾选要debug的项目</p>
<h2 id="中文注释错误问题"><a href="#中文注释错误问题" class="headerlink" title="中文注释错误问题"></a>中文注释错误问题</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p><img src="/images/2024-08-30-eclipse/001.png"></p>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>更换 <code>eclipse</code> 版本, 可以选择 <code>2018-06</code> 之前的版本或者 <code>2019-12</code> 之后的版本</p>
<blockquote>
<p>此BUG已在eclipse-2019-12(4.14)、STS-4.5.0中得到了修复，历时一年零六个月<br>此BUG已在 Eclipse IDE 2020‑06 (Spring Tools 4 for Eclipse 4.7.0) 版本中重出江湖</p>
</blockquote>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://gitcode.csdn.net/65aa36f0b8e5f01e1e44d98f.html">STS(eclipse)中文注释错位、缩进、被放大BUG解决</a><br><a href="https://blog.csdn.net/china_3/article/details/90020485">解决Eclipse里的注释中文错位问题</a></p>
<h2 id="tab-转空格"><a href="#tab-转空格" class="headerlink" title="tab 转空格"></a>tab 转空格</h2><h3 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/claymidnight/article/details/116129125">在Eclipse中实现tab转换为4个空格(insert spaces for tabs)</a></p>
<p><img src="/images/2024-08-30-eclipse/002.png"></p>
<h2 id="删除不需要的工作空间记录"><a href="#删除不需要的工作空间记录" class="headerlink" title="删除不需要的工作空间记录"></a>删除不需要的工作空间记录</h2><p><a href="https://www.cnblogs.com/zhjsll/p/4263198.html">eclipse中删除多余的工作空间记录</a></p>
<blockquote>
<p>打开eclipse的根目录 依次进入 configuration &gt;&gt; .settings 用notepad++打开 org.eclipse.ui.ide.prefs<br>最下面一行 RECENT_WORKSPACES 就是工作空间记录， 找到你需要删除的 包括前面的“\n”一起删除就好。</p>
</blockquote>
]]></content>
      <categories>
        <category>java</category>
        <category>eclipse</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>eclipse</tag>
      </tags>
  </entry>
  <entry>
    <title>vscode 搭建 lua 开发环境</title>
    <url>/2024/08/29/vscode-%E6%90%AD%E5%BB%BA-lua-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<p>vscode 搭建 lua 开发环境</p>
<span id="more"></span>

<h1 id="安装-lua"><a href="#安装-lua" class="headerlink" title="安装 lua"></a>安装 lua</h1><blockquote>
<p>根据操作系统下载对应的文件, 然后将可执行文件所在目录加入环境变量</p>
</blockquote>
<p><a href="https://luabinaries.sourceforge.net/download.html">https://luabinaries.sourceforge.net/download.html</a></p>
<p><img src="/images/2024-08-29-vscode-%E6%90%AD%E5%BB%BA_lua_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/001.png"></p>
<h1 id="vscode-插件"><a href="#vscode-插件" class="headerlink" title="vscode 插件"></a>vscode 插件</h1><ol>
<li><p>sumneko.lua</p>
</li>
<li><p>tangzx.emmylua</p>
</li>
</ol>
<p>直接搜索 <code>tangzx.emmylua</code> 即可</p>
<p><img src="/images/2024-08-29-vscode-%E6%90%AD%E5%BB%BA_lua_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/002.png"></p>
<h1 id="windows-调试"><a href="#windows-调试" class="headerlink" title="windows 调试"></a>windows 调试</h1><h2 id="main-lua"><a href="#main-lua" class="headerlink" title="main.lua"></a>main.lua</h2><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> a = <span class="number">1</span></span><br><span class="line">a = <span class="number">2</span></span><br><span class="line">a = <span class="number">3</span></span><br><span class="line">a = <span class="number">4</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure>

<h2 id="launch-json"><a href="#launch-json" class="headerlink" title="launch.json"></a>launch.json</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// 使用 IntelliSense 了解相关属性。 </span></span><br><span class="line">    <span class="comment">// 悬停以查看现有属性的描述。</span></span><br><span class="line">    <span class="comment">// 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;emmylua_launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;启动并附加程序&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;D:/program/lua/lua542/bin/lua54.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;workingDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceRoot&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;arguments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;$&#123;workspaceRoot&#125;/main.lua&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;newWindow&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="/images/2024-08-29-vscode-%E6%90%AD%E5%BB%BA_lua_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/003.png"></p>
<h1 id="linux-调试"><a href="#linux-调试" class="headerlink" title="linux 调试"></a>linux 调试</h1><h2 id="main-lua-1"><a href="#main-lua-1" class="headerlink" title="main.lua"></a>main.lua</h2><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="built_in">package</span>.<span class="built_in">cpath</span> = <span class="built_in">package</span>.<span class="built_in">cpath</span> .. <span class="string">&quot;;/home/laolang/program/code/data/extensions/tangzx.emmylua-0.7.1-linux-x64/debugger/emmy/linux/emmy_core.so&quot;</span></span><br><span class="line"><span class="keyword">local</span> dbg = <span class="built_in">require</span>(<span class="string">&quot;emmy_core&quot;</span>)</span><br><span class="line">dbg.tcpListen(<span class="string">&quot;localhost&quot;</span>, <span class="number">9966</span>)</span><br><span class="line">dbg.waitIDE()</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> a = <span class="number">1</span></span><br><span class="line">a = <span class="number">2</span></span><br><span class="line">a = <span class="number">3</span></span><br><span class="line">a = <span class="number">4</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure>
<h2 id="launch-json-1"><a href="#launch-json-1" class="headerlink" title="launch.json"></a>launch.json</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// 使用 IntelliSense 了解相关属性。 </span></span><br><span class="line">    <span class="comment">// 悬停以查看现有属性的描述。</span></span><br><span class="line">    <span class="comment">// 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;emmylua_new&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;EmmyLua New Debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;host&quot;</span><span class="punctuation">:</span> <span class="string">&quot;localhost&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">9966</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ext&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;.lua&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;.lua.txt&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;.lua.bytes&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ideConnectDebugger&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><blockquote>
<ol>
<li>调试前需要先在终端运行起来</li>
<li><code>/home/laolang/program/code/data/extensions/tangzx.emmylua-0.7.1-linux-x64/debugger/emmy/linux/emmy_core.so</code> 需要修改为自己的位置</li>
<li><code>emmylua</code> 插件有时候会自动更新, 路径也就变了, 如果发现启动时找不到 <code>emmy_core</code>, 可以检查一下插件的版本</li>
</ol>
</blockquote>
<h2 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h2><p><img src="/images/2024-08-29-vscode-%E6%90%AD%E5%BB%BA_lua_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/004.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/EmmyLua/VSCode-EmmyLua/issues/58">Debugging on Mac?</a></p>
<p><a href="https://github.com/EmmyLua/VSCode-EmmyLua/issues/81">Debugger: breakpoint are not working when ide connect to lua</a></p>
]]></content>
      <categories>
        <category>graver</category>
        <category>lua</category>
      </categories>
      <tags>
        <tag>graver</tag>
        <tag>lua</tag>
      </tags>
  </entry>
  <entry>
    <title>spring mvc converter 与 jackson 配置</title>
    <url>/2024/08/30/spring-mvc-converter-%E4%B8%8E-jackson-%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://developer.aliyun.com/article/1254245">【Spring MVC学习笔记 五】SpringMVC框架整合Jackson工具</a><br><a href="https://blog.csdn.net/qq_32331073/article/details/80394949">Spring之坑：自定义Jackson的ObjectMapper，实现@ResponseBody的自定义渲染</a><br><a href="https://www.bilibili.com/video/BV1mW411M7YA">尚硅谷SpringMVC实战教程完整版(spring mvc框架源码解析)</a></p>
<h1 id="抛出问题"><a href="#抛出问题" class="headerlink" title="抛出问题"></a>抛出问题</h1><h2 id="统一返回结果"><a href="#统一返回结果" class="headerlink" title="统一返回结果"></a>统一返回结果</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.framework.common.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.MDC;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonIgnore;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.framework.common.consts.DefaultStatusCode;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.framework.common.exception.BusinessException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.collection.CollUtil;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.StrUtil;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.experimental.Accessors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通用返回结构</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Accessors(chain = true)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">R</span>&lt;T&gt; &#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 接口请求结果的业务状态吗.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> String code;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 判断接口请求是否成功的唯一标识.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> Boolean success;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 提示信息.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 数据体.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> T body;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 扩充字段,正常情况下此字段为空，当此字段有值时，意味着当前接口结构不稳定，以后会修改,即保持 extra 为空.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> Map&lt;String, Object&gt; extra;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * traceId</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> String tid;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 接口返回时间</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> LocalDateTime time;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; R&lt;T&gt; <span class="title function_">build</span><span class="params">(String code, <span class="type">boolean</span> success, String msg, T body)</span> &#123;</span><br><span class="line">		R&lt;T&gt; ajax = <span class="keyword">new</span> <span class="title class_">R</span>&lt;&gt;();</span><br><span class="line">		ajax.setCode(code);</span><br><span class="line">		ajax.setSuccess(success);</span><br><span class="line">		ajax.setMsg(msg);</span><br><span class="line">		ajax.setBody(body);</span><br><span class="line">		ajax.setExtra(<span class="literal">null</span>);</span><br><span class="line">		ajax.setTid(getTraceId());</span><br><span class="line">		ajax.time = LocalDateTime.now();</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> ajax;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">getTraceId</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="type">String</span> <span class="variable">tl</span> <span class="operator">=</span> MDC.get(<span class="string">&quot;tl&quot;</span>);</span><br><span class="line">		<span class="keyword">if</span> (StrUtil.isBlank(tl)) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		List&lt;String&gt; split = StrUtil.split(tl, <span class="string">&#x27;&lt;&#x27;</span>);</span><br><span class="line">		<span class="keyword">if</span> (CollUtil.isEmpty(split) || <span class="number">3</span> != split.size()) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="type">String</span> <span class="variable">tid</span> <span class="operator">=</span> split.get(<span class="number">2</span>);</span><br><span class="line">		<span class="keyword">return</span> tid.substring(<span class="number">0</span>, tid.length() - <span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@JsonIgnore</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPropFromBusinessException</span><span class="params">(BusinessException e)</span> &#123;</span><br><span class="line">		setMsg(e.getMsg());</span><br><span class="line">		setCode(e.getCode());</span><br><span class="line">		setSuccess(<span class="literal">false</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; R&lt;T&gt; <span class="title function_">ok</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> ok(DefaultStatusCode.OK.getCode(), DefaultStatusCode.OK.getMsg());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; R&lt;T&gt; <span class="title function_">ok</span><span class="params">(String code, String msg)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> ok(code, msg, <span class="literal">null</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; R&lt;T&gt; <span class="title function_">ok</span><span class="params">(String code, String msg, T body)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> build(code, <span class="literal">true</span>, msg, body);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; R&lt;T&gt; <span class="title function_">ok</span><span class="params">(T body)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> build(DefaultStatusCode.OK.getCode(), <span class="literal">true</span>, DefaultStatusCode.OK.getMsg(), body);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; R&lt;T&gt; <span class="title function_">failed</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> failed(DefaultStatusCode.FAILED.getMsg());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; R&lt;T&gt; <span class="title function_">failed</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> build(DefaultStatusCode.FAILED.getCode(), <span class="literal">false</span>, msg, <span class="literal">null</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; R&lt;T&gt; <span class="title function_">error</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> error(DefaultStatusCode.ERROR.getMsg());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; R&lt;T&gt; <span class="title function_">error</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> error(DefaultStatusCode.ERROR.getCode(), msg);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; R&lt;T&gt; <span class="title function_">error</span><span class="params">(String code, String msg)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> build(code, <span class="literal">false</span>, msg, <span class="literal">null</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; R&lt;T&gt; <span class="title function_">notFound</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> notFound(DefaultStatusCode.NOT_FOUND.getMsg());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; R&lt;T&gt; <span class="title function_">notFound</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> build(DefaultStatusCode.NOT_FOUND.getCode(), <span class="literal">false</span>, msg, <span class="literal">null</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; R&lt;T&gt; <span class="title function_">unauthorized</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> build(DefaultStatusCode.UNAUTHORIZED.getCode(), <span class="literal">false</span>, DefaultStatusCode.UNAUTHORIZED.getMsg(), <span class="literal">null</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><h3 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.framework.common.domain.R;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.logic.SysDictLogic;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.rsp.SysDictTypeListRsp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;system/dict&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysDictController</span> &#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> SysDictLogic sysDictLogic;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@GetMapping(&quot;list&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> R&lt;SysDictTypeListRsp&gt; <span class="title function_">list</span><span class="params">()</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> R.ok(sysDictLogic.list());</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="logic"><a href="#logic" class="headerlink" title="logic"></a>logic</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.logic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Lists;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.rsp.SysDictTypeListRsp;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.rsp.SysDictTypeListRsp.SysDictTypeListRspBean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysDictLogic</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> SysDictTypeListRsp <span class="title function_">list</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="type">SysDictTypeListRsp</span> <span class="variable">rsp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysDictTypeListRsp</span>();</span><br><span class="line">		List&lt;SysDictTypeListRsp.SysDictTypeListRspBean&gt; list = Lists.newArrayList();</span><br><span class="line">		rsp.setList(list);</span><br><span class="line">		<span class="type">SysDictTypeListRspBean</span> <span class="variable">bean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysDictTypeListRsp</span>.SysDictTypeListRspBean();</span><br><span class="line">		bean.setId(<span class="number">1001L</span>);</span><br><span class="line">		bean.setGroupCode(<span class="string">&quot;system&quot;</span>);</span><br><span class="line">		list.add(bean);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> rsp;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="VO"><a href="#VO" class="headerlink" title="VO"></a>VO</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.rsp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysDictTypeListRsp</span> &#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">private</span> List&lt;SysDictTypeListRspBean&gt; list;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Data</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">SysDictTypeListRspBean</span> &#123;</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * id</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 名称</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 类型编码</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">private</span> String type;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 类型</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">private</span> String typeDesc;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 分组编码</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">private</span> String groupCode;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 分组</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">private</span> String groupDesc;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 状态编码</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">private</span> String status;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 状态</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">private</span> String statusDesc;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">private</span> <span class="type">BigDecimal</span> <span class="variable">amount</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;1.246&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="问题所在"><a href="#问题所在" class="headerlink" title="问题所在"></a>问题所在</h2><p>此时接口返回结果如下</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">	<span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;200&quot;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;success&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;操作成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;list&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">			<span class="punctuation">&#123;</span></span><br><span class="line">				<span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">1001</span><span class="punctuation">,</span></span><br><span class="line">				<span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">				<span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">				<span class="attr">&quot;typeDesc&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">				<span class="attr">&quot;groupCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;system&quot;</span><span class="punctuation">,</span></span><br><span class="line">				<span class="attr">&quot;groupDesc&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">				<span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">				<span class="attr">&quot;statusDesc&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">				<span class="attr">&quot;amount&quot;</span><span class="punctuation">:</span> <span class="number">1.246</span></span><br><span class="line">			<span class="punctuation">&#125;</span></span><br><span class="line">		<span class="punctuation">]</span></span><br><span class="line">	<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;extra&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;tid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">	<span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">		<span class="number">2024</span><span class="punctuation">,</span></span><br><span class="line">		<span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">		<span class="number">30</span><span class="punctuation">,</span></span><br><span class="line">		<span class="number">13</span><span class="punctuation">,</span></span><br><span class="line">		<span class="number">51</span><span class="punctuation">,</span></span><br><span class="line">		<span class="number">41</span><span class="punctuation">,</span></span><br><span class="line">		<span class="number">147000000</span></span><br><span class="line">	<span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>问题如下</p>
<ol>
<li><code>Long</code> 需要转换为 <code>String</code>, 否则前段可能会溢出</li>
<li><code>LocalDateTime</code> 没有格式化</li>
<li><code>BigDecimal</code> 没有控制精度</li>
</ol>
<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><h2 id="添加-ObjectMapper-Module"><a href="#添加-ObjectMapper-Module" class="headerlink" title="添加 ObjectMapper Module"></a>添加 ObjectMapper Module</h2><blockquote>
<p>这三个 <code>SimpleModule</code> 其实可以合并为一个</p>
</blockquote>
<h3 id="BigDecimalModule"><a href="#BigDecimalModule" class="headerlink" title="BigDecimalModule"></a>BigDecimalModule</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.framework.web.jackson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.text.DecimalFormat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonGenerator;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.JsonSerializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.SerializerProvider;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.<span class="keyword">module</span>.SimpleModule;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BigDecimalModule</span> <span class="keyword">extends</span> <span class="title class_">SimpleModule</span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">BigDecimalModule</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>();</span><br><span class="line">		addSerializer(BigDecimal.class, <span class="keyword">new</span> <span class="title class_">JsonSerializer</span>&lt;BigDecimal&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(BigDecimal value, JsonGenerator gen,</span></span><br><span class="line"><span class="params">                                  SerializerProvider serializers)</span></span><br><span class="line">                    <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">                <span class="type">DecimalFormat</span> <span class="variable">format</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DecimalFormat</span>(<span class="string">&quot;0.00&quot;</span>);</span><br><span class="line">                gen.writeString(format.format(value));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Jdk8TimeModule"><a href="#Jdk8TimeModule" class="headerlink" title="Jdk8TimeModule"></a>Jdk8TimeModule</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.framework.web.jackson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalTime;</span><br><span class="line"><span class="keyword">import</span> java.time.format.DateTimeFormatter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.<span class="keyword">module</span>.SimpleModule;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.deser.LocalDateDeserializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.ser.LocalDateSerializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.ser.LocalTimeSerializer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.date.DatePattern;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Jdk8TimeModule</span> <span class="keyword">extends</span> <span class="title class_">SimpleModule</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">Jdk8TimeModule</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>();</span><br><span class="line">		addSerializer(LocalDateTime.class,</span><br><span class="line">				<span class="keyword">new</span> <span class="title class_">LocalDateTimeSerializer</span>(DateTimeFormatter.ofPattern(DatePattern.NORM_DATETIME_PATTERN)));</span><br><span class="line">		addSerializer(LocalDate.class,</span><br><span class="line">				<span class="keyword">new</span> <span class="title class_">LocalDateSerializer</span>(DateTimeFormatter.ofPattern(DatePattern.NORM_DATE_PATTERN)));</span><br><span class="line">		addSerializer(LocalTime.class,</span><br><span class="line">				<span class="keyword">new</span> <span class="title class_">LocalTimeSerializer</span>(DateTimeFormatter.ofPattern(DatePattern.NORM_TIME_PATTERN)));</span><br><span class="line">		addDeserializer(LocalDateTime.class,</span><br><span class="line">				<span class="keyword">new</span> <span class="title class_">LocalDateTimeDeserializer</span>(DateTimeFormatter.ofPattern(DatePattern.NORM_DATETIME_PATTERN)));</span><br><span class="line">		addDeserializer(LocalDate.class,</span><br><span class="line">				<span class="keyword">new</span> <span class="title class_">LocalDateDeserializer</span>(DateTimeFormatter.ofPattern(DatePattern.NORM_DATE_PATTERN)));</span><br><span class="line">		addDeserializer(LocalTime.class,</span><br><span class="line">				<span class="keyword">new</span> <span class="title class_">LocalTimeDeserializer</span>(DateTimeFormatter.ofPattern(DatePattern.NORM_TIME_PATTERN)));</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="BigDecimalModule-1"><a href="#BigDecimalModule-1" class="headerlink" title="BigDecimalModule"></a>BigDecimalModule</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.framework.web.jackson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.<span class="keyword">module</span>.SimpleModule;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ser.std.ToStringSerializer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LongModule</span> <span class="keyword">extends</span> <span class="title class_">SimpleModule</span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">LongModule</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>();</span><br><span class="line">		addSerializer(Long.class, ToStringSerializer.instance);</span><br><span class="line">		addSerializer(Long.TYPE, ToStringSerializer.instance);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="spring-mvc-配置"><a href="#spring-mvc-配置" class="headerlink" title="spring mvc 配置"></a>spring mvc 配置</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- Spring容器中注册@controller注解的Bean --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">context:component-scan</span></span></span><br><span class="line"><span class="tag">		<span class="attr">base-package</span>=<span class="string">&quot;com.laolang.jx.**.controller&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">use-default-filters</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span></span></span><br><span class="line"><span class="tag">			<span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 注解驱动 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">bean</span></span></span><br><span class="line"><span class="tag">				<span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.json.MappingJackson2HttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;objectMapper&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;objectMapper&quot;</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;objectMapper&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;modulesToInstall&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">value</span>&gt;</span>com.laolang.jx.framework.web.jackson.LongModule<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">value</span>&gt;</span>com.laolang.jx.framework.web.jackson.Jdk8TimeModule<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">value</span>&gt;</span>com.laolang.jx.framework.web.jackson.BigDecimalModule<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 静态资源过虑 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/favicon.ico&quot;</span> <span class="attr">location</span>=<span class="string">&quot;favicon.ico&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><blockquote>
<p>可以看到三个问题全部解决</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	&quot;code&quot;: &quot;200&quot;,</span><br><span class="line">	&quot;success&quot;: true,</span><br><span class="line">	&quot;msg&quot;: &quot;操作成功&quot;,</span><br><span class="line">	&quot;body&quot;: &#123;</span><br><span class="line">		&quot;list&quot;: [</span><br><span class="line">			&#123;</span><br><span class="line">				&quot;id&quot;: &quot;1001&quot;,</span><br><span class="line">				&quot;name&quot;: null,</span><br><span class="line">				&quot;type&quot;: null,</span><br><span class="line">				&quot;typeDesc&quot;: null,</span><br><span class="line">				&quot;groupCode&quot;: &quot;system&quot;,</span><br><span class="line">				&quot;groupDesc&quot;: null,</span><br><span class="line">				&quot;status&quot;: null,</span><br><span class="line">				&quot;statusDesc&quot;: null,</span><br><span class="line">				&quot;amount&quot;: &quot;1.25&quot;</span><br><span class="line">			&#125;</span><br><span class="line">		]</span><br><span class="line">	&#125;,</span><br><span class="line">	&quot;extra&quot;: null,</span><br><span class="line">	&quot;tid&quot;: &quot;&quot;,</span><br><span class="line">	&quot;time&quot;: &quot;2024-08-30 14:00:39&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h1><p>所有的输入输出都会经过 <code>HttpMessageConverter</code></p>
<p><img src="/images/2024-08-30-spring-mvc-converter-%E4%B8%8E-jackson-%E9%85%8D%E7%BD%AE/003.png"></p>
<p>该 <code>Converter</code> 默认有 6 个实现类<br><img src="/images/2024-08-30-spring-mvc-converter-%E4%B8%8E-jackson-%E9%85%8D%E7%BD%AE/001.png"></p>
<p>添加 <code>jackson</code> 相关的包之后会自动添加一个 <code>MappingJackson2HttpMessageConverter</code>. <code>MappingJackson2HttpMessageConverter</code> 通过 <code>Jackson2ObjectMapperFactoryBean</code> 实例化一个 <code>ObjectMapper</code> 的实例, 在该工厂中, 可以注册自定义 <code>SimpleModule</code>. 具体可参考其 <code>JavaDoc</code></p>
<p><img src="/images/2024-08-30-spring-mvc-converter-%E4%B8%8E-jackson-%E9%85%8D%E7%BD%AE/002.png"></p>
]]></content>
      <categories>
        <category>java</category>
        <category>spring</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>spring mvc 拦截器和过滤器</title>
    <url>/2024/08/30/spring-mvc-%E6%8B%A6%E6%88%AA%E5%99%A8%E5%92%8C%E8%BF%87%E6%BB%A4%E5%99%A8/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>java</category>
        <category>ssm</category>
        <category>spring mvc</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>ssm</tag>
        <tag>spring mvc</tag>
      </tags>
  </entry>
  <entry>
    <title>spring mvc 异常处理</title>
    <url>/2024/08/30/spring-mvc-%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<h1 id="添加一个异常"><a href="#添加一个异常" class="headerlink" title="添加一个异常"></a>添加一个异常</h1><h2 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.framework.common.domain.R;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.logic.SysDictLogic;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.req.SysDictTypeListReq;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.rsp.SysDictTypeListRsp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;system/dict&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysDictController</span> &#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> SysDictLogic sysDictLogic;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@PostMapping(&quot;list&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> R&lt;SysDictTypeListRsp&gt; <span class="title function_">list</span><span class="params">(<span class="meta">@RequestBody</span> SysDictTypeListReq req)</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> R.ok(sysDictLogic.list(req));</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="logic"><a href="#logic" class="headerlink" title="logic"></a>logic</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.logic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Lists;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.framework.common.consts.DefaultStatusCode;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.framework.common.exception.BusinessException;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.req.SysDictTypeListReq;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.rsp.SysDictTypeListRsp;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.rsp.SysDictTypeListRsp.SysDictTypeListRspBean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.StrUtil;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysDictLogic</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> SysDictTypeListRsp <span class="title function_">list</span><span class="params">(SysDictTypeListReq req)</span> &#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (StrUtil.equals(<span class="string">&quot;1&quot;</span>, req.getGroupCode())) &#123;</span><br><span class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessException</span>(DefaultStatusCode.FAILED.getCode(), <span class="string">&quot;查询异常&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="type">SysDictTypeListRsp</span> <span class="variable">rsp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysDictTypeListRsp</span>();</span><br><span class="line">		List&lt;SysDictTypeListRsp.SysDictTypeListRspBean&gt; list = Lists.newArrayList();</span><br><span class="line">		rsp.setList(list);</span><br><span class="line">		<span class="type">SysDictTypeListRspBean</span> <span class="variable">bean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysDictTypeListRsp</span>.SysDictTypeListRspBean();</span><br><span class="line">		bean.setId(<span class="number">1001L</span>);</span><br><span class="line">		bean.setGroupCode(<span class="string">&quot;system&quot;</span>);</span><br><span class="line">		list.add(bean);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> rsp;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h1 id="自定义异常处理"><a href="#自定义异常处理" class="headerlink" title="自定义异常处理"></a>自定义异常处理</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.framework.web.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.framework.common.domain.R;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.framework.common.exception.BusinessException;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> javax.annotation.Nonnull;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.exception.ExceptionUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.Ordered;</span><br><span class="line"><span class="keyword">import</span> org.springframework.lang.Nullable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.NoHandlerFoundException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.view.json.MappingJackson2JsonView;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomHandlerExceptionResolver</span> <span class="keyword">extends</span> <span class="title class_">AbstractHandlerExceptionResolver</span> &#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">APPLICATION_JSON_UTF8</span> <span class="operator">=</span> <span class="string">&quot;application/json; charset=utf-8&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> ObjectMapper objectMapper;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 参考: DefaultHandlerExceptionResolver#doResolveException</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">	<span class="meta">@Nullable</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> ModelAndView <span class="title function_">doResolveException</span><span class="params">(<span class="meta">@Nonnull</span> HttpServletRequest request,</span></span><br><span class="line"><span class="params">			<span class="meta">@Nonnull</span> HttpServletResponse response, Object handler, <span class="meta">@Nonnull</span> Exception ex)</span> &#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			log.info(<span class="string">&quot;请求出错. url:&#123;&#125;, error:&#123;&#125;&quot;</span>, request.getRequestURI(), ExceptionUtils.getMessage(ex));</span><br><span class="line">			response.setCharacterEncoding(StandardCharsets.UTF_8.name());</span><br><span class="line">			response.setContentType(APPLICATION_JSON_UTF8);</span><br><span class="line">			R&lt;?&gt; r = R.error();</span><br><span class="line">			<span class="keyword">if</span> (ex <span class="keyword">instanceof</span> NoHandlerFoundException) &#123;</span><br><span class="line">				r = handleNoHandlerFoundException(request, response);</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (ex <span class="keyword">instanceof</span> BusinessException) &#123;</span><br><span class="line">				r = handleBusinessException(response, (BusinessException) ex);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				log.error(<span class="string">&quot;未知异常. error class:&#123;&#125;&quot;</span>, ex.getClass());</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="type">ModelAndView</span> <span class="variable">mv</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>(<span class="keyword">new</span> <span class="title class_">MappingJackson2JsonView</span>());</span><br><span class="line">			mv.addAllObjects(objectMapper.readValue(objectMapper.writeValueAsString(r), Map.class));</span><br><span class="line">			<span class="keyword">return</span> mv;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			log.error(<span class="string">&quot;异常处理出错. e:&#123;&#125;&quot;</span>, ExceptionUtils.getMessage(e));</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 404</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> R&lt;?&gt; handleNoHandlerFoundException(HttpServletRequest request, HttpServletResponse response) &#123;</span><br><span class="line">		R&lt;?&gt; r = R.notFound();</span><br><span class="line">		response.setStatus(HttpServletResponse.SC_NOT_FOUND);</span><br><span class="line">		log.info(<span class="string">&quot;请求地址不存在. url:&#123;&#125;&quot;</span>, request.getRequestURI());</span><br><span class="line">		<span class="keyword">return</span> r;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 业务异常</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> R&lt;?&gt; handleBusinessException(HttpServletResponse response, BusinessException ex) &#123;</span><br><span class="line">		R&lt;?&gt; r = R.failed();</span><br><span class="line">		response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);</span><br><span class="line">		r.setPropFromBusinessException(ex);</span><br><span class="line">		log.error(<span class="string">&quot;code:&#123;&#125;,msg:&#123;&#125;&quot;</span>, ex.getCode(), ex.getMsg());</span><br><span class="line">		<span class="keyword">return</span> r;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getOrder</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> Ordered.HIGHEST_PRECEDENCE;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="spring-mvc-配置"><a href="#spring-mvc-配置" class="headerlink" title="spring mvc 配置"></a>spring mvc 配置</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- TODO 添加 接口包的扫描 --&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- Spring容器中注册@controller注解的Bean --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">context:component-scan</span></span></span><br><span class="line"><span class="tag">		<span class="attr">base-package</span>=<span class="string">&quot;com.laolang.jx.**.controller&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">use-default-filters</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span></span></span><br><span class="line"><span class="tag">			<span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 注解驱动 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">bean</span></span></span><br><span class="line"><span class="tag">				<span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.json.MappingJackson2HttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;objectMapper&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;objectMapper&quot;</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- Jackson ObjectMapper 配置 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;objectMapper&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;modulesToInstall&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">value</span>&gt;</span>com.laolang.jx.framework.web.jackson.LongModule<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">value</span>&gt;</span>com.laolang.jx.framework.web.jackson.Jdk8TimeModule<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">value</span>&gt;</span>com.laolang.jx.framework.web.jackson.BigDecimalModule<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 自定义 HandlerExceptionResolver --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;defaultServletHttpRequestHandler&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">class</span>=<span class="string">&quot;com.laolang.jx.framework.web.web.CustomHandlerExceptionResolver&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">ref</span>=<span class="string">&quot;objectMapper&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">&lt;!-- 静态资源过虑 --&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- &lt;mvc:default-servlet-handler /&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/favicon.ico&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">location</span>=<span class="string">&quot;favicon.ico&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="关于-404-拦截"><a href="#关于-404-拦截" class="headerlink" title="关于 404 拦截"></a>关于 404 拦截</h1><h2 id="未配置-mvc-default-servlet-handler"><a href="#未配置-mvc-default-servlet-handler" class="headerlink" title="未配置 mvc:default-servlet-handler"></a>未配置 mvc:default-servlet-handler</h2><p>异常处理和上面的一样, 主要是 <code>web.xml</code> 需要添加一个配置</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- spring servlet --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring/spring-mvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 注意这里 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>throwExceptionIfNoHandlerFound<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>这种情况就是 <code>spring mvc</code> 项目是一个纯粹的后端项目, 即前后端分离, 后端没有任何静态资源</p>
</blockquote>
<h2 id="已配置-mvc-default-servlet-handler"><a href="#已配置-mvc-default-servlet-handler" class="headerlink" title="已配置 mvc:default-servlet-handler"></a>已配置 mvc:default-servlet-handler</h2><p>由于配置了 <code>mvc:default-servlet-handler</code>, <code>spring mvc</code> 将 <code>404</code> 的处理交给了 <code>SimpleUrlHandlerMapping</code></p>
<blockquote>
<p>这种情况就是后端既有静态资源(例如<code>jsp</code>), 又有接口, 此时需要接管<code>spring mvc</code> 中 <code>SimpleUrlHandlerMapping</code> 对 <code>404</code> 的处理, 既要适应页面 <code>404</code> 也要适应接口 <code>404</code></p>
</blockquote>
<h3 id="自定义-DefaultServletHttpRequestHandler"><a href="#自定义-DefaultServletHttpRequestHandler" class="headerlink" title="自定义 DefaultServletHttpRequestHandler"></a>自定义 DefaultServletHttpRequestHandler</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.framework.web.handler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.RequestDispatcher;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.lang.Nullable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.Assert;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.PatternMatchUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.method.HandlerMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.NoHandlerFoundException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.StrUtil;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomServletHttpRequestHandler</span> <span class="keyword">extends</span> <span class="title class_">DefaultServletHttpRequestHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> RequestMappingHandlerMapping requestMappingHandlerMapping;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** Default Servlet name used by Tomcat, Jetty, JBoss, and GlassFish. */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">COMMON_DEFAULT_SERVLET_NAME</span> <span class="operator">=</span> <span class="string">&quot;default&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** Default Servlet name used by Google App Engine. */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">GAE_DEFAULT_SERVLET_NAME</span> <span class="operator">=</span> <span class="string">&quot;_ah_default&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** Default Servlet name used by Resin. */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">RESIN_DEFAULT_SERVLET_NAME</span> <span class="operator">=</span> <span class="string">&quot;resin-file&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** Default Servlet name used by WebLogic. */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">WEBLOGIC_DEFAULT_SERVLET_NAME</span> <span class="operator">=</span> <span class="string">&quot;FileServlet&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** Default Servlet name used by WebSphere. */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">WEBSPHERE_DEFAULT_SERVLET_NAME</span> <span class="operator">=</span> <span class="string">&quot;SimpleFileServlet&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Nullable</span></span><br><span class="line">	<span class="keyword">private</span> String defaultServletName;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Nullable</span></span><br><span class="line">	<span class="keyword">private</span> ServletContext servletContext;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Set the name of the default Servlet to be forwarded to for static resource</span></span><br><span class="line"><span class="comment">	 * requests.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDefaultServletName</span><span class="params">(String defaultServletName)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.defaultServletName = defaultServletName;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * If the &#123;<span class="doctag">@code</span> defaultServletName&#125; property has not been explicitly set,</span></span><br><span class="line"><span class="comment">	 * attempts to locate the default Servlet using the known common</span></span><br><span class="line"><span class="comment">	 * container-specific names.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setServletContext</span><span class="params">(ServletContext servletContext)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.servletContext = servletContext;</span><br><span class="line">		<span class="keyword">if</span> (!StringUtils.hasText(<span class="built_in">this</span>.defaultServletName)) &#123;</span><br><span class="line">			<span class="keyword">if</span> (<span class="built_in">this</span>.servletContext.getNamedDispatcher(COMMON_DEFAULT_SERVLET_NAME) != <span class="literal">null</span>) &#123;</span><br><span class="line">				<span class="built_in">this</span>.defaultServletName = COMMON_DEFAULT_SERVLET_NAME;</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">this</span>.servletContext.getNamedDispatcher(GAE_DEFAULT_SERVLET_NAME) != <span class="literal">null</span>) &#123;</span><br><span class="line">				<span class="built_in">this</span>.defaultServletName = GAE_DEFAULT_SERVLET_NAME;</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">this</span>.servletContext.getNamedDispatcher(RESIN_DEFAULT_SERVLET_NAME) != <span class="literal">null</span>) &#123;</span><br><span class="line">				<span class="built_in">this</span>.defaultServletName = RESIN_DEFAULT_SERVLET_NAME;</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">this</span>.servletContext.getNamedDispatcher(WEBLOGIC_DEFAULT_SERVLET_NAME) != <span class="literal">null</span>) &#123;</span><br><span class="line">				<span class="built_in">this</span>.defaultServletName = WEBLOGIC_DEFAULT_SERVLET_NAME;</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">this</span>.servletContext.getNamedDispatcher(WEBSPHERE_DEFAULT_SERVLET_NAME) != <span class="literal">null</span>) &#123;</span><br><span class="line">				<span class="built_in">this</span>.defaultServletName = WEBSPHERE_DEFAULT_SERVLET_NAME;</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to locate the default servlet for serving static content. &quot;</span></span><br><span class="line">						+ <span class="string">&quot;Please set the &#x27;defaultServletName&#x27; property explicitly.&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleRequest</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line">			<span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">		handleException(request, response);</span><br><span class="line"></span><br><span class="line">		origionHandleRequest(request, response);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 原处理方法</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">origionHandleRequest</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line">			<span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">		Assert.state(<span class="built_in">this</span>.servletContext != <span class="literal">null</span>, <span class="string">&quot;No ServletContext set&quot;</span>);</span><br><span class="line">		<span class="type">RequestDispatcher</span> <span class="variable">rd</span> <span class="operator">=</span> <span class="built_in">this</span>.servletContext.getNamedDispatcher(<span class="built_in">this</span>.defaultServletName);</span><br><span class="line">		<span class="keyword">if</span> (rd == <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;A RequestDispatcher could not be located for the default servlet &#x27;&quot;</span></span><br><span class="line">					+ <span class="built_in">this</span>.defaultServletName + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		rd.forward(request, response);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 处理异常</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">handleException</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line">			<span class="keyword">throws</span> IOException, NoHandlerFoundException &#123;</span><br><span class="line">		<span class="type">String</span> <span class="variable">requestURI</span> <span class="operator">=</span> request.getRequestURI();</span><br><span class="line">		<span class="type">HandlerMethod</span> <span class="variable">handlerMethod</span> <span class="operator">=</span> findHandlerMethod(requestURI);</span><br><span class="line">		<span class="keyword">if</span> (Objects.isNull(handlerMethod)) &#123;</span><br><span class="line">			<span class="keyword">if</span> (StrUtil.startWith(requestURI, <span class="string">&quot;/api&quot;</span>)) &#123;</span><br><span class="line">				log.info(<span class="string">&quot;接口 404&quot;</span>);</span><br><span class="line">				<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NoHandlerFoundException</span>(request.getMethod(), requestURI, <span class="literal">null</span>);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				log.info(<span class="string">&quot;页面 404&quot;</span>);</span><br><span class="line">				response.sendRedirect(<span class="string">&quot;/error/404&quot;</span>);</span><br><span class="line">				<span class="keyword">return</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 根据请求地址获取 HandlerMethod</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> HandlerMethod <span class="title function_">findHandlerMethod</span><span class="params">(String requestURI)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> requestMappingHandlerMapping.getHandlerMethods().entrySet().stream()</span><br><span class="line">				.filter(entry -&gt; entry.getKey().getPatternsCondition().getPatterns().stream()</span><br><span class="line">						.anyMatch(pattern -&gt; PatternMatchUtils.simpleMatch(pattern, requestURI)))</span><br><span class="line">				.map(Map.Entry::getValue).findFirst().orElse(<span class="literal">null</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="添加-404-页面"><a href="#添加-404-页面" class="headerlink" title="添加 404 页面"></a>添加 404 页面</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.framework.web.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;error&quot;)</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ErrorController</span> &#123;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@GetMapping(&quot;404&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">handler404</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;error/404&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="spring-mvc-配置-1"><a href="#spring-mvc-配置-1" class="headerlink" title="spring mvc 配置"></a>spring mvc 配置</h3><blockquote>
<p>需要删除 <code>&lt;mvc:default-servlet-handler /&gt;</code></p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- Spring容器中注册@controller注解的Bean --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">context:component-scan</span></span></span><br><span class="line"><span class="tag">		<span class="attr">base-package</span>=<span class="string">&quot;com.laolang.jx.**.controller&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">use-default-filters</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span></span></span><br><span class="line"><span class="tag">			<span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 注解驱动 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">bean</span></span></span><br><span class="line"><span class="tag">				<span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.json.MappingJackson2HttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;objectMapper&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;objectMapper&quot;</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- Jackson ObjectMapper 配置 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;objectMapper&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;modulesToInstall&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">value</span>&gt;</span>com.laolang.jx.framework.web.jackson.LongModule<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">value</span>&gt;</span>com.laolang.jx.framework.web.jackson.Jdk8TimeModule<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">value</span>&gt;</span>com.laolang.jx.framework.web.jackson.BigDecimalModule<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 自定义 HandlerExceptionResolver --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;defaultServletHttpRequestHandler&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">class</span>=<span class="string">&quot;com.laolang.jx.framework.web.web.CustomHandlerExceptionResolver&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">ref</span>=<span class="string">&quot;objectMapper&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 自定义静态资源处理 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;customServletHttpRequestHandler&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">class</span>=<span class="string">&quot;com.laolang.jx.framework.web.handler.CustomServletHttpRequestHandler&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 自定义的 HandlerMapping --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span></span></span><br><span class="line"><span class="tag">		<span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.handler.SimpleUrlHandlerMapping&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;defaultHandler&quot;</span></span></span><br><span class="line"><span class="tag">			<span class="attr">ref</span>=<span class="string">&quot;customServletHttpRequestHandler&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">&lt;!-- jsp --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span></span></span><br><span class="line"><span class="tag">		<span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 静态资源配置 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">location</span>=<span class="string">&quot;/assets/**&quot;</span> <span class="attr">mapping</span>=<span class="string">&quot;/assets/&quot;</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/favicon.ico&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">location</span>=<span class="string">&quot;favicon.ico&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="更好的办法"><a href="#更好的办法" class="headerlink" title="更好的办法"></a>更好的办法</h2><p><a href="https://www.cnblogs.com/yangchongxing/p/9271900.html">【Java Web开发学习】Spring MVC异常统一处理</a></p>
]]></content>
      <categories>
        <category>java</category>
        <category>ssm</category>
        <category>spring mvc</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>ssm</tag>
        <tag>spring mvc</tag>
      </tags>
  </entry>
  <entry>
    <title>spring aop</title>
    <url>/2024/08/31/spring-aop/</url>
    <content><![CDATA[<h1 id="aop-Hello-World"><a href="#aop-Hello-World" class="headerlink" title="aop Hello World"></a>aop Hello World</h1><h2 id="pom"><a href="#pom" class="headerlink" title="pom"></a>pom</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.laolang.jx<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aop-study<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">maven-compiler-plugin.version</span>&gt;</span>3.11.0<span class="tag">&lt;/<span class="name">maven-compiler-plugin.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- spring --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>5.3.31<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">aspectj.version</span>&gt;</span>1.9.7<span class="tag">&lt;/<span class="name">aspectj.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 日志 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">logback.version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">logback.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 工具类库 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">lombok.version</span>&gt;</span>1.18.30<span class="tag">&lt;/<span class="name">lombok.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">hutool.version</span>&gt;</span>5.8.11<span class="tag">&lt;/<span class="name">hutool.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">vavr.version</span>&gt;</span>0.10.4<span class="tag">&lt;/<span class="name">vavr.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">guava.version</span>&gt;</span>23.0<span class="tag">&lt;/<span class="name">guava.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">commons-lang3.version</span>&gt;</span>3.12.0<span class="tag">&lt;/<span class="name">commons-lang3.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 测试先关 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">testng.version</span>&gt;</span>6.14.3<span class="tag">&lt;/<span class="name">testng.version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-framework-bom<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- spring --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- logback --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;logback.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 工具类库 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;lombok.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;hutool.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.vavr<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>vavr<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;vavr.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.guava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guava<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;guava.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-lang3.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- testng --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.testng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>testng<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;testng.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-compiler-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;maven.compiler.source&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;maven.compiler.target&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">encoding</span>&gt;</span>$&#123;project.build.sourceEncoding&#125;<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="被代理类"><a href="#被代理类" class="headerlink" title="被代理类"></a>被代理类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.logic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysDictTypeLogic</span> &#123;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dictTypeList</span><span class="params">()</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;dict type list&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dictTypeDelete</span><span class="params">()</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;dict type delete&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="注解配置"><a href="#注解配置" class="headerlink" title="注解配置"></a>注解配置</h2><h3 id="aspect-代理"><a href="#aspect-代理" class="headerlink" title="aspect 代理"></a>aspect 代理</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.aop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.After;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Before;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysDictLogicAspect</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Before(&quot;execution(public * com.laolang.jx.module.system..logic.SysDictTypeLogic.* (..))&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">preHandler</span><span class="params">()</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;pre handler&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@After(&quot;execution(public * com.laolang.jx.module.system..logic.*.* (..))&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">postHandler</span><span class="params">()</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;post handler&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="spring-配置"><a href="#spring-配置" class="headerlink" title="spring 配置"></a>spring 配置</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span> <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span> <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.laolang&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="schema-配置"><a href="#schema-配置" class="headerlink" title="schema 配置"></a>schema 配置</h2><h3 id="代理类"><a href="#代理类" class="headerlink" title="代理类"></a>代理类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.aop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysDictLogicAspect</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">preHandler</span><span class="params">()</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;pre handler&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">postHandler</span><span class="params">()</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;post handler&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="spring-配置-1"><a href="#spring-配置-1" class="headerlink" title="spring 配置"></a>spring 配置</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span> <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span> <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.laolang&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;logicAspect&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.laolang.jx.module.system.dict.aop.SysDictLogicAspect&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">expression</span>=<span class="string">&quot;execution(public * com.laolang.jx.module.system..logic.*.* (..))&quot;</span> <span class="attr">id</span>=<span class="string">&quot;logicPointcut&quot;</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">&quot;logicAspect&quot;</span> <span class="attr">order</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">&quot;preHandler&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;logicPointcut&quot;</span>/&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">method</span>=<span class="string">&quot;postHandler&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;logicPointcut&quot;</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.BeforeClass;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.logic.SysDictTypeLogic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonTest</span> &#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">private</span> ApplicationContext context; </span><br><span class="line">	</span><br><span class="line">	<span class="meta">@BeforeClass</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span> &#123;</span><br><span class="line">		context = <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-context.xml&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testOne</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="type">SysDictTypeLogic</span> <span class="variable">sysDictTypeLogic</span> <span class="operator">=</span> context.getBean(SysDictTypeLogic.class);</span><br><span class="line">		sysDictTypeLogic.dictTypeList();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-09-01 00:22:59.024 [main] INFO  c.l.j.m.s.d.a.SysDictLogicAspect - pre handler</span><br><span class="line">2024-09-01 00:22:59.058 [main] INFO  c.l.j.m.s.d.l.SysDictTypeLogic - dict type list</span><br><span class="line">2024-09-01 00:22:59.058 [main] INFO  c.l.j.m.s.d.a.SysDictLogicAspect - post handler</span><br></pre></td></tr></table></figure>

<h1 id="各种增强混合使用时的顺序"><a href="#各种增强混合使用时的顺序" class="headerlink" title="各种增强混合使用时的顺序"></a>各种增强混合使用时的顺序</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> Throwable </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Around</span>：环绕	:是Spring中强大的通知；</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Around</span>：环绕:动态代理；</span></span><br><span class="line"><span class="comment"> * 	try&#123;</span></span><br><span class="line"><span class="comment"> * 			//前置通知</span></span><br><span class="line"><span class="comment"> * 			method.invoke(obj,args);</span></span><br><span class="line"><span class="comment"> * 			//返回通知</span></span><br><span class="line"><span class="comment"> * 	&#125;catch(e)&#123;</span></span><br><span class="line"><span class="comment"> * 			//异常通知</span></span><br><span class="line"><span class="comment"> *  &#125;finally&#123;</span></span><br><span class="line"><span class="comment"> * 			//后置通知</span></span><br><span class="line"><span class="comment"> * 	&#125;</span></span><br><span class="line"><span class="comment"> * 		</span></span><br><span class="line"><span class="comment"> * 	四合一通知就是环绕通知；</span></span><br><span class="line"><span class="comment"> * 	环绕通知中有一个参数：	ProceedingJoinPoint pjp</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> *环绕通知：是优先于普通通知执行，执行顺序；</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *[普通前置]</span></span><br><span class="line"><span class="comment"> *&#123;</span></span><br><span class="line"><span class="comment"> *	try&#123;</span></span><br><span class="line"><span class="comment"> *		环绕前置</span></span><br><span class="line"><span class="comment"> *		环绕执行：目标方法执行</span></span><br><span class="line"><span class="comment"> *		环绕返回</span></span><br><span class="line"><span class="comment"> *	&#125;catch()&#123;</span></span><br><span class="line"><span class="comment"> *		环绕出现异常</span></span><br><span class="line"><span class="comment"> *	&#125;finally&#123;</span></span><br><span class="line"><span class="comment"> *		环绕后置</span></span><br><span class="line"><span class="comment"> *	&#125;</span></span><br><span class="line"><span class="comment"> *&#125;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *[普通后置]</span></span><br><span class="line"><span class="comment"> *[普通方法返回/方法异常]</span></span><br><span class="line"><span class="comment"> *新的顺序：</span></span><br><span class="line"><span class="comment"> *  （环绕前置---普通前置）----目标方法执行----环绕正常返回/出现异常-----环绕后置----普通后置---普通返回或者异常</span></span><br><span class="line"><span class="comment"> *注意：</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>

<h1 id="aop-失效"><a href="#aop-失效" class="headerlink" title="aop 失效"></a>aop 失效</h1><h2 id="问题复现"><a href="#问题复现" class="headerlink" title="问题复现"></a>问题复现</h2><h3 id="logic"><a href="#logic" class="headerlink" title="logic"></a>logic</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.logic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysDictTypeLogic</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dictTypeList</span><span class="params">()</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;dict type list&quot;</span>);</span><br><span class="line">		dictTypeDelete();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dictTypeDelete</span><span class="params">()</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;dict type delete&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="代理类-1"><a href="#代理类-1" class="headerlink" title="代理类"></a>代理类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.aop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.JoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.After;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Before;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysDictLogicAspect</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Before(&quot;execution(public * com.laolang.jx.module.system..logic.SysDictTypeLogic.* (..))&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">preHandler</span><span class="params">(JoinPoint joinPoint)</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;&#123;&#125; pre handler&quot;</span>, joinPoint.getSignature().getName());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@After(&quot;execution(public * com.laolang.jx.module.system..logic.*.* (..))&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">postHandler</span><span class="params">(JoinPoint joinPoint)</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;&#123;&#125; post handler&quot;</span>, joinPoint.getSignature().getName());</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-09-01 13:19:31.273 [main] INFO  c.l.j.m.s.d.a.SysDictLogicAspect - dictTypeList pre handler</span><br><span class="line">2024-09-01 13:19:31.301 [main] INFO  c.l.j.m.s.d.l.SysDictTypeLogic - dict type list</span><br><span class="line">2024-09-01 13:19:31.301 [main] INFO  c.l.j.m.s.d.l.SysDictTypeLogic - dict type delete</span><br><span class="line">2024-09-01 13:19:31.301 [main] INFO  c.l.j.m.s.d.a.SysDictLogicAspect - dictTypeList post handler</span><br></pre></td></tr></table></figure>

<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="spring-配置-2"><a href="#spring-配置-2" class="headerlink" title="spring 配置"></a>spring 配置</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span> <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span> <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.laolang&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span> <span class="attr">expose-proxy</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="logic-1"><a href="#logic-1" class="headerlink" title="logic"></a>logic</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.logic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.framework.AopContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysDictTypeLogic</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dictTypeList</span><span class="params">()</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;dict type list&quot;</span>);</span><br><span class="line">		<span class="type">SysDictTypeLogic</span> <span class="variable">self</span> <span class="operator">=</span> (SysDictTypeLogic) AopContext.currentProxy();</span><br><span class="line">		self.dictTypeDelete();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dictTypeDelete</span><span class="params">()</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;dict type delete&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-09-01 13:21:22.928 [main] INFO  c.l.j.m.s.d.a.SysDictLogicAspect - dictTypeList pre handler</span><br><span class="line">2024-09-01 13:21:22.936 [main] INFO  c.l.j.m.s.d.l.SysDictTypeLogic - dict type list</span><br><span class="line">2024-09-01 13:21:22.937 [main] INFO  c.l.j.m.s.d.a.SysDictLogicAspect - dictTypeDelete pre handler</span><br><span class="line">2024-09-01 13:21:22.937 [main] INFO  c.l.j.m.s.d.l.SysDictTypeLogic - dict type delete</span><br><span class="line">2024-09-01 13:21:22.937 [main] INFO  c.l.j.m.s.d.a.SysDictLogicAspect - dictTypeDelete post handler</span><br><span class="line">2024-09-01 13:21:22.937 [main] INFO  c.l.j.m.s.d.a.SysDictLogicAspect - dictTypeList post handler</span><br></pre></td></tr></table></figure>

<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>aop 失效有多种情况, 上述属于在类内部调用方法, 并不是通过代理对象调用, 所以内部调用的方法 aop 会失效. 解决方法时通过代理类调用</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/mzcx/p/11430846.html">spring中expose-proxy的作用与原理</a><br><a href="https://www.jianshu.com/p/5df09b132abd">Spring专题: 4. AOP失效的场景与原理</a></p>
]]></content>
      <categories>
        <category>java</category>
        <category>ssm</category>
        <category>spring</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>spring</tag>
        <tag>ssm</tag>
      </tags>
  </entry>
  <entry>
    <title>spring mvc 整合 mybatis</title>
    <url>/2024/08/30/spring-mvc-%E6%95%B4%E5%90%88-mybatis/</url>
    <content><![CDATA[<h1 id="整合-mybatis"><a href="#整合-mybatis" class="headerlink" title="整合 mybatis"></a>整合 mybatis</h1><h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.laolang.jx<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jx-ssm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">maven-compiler-plugin.version</span>&gt;</span>3.11.0<span class="tag">&lt;/<span class="name">maven-compiler-plugin.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- java ee --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">javax.servlet-api.version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="name">javax.servlet-api.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">jsp-api.version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">jsp-api.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">jstl.version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">jstl.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- spring --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>5.3.31<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- jackson --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">jackson.version</span>&gt;</span>2.13.5<span class="tag">&lt;/<span class="name">jackson.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 数据库 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">mybatis.versin</span>&gt;</span>3.5.9<span class="tag">&lt;/<span class="name">mybatis.versin</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">mybatis-spring.version</span>&gt;</span>2.0.6<span class="tag">&lt;/<span class="name">mybatis-spring.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">mysql-connector-j.version</span>&gt;</span>8.0.33<span class="tag">&lt;/<span class="name">mysql-connector-j.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">druid.version</span>&gt;</span>1.2.4<span class="tag">&lt;/<span class="name">druid.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">pagehelper.version</span>&gt;</span>5.3.0<span class="tag">&lt;/<span class="name">pagehelper.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">aspectj.version</span>&gt;</span>1.9.7<span class="tag">&lt;/<span class="name">aspectj.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 日志 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">logback.version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">logback.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 工具类库 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">lombok.version</span>&gt;</span>1.18.30<span class="tag">&lt;/<span class="name">lombok.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">hutool.version</span>&gt;</span>5.8.11<span class="tag">&lt;/<span class="name">hutool.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">vavr.version</span>&gt;</span>0.10.4<span class="tag">&lt;/<span class="name">vavr.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">mapstruct.version</span>&gt;</span>1.4.2.Final<span class="tag">&lt;/<span class="name">mapstruct.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">guava.version</span>&gt;</span>23.0<span class="tag">&lt;/<span class="name">guava.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">commons-lang3.version</span>&gt;</span>3.12.0<span class="tag">&lt;/<span class="name">commons-lang3.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 测试先关 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">testng.version</span>&gt;</span>6.14.3<span class="tag">&lt;/<span class="name">testng.version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-framework-bom<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- java ee --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;javax.servlet-api.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jsp-api.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jstl.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- spring --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- jackson --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jackson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.datatype<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-datatype-jdk8<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jackson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.datatype<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-datatype-jsr310<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jackson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.module<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-module-parameter-names<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jackson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 数据库 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis.versin&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis-spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql-connector-j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;druid.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;pagehelper.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- aspectj --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aspectj.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- logback --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;logback.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 工具类库 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;lombok.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;hutool.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.vavr<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>vavr<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;vavr.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mapstruct<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapstruct<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mapstruct.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mapstruct<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapstruct-jdk8<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mapstruct.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mapstruct<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapstruct-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mapstruct.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.guava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guava<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;guava.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-lang3.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- testng --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.testng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>testng<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;testng.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">id</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">profiles.active</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">profiles.active</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">id</span>&gt;</span>test<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">profiles.active</span>&gt;</span>test<span class="tag">&lt;/<span class="name">profiles.active</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.sql<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.ftl<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 资源根目录排除各环境的配置，使用单独的资源目录来指定 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">exclude</span>&gt;</span>dev/*<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">exclude</span>&gt;</span>test/*<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources/$&#123;profiles.active&#125;<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">testResources</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">testResource</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/test/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.sql<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.ftl<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">testResource</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">testResource</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/test/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">testResource</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">testResources</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-compiler-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;maven.compiler.source&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;maven.compiler.target&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">encoding</span>&gt;</span>$&#123;project.build.sourceEncoding&#125;<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 配置 tomcat 插件 --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 如果使用的 spring 版本是 4.x , 可以使用此插件, 更高版本会报错:Invalid byte tag in constant </span></span><br><span class="line"><span class="comment">				pool: 19 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">port</span>&gt;</span>8096<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">uriEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">uriEncoding</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 配置 jetty 插件 --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- jetty 和 jdk 版本是对应的, 此版本已经过验证 jetty:run 命令会直接使用源代码运行web程序，不将其打包成war文件。jetty插件会保证在运行前所有的类和资源都是最新的。如果你修改了代码，插件会自动重新部署。 </span></span><br><span class="line"><span class="comment">				jetty:run-war 会先将程序打包成war文件然后再将其部署。如果有代码修改，会重新打包war文件并部署。 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.eclipse.jetty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jetty-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>9.4.55.v20240627<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">httpConnector</span>&gt;</span></span><br><span class="line">						<span class="comment">&lt;!-- 端口 --&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">port</span>&gt;</span>8096<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">						<span class="comment">&lt;!-- 服务器监听地址 --&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">host</span>&gt;</span>localhost<span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">httpConnector</span>&gt;</span></span><br><span class="line">					<span class="comment">&lt;!-- 扫描进行热部署的间隔时间 --&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">scanIntervalSeconds</span>&gt;</span>1<span class="tag">&lt;/<span class="name">scanIntervalSeconds</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="spring-public-xml"><a href="#spring-public-xml" class="headerlink" title="spring-public.xml"></a>spring-public.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 导入配置文件 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span></span></span><br><span class="line"><span class="tag">		<span class="attr">class</span>=<span class="string">&quot;org.springframework.context.support.PropertySourcesPlaceholderConfigurer&quot;</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 忽略没有找到的资源文件 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;ignoreResourceNotFound&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 配置资源文件 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;locations&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">value</span>&gt;</span>classpath:properties/config.properties<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">value</span>&gt;</span>classpath:properties/db.properties<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 配置 druid数据源 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span> <span class="attr">init-method</span>=<span class="string">&quot;init&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">destroy-method</span>=<span class="string">&quot;close&quot;</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 基本属性 url、user、password --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.jdbcUrl&#125;&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.user&#125;&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 配置初始化大小、最小、最大 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minIdle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxActive&quot;</span> <span class="attr">value</span>=<span class="string">&quot;20&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 配置获取连接等待超时的时间 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxWait&quot;</span> <span class="attr">value</span>=<span class="string">&quot;60000&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;timeBetweenEvictionRunsMillis&quot;</span> <span class="attr">value</span>=<span class="string">&quot;60000&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minEvictableIdleTimeMillis&quot;</span> <span class="attr">value</span>=<span class="string">&quot;300000&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;validationQuery&quot;</span> <span class="attr">value</span>=<span class="string">&quot;SELECT &#x27;x&#x27;&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;testWhileIdle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;testOnBorrow&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;testOnReturn&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 打开PSCache，并且指定每个连接上PSCache的大小 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;poolPreparedStatements&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolPreparedStatementPerConnectionSize&quot;</span></span></span><br><span class="line"><span class="tag">			<span class="attr">value</span>=<span class="string">&quot;20&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;filters&quot;</span> <span class="attr">value</span>=<span class="string">&quot;stat&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="spring-mybatis-xml"><a href="#spring-mybatis-xml" class="headerlink" title="spring-mybatis.xml"></a>spring-mybatis.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置SqlSessionFactory --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactoryBean&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 数据源 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置 mybatis 配置文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis/mybatis-config.xml&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- sql 映射文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapperLocations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis/**/mapping/**/*.xml&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;property name=&quot;typeAliasesPackage&quot; value=&quot;com.laolang.jd.modules.*.entity&quot; /&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 会话工厂 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sqlSessionFactoryBeanName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sqlSessionFactoryBean&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 扫描包路径 多个包中间用半角逗号分隔 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.laolang.jx.**.mapper&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="srping-transaction-xml"><a href="#srping-transaction-xml" class="headerlink" title="srping-transaction.xml"></a>srping-transaction.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span> <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 定义事务管理器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 定义事务策略 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--所有以find get select query开头的方法都是只读的 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;find*&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;get*&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;select*&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;query*&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;list*&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--其他方法使用默认事务策略 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;myPointcut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.laolang.jx..service.*.*(..))&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--将定义好的事务处理策略应用到上述的切入点 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointcut&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="mybatis-config-xml"><a href="#mybatis-config-xml" class="headerlink" title="mybatis-config.xml"></a>mybatis-config.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 输出sql --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logPrefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;dao.&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 开启驼峰命名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;mapUnderscoreToCamelCase&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 全局启用或禁用延迟加载。当禁用时，所有关联对象都会即时加载。 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;lazyLoadingEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 当启用时，有延迟加载属性的对象在被调用时将会完全加载任意属性。否则，每种属性将会按需要加载。 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;aggressiveLazyLoading&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 指定哪个对象的方法触发一次延迟加载。 	用逗号分隔的方法列表。 默认：	equals,clone,hashCode,toString  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;lazyLoadTriggerMethods&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    	<span class="comment">&lt;!-- 打印日志 --&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">&quot;com.laolang.jx.framework.mybatis.interceptor.MybatisPrintSqlInterceptor&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- com.github.pagehelper为PageHelper类所在包名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">&quot;com.github.pagehelper.PageInterceptor&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 4.0.0以后版本可以不设置该参数 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;helperDialect&quot;</span> <span class="attr">value</span>=<span class="string">&quot;mysql&quot;</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 该参数默认为false --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 和startPage中的pageNum效果一样 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;property name=&quot;offsetAsPageNum&quot; value=&quot;true&quot; /&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 该参数默认为false --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 设置为true时，使用RowBounds分页会进行count查询 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;rowBoundsWithCount&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型） --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;property name=&quot;pageSizeZero&quot; value=&quot;true&quot; /&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 3.3.0版本可用 - 分页参数合理化，默认false禁用 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 启用合理化时，如果pageNum&lt;1会查询第一页，如果pageNum&gt;pages会查询最后一页 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 禁用合理化时，如果pageNum&lt;1或pageNum&gt;pages会返回空数据 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;property name=&quot;reasonable&quot; value=&quot;false&quot; /&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 3.5.0版本可用 - 为了支持startPage(Object params)方法 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 可以配置pageNum,pageSize,count,pageSizeZero,reasonable,orderBy,不配置映射的用默认值 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 不理解该含义的前提下，不要随便复制该配置 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;property name=&quot;params&quot; value=&quot;pageNum=pageHelperStart;pageSize=pageHelperRows;&quot; /&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 支持通过Mapper接口参数来传递分页参数 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;property name=&quot;supportMethodsArguments&quot; value=&quot;false&quot; /&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- always总是返回PageInfo类型,check检查返回类型是否为PageInfo,none返回Page --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;property name=&quot;returnPageInfo&quot; value=&quot;none&quot; /&gt; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="logback-xml"><a href="#logback-xml" class="headerlink" title="logback.xml"></a>logback.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">xml</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 </span></span><br><span class="line"><span class="comment">	de<span class="doctag">bug:</span> 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">scan</span>=<span class="string">&quot;true&quot;</span> <span class="attr">scanPeriod</span>=<span class="string">&quot;60 seconds&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">debug</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 输出到控制台 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;console&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;20&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 输出到滚动文件 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;rolling-file&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">file</span>&gt;</span>../logs/jx-ssm/app.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;20&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">rollingPolicy</span></span></span><br><span class="line"><span class="tag">			<span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>../logs/jx-ssm/%d&#123;yyyy-MM-dd&#125;/app-%d&#123;yyyy-MM-dd&#125;.%i.log</span><br><span class="line">			<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">timeBasedFileNamingAndTriggeringPolicy</span></span></span><br><span class="line"><span class="tag">				<span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>10MB<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">timeBasedFileNamingAndTriggeringPolicy</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 日志文件保留天数 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>150<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;DEBUG&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;console&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;rolling-file&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;dao&quot;</span> <span class="attr">level</span>=<span class="string">&quot;DEBUG&quot;</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;console&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;rolling-file&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;com.laolang&quot;</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;console&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;rolling-file&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="整合-mybatis-plus"><a href="#整合-mybatis-plus" class="headerlink" title="整合 mybatis-plus"></a>整合 mybatis-plus</h1><h2 id="pom-xml-1"><a href="#pom-xml-1" class="headerlink" title="pom.xml"></a>pom.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.laolang.jx<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jx-ssm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">maven-compiler-plugin.version</span>&gt;</span>3.11.0<span class="tag">&lt;/<span class="name">maven-compiler-plugin.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- java ee --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">javax.servlet-api.version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="name">javax.servlet-api.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">jsp-api.version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">jsp-api.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">jstl.version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">jstl.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- spring --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>5.3.31<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- jackson --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">jackson.version</span>&gt;</span>2.13.5<span class="tag">&lt;/<span class="name">jackson.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 数据库 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">mybatis-plus.version</span>&gt;</span>3.5.1<span class="tag">&lt;/<span class="name">mybatis-plus.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">mysql-connector-j.version</span>&gt;</span>8.0.33<span class="tag">&lt;/<span class="name">mysql-connector-j.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">druid.version</span>&gt;</span>1.2.4<span class="tag">&lt;/<span class="name">druid.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">pagehelper.version</span>&gt;</span>5.3.0<span class="tag">&lt;/<span class="name">pagehelper.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">aspectj.version</span>&gt;</span>1.9.7<span class="tag">&lt;/<span class="name">aspectj.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 日志 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">logback.version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">logback.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 工具类库 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">lombok.version</span>&gt;</span>1.18.30<span class="tag">&lt;/<span class="name">lombok.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">hutool.version</span>&gt;</span>5.8.11<span class="tag">&lt;/<span class="name">hutool.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">vavr.version</span>&gt;</span>0.10.4<span class="tag">&lt;/<span class="name">vavr.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">mapstruct.version</span>&gt;</span>1.4.2.Final<span class="tag">&lt;/<span class="name">mapstruct.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">guava.version</span>&gt;</span>23.0<span class="tag">&lt;/<span class="name">guava.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">commons-lang3.version</span>&gt;</span>3.12.0<span class="tag">&lt;/<span class="name">commons-lang3.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 测试先关 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">testng.version</span>&gt;</span>6.14.3<span class="tag">&lt;/<span class="name">testng.version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-framework-bom<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- java ee --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;javax.servlet-api.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jsp-api.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jstl.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- spring --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- jackson --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jackson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.datatype<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-datatype-jdk8<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jackson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.datatype<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-datatype-jsr310<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jackson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.module<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-module-parameter-names<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jackson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 数据库 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis-plus.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql-connector-j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;druid.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;pagehelper.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.jsqlparser<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsqlparser<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- aspectj --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aspectj.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- logback --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;logback.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 工具类库 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;lombok.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;hutool.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.vavr<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>vavr<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;vavr.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mapstruct<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapstruct<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mapstruct.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mapstruct<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapstruct-jdk8<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mapstruct.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mapstruct<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapstruct-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mapstruct.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.guava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guava<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;guava.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-lang3.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- testng --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.testng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>testng<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;testng.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">id</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">profiles.active</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">profiles.active</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">id</span>&gt;</span>test<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">profiles.active</span>&gt;</span>test<span class="tag">&lt;/<span class="name">profiles.active</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.sql<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.ftl<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 资源根目录排除各环境的配置，使用单独的资源目录来指定 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">exclude</span>&gt;</span>dev/*<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">exclude</span>&gt;</span>test/*<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources/$&#123;profiles.active&#125;<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">testResources</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">testResource</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/test/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.sql<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.ftl<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">testResource</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">testResource</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/test/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">testResource</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">testResources</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-compiler-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;maven.compiler.source&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;maven.compiler.target&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">encoding</span>&gt;</span>$&#123;project.build.sourceEncoding&#125;<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 配置 tomcat 插件 --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 如果使用的 spring 版本是 4.x , 可以使用此插件, 更高版本会报错:Invalid byte tag in constant </span></span><br><span class="line"><span class="comment">				pool: 19 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">port</span>&gt;</span>8096<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">uriEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">uriEncoding</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 配置 jetty 插件 --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- jetty 和 jdk 版本是对应的, 此版本已经过验证 jetty:run 命令会直接使用源代码运行web程序，不将其打包成war文件。jetty插件会保证在运行前所有的类和资源都是最新的。如果你修改了代码，插件会自动重新部署。 </span></span><br><span class="line"><span class="comment">				jetty:run-war 会先将程序打包成war文件然后再将其部署。如果有代码修改，会重新打包war文件并部署。 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.eclipse.jetty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jetty-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>9.4.55.v20240627<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">httpConnector</span>&gt;</span></span><br><span class="line">						<span class="comment">&lt;!-- 端口 --&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">port</span>&gt;</span>8096<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">						<span class="comment">&lt;!-- 服务器监听地址 --&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">host</span>&gt;</span>localhost<span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">httpConnector</span>&gt;</span></span><br><span class="line">					<span class="comment">&lt;!-- 扫描进行热部署的间隔时间 --&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">scanIntervalSeconds</span>&gt;</span>1<span class="tag">&lt;/<span class="name">scanIntervalSeconds</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="spring-mybatis"><a href="#spring-mybatis" class="headerlink" title="spring-mybatis"></a>spring-mybatis</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 配置 druid数据源 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span> <span class="attr">init-method</span>=<span class="string">&quot;init&quot;</span> <span class="attr">destroy-method</span>=<span class="string">&quot;close&quot;</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 基本属性 url、user、password --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.jdbcUrl&#125;&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.user&#125;&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 配置初始化大小、最小、最大 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minIdle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxActive&quot;</span> <span class="attr">value</span>=<span class="string">&quot;20&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 配置获取连接等待超时的时间 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxWait&quot;</span> <span class="attr">value</span>=<span class="string">&quot;60000&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;timeBetweenEvictionRunsMillis&quot;</span> <span class="attr">value</span>=<span class="string">&quot;60000&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minEvictableIdleTimeMillis&quot;</span> <span class="attr">value</span>=<span class="string">&quot;300000&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;validationQuery&quot;</span> <span class="attr">value</span>=<span class="string">&quot;SELECT &#x27;x&#x27;&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;testWhileIdle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;testOnBorrow&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;testOnReturn&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 打开PSCache，并且指定每个连接上PSCache的大小 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;poolPreparedStatements&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolPreparedStatementPerConnectionSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;20&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;filters&quot;</span> <span class="attr">value</span>=<span class="string">&quot;stat&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">&lt;!-- SqlSessionFactory Config --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configuration&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;configuration&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapperLocations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis/**/mapping/**/*.xml&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;globalConfig&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;globalConfig&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;plugins&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;mybatisPrintSqlInterceptor&quot;</span> /&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;mybatisPlusInterceptor&quot;</span> /&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;pageInterceptor&quot;</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- mybatis plus 配置 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;configuration&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.core.MybatisConfiguration&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cacheEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;globalConfig&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.core.config.GlobalConfig&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dbConfig&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dbConfig&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dbConfig&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.core.config.GlobalConfig.DbConfig&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;idType&quot;</span> <span class="attr">value</span>=<span class="string">&quot;AUTO&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;logicDeleteField&quot;</span> <span class="attr">value</span>=<span class="string">&quot;deleted&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;logicDeleteValue&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;logicNotDeleteValue&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 乐观锁配置 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;optimisticLockerInnerInterceptor&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.extension.plugins.inner.OptimisticLockerInnerInterceptor&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- mybatis plus 自带的插件配置 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;mybatisPlusInterceptor&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;interceptors&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;optimisticLockerInnerInterceptor&quot;</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- mybatis 打印 sql 拦截器 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;mybatisPrintSqlInterceptor&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">class</span>=<span class="string">&quot;com.laolang.jx.framework.mybatis.interceptor.MybatisPrintSqlInterceptor&quot;</span> /&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- pagehelper --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;pageInterceptor&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.github.pagehelper.PageInterceptor&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 包扫描 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.laolang.jx.**.mapper&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 定义事务管理器 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 声明式事务 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><h3 id="拦截器获取-StatementHandler-报错的问题"><a href="#拦截器获取-StatementHandler-报错的问题" class="headerlink" title="拦截器获取 StatementHandler 报错的问题"></a>拦截器获取 StatementHandler 报错的问题</h3><h4 id="MybatisPrintSqlInterceptor"><a href="#MybatisPrintSqlInterceptor" class="headerlink" title="MybatisPrintSqlInterceptor"></a>MybatisPrintSqlInterceptor</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.framework.mybatis.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.parameter.ParameterHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.statement.StatementHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.BoundSql;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.MappedStatement;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ParameterMapping;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ParameterMode;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.plugin.Interceptor;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.plugin.Intercepts;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.plugin.Invocation;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.plugin.Plugin;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.plugin.Signature;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.MetaObject;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.SystemMetaObject;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.ResultHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.type.TypeHandlerRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.Ordered;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.ReflectionUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.StrUtil;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 打印 sql 拦截器</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Intercepts(&#123;</span></span><br><span class="line"><span class="meta">		@Signature(type = StatementHandler.class, method = &quot;query&quot;, args = &#123; Statement.class, ResultHandler.class &#125;),</span></span><br><span class="line"><span class="meta">		@Signature(type = StatementHandler.class, method = &quot;update&quot;, args = &#123; Statement.class &#125;),</span></span><br><span class="line"><span class="meta">		@Signature(type = StatementHandler.class, method = &quot;batch&quot;, args = &#123; Statement.class &#125;) &#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPrintSqlInterceptor</span> <span class="keyword">implements</span> <span class="title class_">Interceptor</span>, Ordered &#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * mybatis 配置对象.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">Configuration</span> <span class="variable">configuration</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 时间格式化.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ThreadLocal&lt;SimpleDateFormat&gt; DATE_FORMAT_THREAD_LOCAL = ThreadLocal</span><br><span class="line">			.withInitial(() -&gt; <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss.SSS&quot;</span>));</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 拦截器主方法.</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> invocation</span></span><br><span class="line"><span class="comment">	 *            invocation</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> sql 执行结果</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> Throwable</span></span><br><span class="line"><span class="comment">	 *             Throwable</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@SuppressWarnings(&quot;rawtypes&quot;)</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> Object <span class="title function_">intercept</span><span class="params">(Invocation invocation)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">		<span class="type">Object</span> <span class="variable">target</span> <span class="operator">=</span> invocation.getTarget();</span><br><span class="line">		<span class="type">long</span> <span class="variable">startTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">		<span class="type">Object</span> <span class="variable">result</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			result = invocation.proceed();</span><br><span class="line">			<span class="keyword">return</span> result;</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				<span class="type">long</span> <span class="variable">endTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">				<span class="type">long</span> <span class="variable">sqlCost</span> <span class="operator">=</span> endTime - startTime;</span><br><span class="line">				<span class="type">StatementHandler</span> <span class="variable">statementHandler</span> <span class="operator">=</span> (StatementHandler) target;</span><br><span class="line">				<span class="type">BoundSql</span> <span class="variable">boundSql</span> <span class="operator">=</span> statementHandler.getBoundSql();</span><br><span class="line">				<span class="keyword">if</span> (configuration == <span class="literal">null</span>) &#123;</span><br><span class="line">					<span class="comment">// final DefaultParameterHandler parameterHandler = (DefaultParameterHandler) statementHandler.getParameterHandler();</span></span><br><span class="line">					<span class="keyword">final</span> <span class="type">ParameterHandler</span> <span class="variable">parameterHandler</span> <span class="operator">=</span> statementHandler.getParameterHandler();</span><br><span class="line">					<span class="type">Field</span> <span class="variable">configurationField</span> <span class="operator">=</span> ReflectionUtils.findField(parameterHandler.getClass(), <span class="string">&quot;configuration&quot;</span>);</span><br><span class="line">					ReflectionUtils.makeAccessible(configurationField);</span><br><span class="line">					<span class="built_in">this</span>.configuration = (Configuration) configurationField.get(parameterHandler);</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">				<span class="comment">// 输出 mapper id</span></span><br><span class="line">				<span class="type">MetaObject</span> <span class="variable">metaObject</span> <span class="operator">=</span> SystemMetaObject.forObject(target);</span><br><span class="line">				<span class="type">MappedStatement</span> <span class="variable">ms</span> <span class="operator">=</span> (MappedStatement) metaObject.getValue(<span class="string">&quot;delegate.mappedStatement&quot;</span>);</span><br><span class="line">				<span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> ms.getId();</span><br><span class="line"></span><br><span class="line">				<span class="comment">// 替换参数格式化Sql语句，去除换行符</span></span><br><span class="line">				<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> formatSql(boundSql, configuration).concat(<span class="string">&quot;;&quot;</span>);</span><br><span class="line">				<span class="type">String</span> <span class="variable">warning</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">				<span class="comment">// CHECKSTYLE:OFF</span></span><br><span class="line">				<span class="keyword">if</span> (sqlCost &gt; <span class="number">2000</span>) &#123;</span><br><span class="line">					warning = <span class="string">&quot;[耗时过长]&quot;</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="comment">// CHECKSTYLE:ON</span></span><br><span class="line"></span><br><span class="line">				<span class="comment">// 开始输出 sql</span></span><br><span class="line">				log.info(<span class="string">&quot;map-id: &#123;&#125;&quot;</span>, id);</span><br><span class="line">				log.info(<span class="string">&quot;[ &#123;&#125; ] [ &#123;&#125; ] ms &#123;&#125;&quot;</span>, sql, sqlCost, warning);</span><br><span class="line"></span><br><span class="line">				<span class="keyword">if</span> (result <span class="keyword">instanceof</span> List) &#123;</span><br><span class="line">					log.info(<span class="string">&quot;Total: &#123;&#125;&quot;</span>, ((List) result).size());</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					log.info(<span class="string">&quot;Updates: &#123;&#125;&quot;</span>, result);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">				log.error(<span class="string">&quot;==&gt; 打印sql 日志异常 &#123;0&#125;&quot;</span>, e);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * plugin.</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> target</span></span><br><span class="line"><span class="comment">	 *            target</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> Object</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> Object <span class="title function_">plugin</span><span class="params">(Object target)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> Plugin.wrap(target, <span class="built_in">this</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * setProperties.</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> properties</span></span><br><span class="line"><span class="comment">	 *            properties</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setProperties</span><span class="params">(Properties properties)</span> &#123;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 获取完整的sql实体的信息.</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> boundSql</span></span><br><span class="line"><span class="comment">	 *            boundSql</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> configuration</span></span><br><span class="line"><span class="comment">	 *            configuration</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> 格式化后的 sql</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> String <span class="title function_">formatSql</span><span class="params">(BoundSql boundSql, Configuration configuration)</span> &#123;</span><br><span class="line">		<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> boundSql.getSql();</span><br><span class="line"></span><br><span class="line">		<span class="type">Object</span> <span class="variable">parameterObject</span> <span class="operator">=</span> boundSql.getParameterObject();</span><br><span class="line">		<span class="comment">// 输入sql字符串空判断</span></span><br><span class="line">		<span class="keyword">if</span> (StrUtil.isBlank(sql)) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (configuration == <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="type">TypeHandlerRegistry</span> <span class="variable">typeHandlerRegistry</span> <span class="operator">=</span> configuration.getTypeHandlerRegistry();</span><br><span class="line">		sql = beautifySql(sql);</span><br><span class="line">		List&lt;ParameterMapping&gt; parameterMappings = boundSql.getParameterMappings();</span><br><span class="line">		<span class="comment">// 参考mybatis 源码 DefaultParameterHandler</span></span><br><span class="line">		<span class="keyword">if</span> (parameterMappings != <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="keyword">for</span> (ParameterMapping parameterMapping : parameterMappings) &#123;</span><br><span class="line">				<span class="keyword">if</span> (parameterMapping.getMode() != ParameterMode.OUT) &#123;</span><br><span class="line">					Object value;</span><br><span class="line">					<span class="type">String</span> <span class="variable">propertyName</span> <span class="operator">=</span> parameterMapping.getProperty();</span><br><span class="line">					<span class="keyword">if</span> (boundSql.hasAdditionalParameter(propertyName)) &#123;</span><br><span class="line">						value = boundSql.getAdditionalParameter(propertyName);</span><br><span class="line">					&#125; <span class="keyword">else</span> <span class="keyword">if</span> (parameterObject == <span class="literal">null</span>) &#123;</span><br><span class="line">						value = <span class="literal">null</span>;</span><br><span class="line">					&#125; <span class="keyword">else</span> <span class="keyword">if</span> (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) &#123;</span><br><span class="line">						value = parameterObject;</span><br><span class="line">					&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">						<span class="type">MetaObject</span> <span class="variable">metaObject</span> <span class="operator">=</span> configuration.newMetaObject(parameterObject);</span><br><span class="line">						value = metaObject.getValue(propertyName);</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="type">String</span> <span class="variable">paramValueStr</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">					<span class="keyword">if</span> (value <span class="keyword">instanceof</span> String) &#123;</span><br><span class="line">						paramValueStr = <span class="string">&quot;&#x27;&quot;</span> + value + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">					&#125; <span class="keyword">else</span> <span class="keyword">if</span> (value <span class="keyword">instanceof</span> Date) &#123;</span><br><span class="line">						paramValueStr = <span class="string">&quot;&#x27;&quot;</span> + DATE_FORMAT_THREAD_LOCAL.get().format(value) + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">					&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">						paramValueStr = value + <span class="string">&quot;&quot;</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					sql = sql.replaceFirst(<span class="string">&quot;\\?&quot;</span>, paramValueStr);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> sql;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 美化 sql.</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> sql</span></span><br><span class="line"><span class="comment">	 *            sql</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> sql</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> String <span class="title function_">beautifySql</span><span class="params">(String sql)</span> &#123;</span><br><span class="line">		sql = sql.replaceAll(<span class="string">&quot;[\\s\n ]+&quot;</span>, <span class="string">&quot; &quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> sql;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 修改优先级.</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> 优先级</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getOrder</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> Ordered.HIGHEST_PRECEDENCE;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>如果配置顺序不正确, 例如 <code>mybatisPlusInterceptor</code> 在前, <code>mybatisPrintSqlInterceptor</code> 在后</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configuration&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;configuration&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapperLocations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis/**/mapping/**/*.xml&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;globalConfig&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;globalConfig&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;plugins&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;mybatisPlusInterceptor&quot;</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;mybatisPrintSqlInterceptor&quot;</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;pageInterceptor&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>会报错: <code>There is no getter for property named ‘delegate‘ in ‘class com.sun.proxy.$Proxy</code>,<br>原因: <strong><code>invocation.getTarget()</code>得到的StatementHandler是代理对象（在配置有多个mybatis拦截器的时候才会出现得到的是代理对象），而代理对象无法获取某些属性，所以才会提示如上错误</strong></p>
<h4 id="解决方法-1-修改拦截器顺序"><a href="#解决方法-1-修改拦截器顺序" class="headerlink" title="解决方法 1 修改拦截器顺序"></a>解决方法 1 修改拦截器顺序</h4><blockquote>
<p>其实这是不正确的, 因为打印 <code>sql</code> 插件应该最后执行</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configuration&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;configuration&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapperLocations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis/**/mapping/**/*.xml&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;globalConfig&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;globalConfig&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;plugins&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;mybatisPrintSqlInterceptor&quot;</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;mybatisPlusInterceptor&quot;</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;pageInterceptor&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="解决方法-2-获取实际对象"><a href="#解决方法-2-获取实际对象" class="headerlink" title="解决方法 2 获取实际对象"></a>解决方法 2 获取实际对象</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.framework.mybatis.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.parameter.ParameterHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.statement.StatementHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.BoundSql;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.MappedStatement;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ParameterMapping;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ParameterMode;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.plugin.Interceptor;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.plugin.Intercepts;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.plugin.Invocation;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.plugin.Plugin;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.plugin.Signature;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.MetaObject;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.SystemMetaObject;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.ResultHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.type.TypeHandlerRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.Ordered;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.ReflectionUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.StrUtil;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 打印 sql 拦截器</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Intercepts(&#123;</span></span><br><span class="line"><span class="meta">		@Signature(type = StatementHandler.class, method = &quot;query&quot;, args = &#123; Statement.class, ResultHandler.class &#125;),</span></span><br><span class="line"><span class="meta">		@Signature(type = StatementHandler.class, method = &quot;update&quot;, args = &#123; Statement.class &#125;),</span></span><br><span class="line"><span class="meta">		@Signature(type = StatementHandler.class, method = &quot;batch&quot;, args = &#123; Statement.class &#125;) &#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPrintSqlInterceptor</span> <span class="keyword">implements</span> <span class="title class_">Interceptor</span>, Ordered &#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * mybatis 配置对象.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">Configuration</span> <span class="variable">configuration</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 时间格式化.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ThreadLocal&lt;SimpleDateFormat&gt; DATE_FORMAT_THREAD_LOCAL = ThreadLocal</span><br><span class="line">			.withInitial(() -&gt; <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss.SSS&quot;</span>));</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 拦截器主方法.</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> invocation</span></span><br><span class="line"><span class="comment">	 *            invocation</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> sql 执行结果</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> Throwable</span></span><br><span class="line"><span class="comment">	 *             Throwable</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@SuppressWarnings(&quot;rawtypes&quot;)</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> Object <span class="title function_">intercept</span><span class="params">(Invocation invocation)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">		<span class="type">long</span> <span class="variable">startTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">		<span class="type">Object</span> <span class="variable">result</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			result = invocation.proceed();</span><br><span class="line">			<span class="keyword">return</span> result;</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				<span class="type">long</span> <span class="variable">endTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">				<span class="type">long</span> <span class="variable">sqlCost</span> <span class="operator">=</span> endTime - startTime;</span><br><span class="line">				<span class="type">StatementHandler</span> <span class="variable">statementHandler</span> <span class="operator">=</span> getRealTarget(invocation.getTarget());</span><br><span class="line">				<span class="type">BoundSql</span> <span class="variable">boundSql</span> <span class="operator">=</span> statementHandler.getBoundSql();</span><br><span class="line">				<span class="keyword">if</span> (configuration == <span class="literal">null</span>) &#123;</span><br><span class="line">					<span class="comment">// final DefaultParameterHandler parameterHandler = (DefaultParameterHandler)</span></span><br><span class="line">					<span class="comment">// statementHandler.getParameterHandler();</span></span><br><span class="line">					<span class="keyword">final</span> <span class="type">ParameterHandler</span> <span class="variable">parameterHandler</span> <span class="operator">=</span> statementHandler.getParameterHandler();</span><br><span class="line">					<span class="type">Field</span> <span class="variable">configurationField</span> <span class="operator">=</span> ReflectionUtils.findField(parameterHandler.getClass(), <span class="string">&quot;configuration&quot;</span>);</span><br><span class="line">					ReflectionUtils.makeAccessible(configurationField);</span><br><span class="line">					<span class="built_in">this</span>.configuration = (Configuration) configurationField.get(parameterHandler);</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">				<span class="comment">// 输出 mapper id</span></span><br><span class="line">				<span class="type">MetaObject</span> <span class="variable">metaObject</span> <span class="operator">=</span> SystemMetaObject.forObject(statementHandler);</span><br><span class="line">				<span class="type">MappedStatement</span> <span class="variable">ms</span> <span class="operator">=</span> (MappedStatement) metaObject.getValue(<span class="string">&quot;delegate.mappedStatement&quot;</span>);</span><br><span class="line">				<span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> ms.getId();</span><br><span class="line"></span><br><span class="line">				<span class="comment">// 替换参数格式化Sql语句，去除换行符</span></span><br><span class="line">				<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> formatSql(boundSql, configuration).concat(<span class="string">&quot;;&quot;</span>);</span><br><span class="line">				<span class="type">String</span> <span class="variable">warning</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">				<span class="comment">// CHECKSTYLE:OFF</span></span><br><span class="line">				<span class="keyword">if</span> (sqlCost &gt; <span class="number">2000</span>) &#123;</span><br><span class="line">					warning = <span class="string">&quot;[耗时过长]&quot;</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="comment">// CHECKSTYLE:ON</span></span><br><span class="line"></span><br><span class="line">				<span class="comment">// 开始输出 sql</span></span><br><span class="line">				log.info(<span class="string">&quot;map-id: &#123;&#125;&quot;</span>, id);</span><br><span class="line">				log.info(<span class="string">&quot;[ &#123;&#125; ] [ &#123;&#125; ] ms &#123;&#125;&quot;</span>, sql, sqlCost, warning);</span><br><span class="line"></span><br><span class="line">				<span class="keyword">if</span> (result <span class="keyword">instanceof</span> List) &#123;</span><br><span class="line">					log.info(<span class="string">&quot;Total: &#123;&#125;&quot;</span>, ((List) result).size());</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					log.info(<span class="string">&quot;Updates: &#123;&#125;&quot;</span>, result);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">				log.error(<span class="string">&quot;==&gt; 打印sql 日志异常 &#123;0&#125;&quot;</span>, e);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * &lt;p&gt;</span></span><br><span class="line"><span class="comment">	 * 获取真正的对象（非代理对象）</span></span><br><span class="line"><span class="comment">	 * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * 解决报错:</span></span><br><span class="line"><span class="comment">	 * &lt;code&gt;There is no getter for property named &#x27;delegate&#x27; in &#x27;class com.sun.proxy.$Proxy199&#x27;&lt;/code&gt;</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> target</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; T <span class="title function_">getRealTarget</span><span class="params">(Object target)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (Proxy.isProxyClass(target.getClass())) &#123;</span><br><span class="line">			<span class="type">MetaObject</span> <span class="variable">metaObject</span> <span class="operator">=</span> SystemMetaObject.forObject(target);</span><br><span class="line">			<span class="keyword">return</span> getRealTarget(metaObject.getValue(<span class="string">&quot;h.target&quot;</span>));</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> (T) target;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * plugin.</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> target</span></span><br><span class="line"><span class="comment">	 *            target</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> Object</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> Object <span class="title function_">plugin</span><span class="params">(Object target)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> Plugin.wrap(target, <span class="built_in">this</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * setProperties.</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> properties</span></span><br><span class="line"><span class="comment">	 *            properties</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setProperties</span><span class="params">(Properties properties)</span> &#123;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 获取完整的sql实体的信息.</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> boundSql</span></span><br><span class="line"><span class="comment">	 *            boundSql</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> configuration</span></span><br><span class="line"><span class="comment">	 *            configuration</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> 格式化后的 sql</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> String <span class="title function_">formatSql</span><span class="params">(BoundSql boundSql, Configuration configuration)</span> &#123;</span><br><span class="line">		<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> boundSql.getSql();</span><br><span class="line"></span><br><span class="line">		<span class="type">Object</span> <span class="variable">parameterObject</span> <span class="operator">=</span> boundSql.getParameterObject();</span><br><span class="line">		<span class="comment">// 输入sql字符串空判断</span></span><br><span class="line">		<span class="keyword">if</span> (StrUtil.isBlank(sql)) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (configuration == <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="type">TypeHandlerRegistry</span> <span class="variable">typeHandlerRegistry</span> <span class="operator">=</span> configuration.getTypeHandlerRegistry();</span><br><span class="line">		sql = beautifySql(sql);</span><br><span class="line">		List&lt;ParameterMapping&gt; parameterMappings = boundSql.getParameterMappings();</span><br><span class="line">		<span class="comment">// 参考mybatis 源码 DefaultParameterHandler</span></span><br><span class="line">		<span class="keyword">if</span> (parameterMappings != <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="keyword">for</span> (ParameterMapping parameterMapping : parameterMappings) &#123;</span><br><span class="line">				<span class="keyword">if</span> (parameterMapping.getMode() != ParameterMode.OUT) &#123;</span><br><span class="line">					Object value;</span><br><span class="line">					<span class="type">String</span> <span class="variable">propertyName</span> <span class="operator">=</span> parameterMapping.getProperty();</span><br><span class="line">					<span class="keyword">if</span> (boundSql.hasAdditionalParameter(propertyName)) &#123;</span><br><span class="line">						value = boundSql.getAdditionalParameter(propertyName);</span><br><span class="line">					&#125; <span class="keyword">else</span> <span class="keyword">if</span> (parameterObject == <span class="literal">null</span>) &#123;</span><br><span class="line">						value = <span class="literal">null</span>;</span><br><span class="line">					&#125; <span class="keyword">else</span> <span class="keyword">if</span> (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) &#123;</span><br><span class="line">						value = parameterObject;</span><br><span class="line">					&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">						<span class="type">MetaObject</span> <span class="variable">metaObject</span> <span class="operator">=</span> configuration.newMetaObject(parameterObject);</span><br><span class="line">						value = metaObject.getValue(propertyName);</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="type">String</span> <span class="variable">paramValueStr</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">					<span class="keyword">if</span> (value <span class="keyword">instanceof</span> String) &#123;</span><br><span class="line">						paramValueStr = <span class="string">&quot;&#x27;&quot;</span> + value + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">					&#125; <span class="keyword">else</span> <span class="keyword">if</span> (value <span class="keyword">instanceof</span> Date) &#123;</span><br><span class="line">						paramValueStr = <span class="string">&quot;&#x27;&quot;</span> + DATE_FORMAT_THREAD_LOCAL.get().format(value) + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">					&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">						paramValueStr = value + <span class="string">&quot;&quot;</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					sql = sql.replaceFirst(<span class="string">&quot;\\?&quot;</span>, paramValueStr);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> sql;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 美化 sql.</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> sql</span></span><br><span class="line"><span class="comment">	 *            sql</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> sql</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> String <span class="title function_">beautifySql</span><span class="params">(String sql)</span> &#123;</span><br><span class="line">		sql = sql.replaceAll(<span class="string">&quot;[\\s\n ]+&quot;</span>, <span class="string">&quot; &quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> sql;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 修改优先级.</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> 优先级</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getOrder</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> Ordered.HIGHEST_PRECEDENCE;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://blog.csdn.net/u011602668/article/details/128735771">记录mybatis插件奇怪报错问题There is no getter for property named ‘delegate‘ in ‘class com.sun.proxy.$Proxy的排查</a><br><a href="http://www.asfx.xyz/p/72bec2d52df744e4bfbdb08b1d312daf">mybatis拦截器提示There is no getter for property named ‘delegate’ in ‘class com.sun.proxy.$Proxy199’</a></p>
]]></content>
      <categories>
        <category>java</category>
        <category>ssm</category>
        <category>ssm 整合</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>ssm</tag>
        <tag>ssm 整合</tag>
      </tags>
  </entry>
  <entry>
    <title>java 设计模式之 代理模式</title>
    <url>/2024/08/31/java-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B-%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>设计模式之禅: <a href="https://item.jd.com/10095020247922.html">https://item.jd.com/10095020247922.html</a></p>
<p><a href="https://www.bilibili.com/video/BV1G4411c7N4/?p=91">尚硅谷Java设计模式</a></p>
<h1 id="静态代理"><a href="#静态代理" class="headerlink" title="静态代理"></a>静态代理</h1><h2 id="SysdictService"><a href="#SysdictService" class="headerlink" title="SysdictService"></a>SysdictService</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.bzrj.mybatis.proxy.staticproxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">SysdictService</span> &#123;</span><br><span class="line"></span><br><span class="line">    String <span class="title function_">selectName</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="SysdictServiceImpl"><a href="#SysdictServiceImpl" class="headerlink" title="SysdictServiceImpl"></a>SysdictServiceImpl</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.bzrj.mybatis.proxy.staticproxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysdictServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">SysdictService</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">selectName</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;select name&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;system_setting&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="SysdictServiceProxy"><a href="#SysdictServiceProxy" class="headerlink" title="SysdictServiceProxy"></a>SysdictServiceProxy</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.bzrj.mybatis.proxy.staticproxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysdictServiceProxy</span> <span class="keyword">implements</span> <span class="title class_">SysdictService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> SysdictService target;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">SysdictServiceProxy</span><span class="params">(SysdictService target)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.target = target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">selectName</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;pre action&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> target.selectName();</span><br><span class="line">        System.out.println(<span class="string">&quot;post action&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="test"><a href="#test" class="headerlink" title="test"></a>test</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.bzrj.mybatis.proxy.staticproxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StaticProxyTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">staticTest</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">SysdictService</span> <span class="variable">target</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysdictServiceImpl</span>();</span><br><span class="line">        <span class="type">SysdictServiceProxy</span> <span class="variable">proxy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysdictServiceProxy</span>(target);</span><br><span class="line">        <span class="type">String</span> <span class="variable">ret</span> <span class="operator">=</span> proxy.selectName();</span><br><span class="line">        System.out.println(<span class="string">&quot;ret:&quot;</span> + ret);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pre action</span><br><span class="line">select name</span><br><span class="line">post action</span><br><span class="line">ret:system_setting</span><br></pre></td></tr></table></figure>

<h2 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h2><p>优点: 在不修改目标对象的功能前提下,能通过代理对象对目标功能扩展<br>缺点: 需要与被代理对象实现相同的接口,需要同事维护被代理对象和代理对象</p>
<h1 id="jdk-代理"><a href="#jdk-代理" class="headerlink" title="jdk 代理"></a>jdk 代理</h1><h2 id="SysdictServiceProxyFactory"><a href="#SysdictServiceProxyFactory" class="headerlink" title="SysdictServiceProxyFactory"></a>SysdictServiceProxyFactory</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.bzrj.mybatis.proxy.jdkproxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysdictServiceProxyFactory</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Object target;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">SysdictServiceProxyFactory</span><span class="params">(Object target)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.target = target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getProxyInstance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Proxy.newProxyInstance(target.getClass().getClassLoader(), target.getClass().getInterfaces(), (proxy, method, args) -&gt; &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;pre action&quot;</span>);</span><br><span class="line">            <span class="type">Object</span> <span class="variable">ret</span> <span class="operator">=</span> method.invoke(target, args);</span><br><span class="line">            System.out.println(<span class="string">&quot;post action&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> ret;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><blockquote>
<p><code>SysdictService</code> 与 <code>SysdictServiceImpl</code> 和上面的一样</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.bzrj.mybatis.proxy.jdkproxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JdkProxyTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">jdkTest</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">SysdictService</span> <span class="variable">target</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysdictServiceImpl</span>();</span><br><span class="line">        <span class="type">SysdictServiceProxyFactory</span> <span class="variable">proxyFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysdictServiceProxyFactory</span>(target);</span><br><span class="line">        <span class="type">SysdictService</span> <span class="variable">proxy</span> <span class="operator">=</span> (SysdictService) proxyFactory.getProxyInstance();</span><br><span class="line">        <span class="type">String</span> <span class="variable">ret</span> <span class="operator">=</span> proxy.selectName();</span><br><span class="line">        System.out.println(<span class="string">&quot;ret:&quot;</span> + ret);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><p>jdk代理要求被代理对象必须实现一个接口</p>
<h1 id="cglib"><a href="#cglib" class="headerlink" title="cglib"></a>cglib</h1><h2 id="pom"><a href="#pom" class="headerlink" title="pom"></a>pom</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cglib<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cglib<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="SysdictServiceImpl-1"><a href="#SysdictServiceImpl-1" class="headerlink" title="SysdictServiceImpl"></a>SysdictServiceImpl</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.bzrj.mybatis.proxy.cglibproxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysdictServiceImpl</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">selectName</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;select name&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;system_setting&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="SysdictServiceProxyFactory-1"><a href="#SysdictServiceProxyFactory-1" class="headerlink" title="SysdictServiceProxyFactory"></a>SysdictServiceProxyFactory</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.bzrj.mybatis.proxy.cglibproxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> net.sf.cglib.proxy.Enhancer;</span><br><span class="line"><span class="keyword">import</span> net.sf.cglib.proxy.MethodInterceptor;</span><br><span class="line"><span class="keyword">import</span> net.sf.cglib.proxy.MethodProxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysdictServiceProxyFactory</span> <span class="keyword">implements</span> <span class="title class_">MethodInterceptor</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Object target;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">SysdictServiceProxyFactory</span><span class="params">(Object target)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.target = target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getProxyInstance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 1. 创建工具类</span></span><br><span class="line">        <span class="type">Enhancer</span> <span class="variable">enhancer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Enhancer</span>();</span><br><span class="line">        <span class="comment">// 2. 设置父类</span></span><br><span class="line">        enhancer.setSuperclass(target.getClass());</span><br><span class="line">        <span class="comment">// 3. 设置回调函数</span></span><br><span class="line">        enhancer.setCallback(<span class="built_in">this</span>);</span><br><span class="line">        <span class="comment">// 4. 创建子类对象, 即代理对象</span></span><br><span class="line">        <span class="keyword">return</span> enhancer.create();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">intercept</span><span class="params">(Object o, Method method, Object[] args, MethodProxy methodProxy)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;pre action&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">ret</span> <span class="operator">=</span> method.invoke(target, args);</span><br><span class="line">        System.out.println(<span class="string">&quot;post action&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="test-1"><a href="#test-1" class="headerlink" title="test"></a>test</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.bzrj.mybatis.proxy.cglibproxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CglibProxyTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cgligTest</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SysdictServiceImpl</span> <span class="variable">target</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysdictServiceImpl</span>();</span><br><span class="line">        <span class="type">SysdictServiceProxyFactory</span> <span class="variable">proxyFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysdictServiceProxyFactory</span>(target);</span><br><span class="line">        <span class="type">SysdictServiceImpl</span> <span class="variable">proxy</span> <span class="operator">=</span> (SysdictServiceImpl) proxyFactory.getProxyInstance();</span><br><span class="line">        <span class="type">String</span> <span class="variable">ret</span> <span class="operator">=</span> proxy.selectName();</span><br><span class="line">        System.out.println(<span class="string">&quot;ret:&quot;</span> + ret);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ol>
<li><code>cglib</code> 不能代理 <code>final</code> 修饰的 <code>class</code></li>
<li><code>cglib</code> 不能拦截 <code>final</code> 或 <code>static</code> 修饰的方法</li>
</ol>
]]></content>
      <categories>
        <category>java</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title>spring 事务管理</title>
    <url>/2024/09/01/spring-%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h1 id="声明式事务配置方式"><a href="#声明式事务配置方式" class="headerlink" title="声明式事务配置方式"></a>声明式事务配置方式</h1><h2 id="spring-配置"><a href="#spring-配置" class="headerlink" title="spring 配置"></a>spring 配置</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 配置 druid数据源 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span> <span class="attr">init-method</span>=<span class="string">&quot;init&quot;</span> <span class="attr">destroy-method</span>=<span class="string">&quot;close&quot;</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 基本属性 url、user、password --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.jdbcUrl&#125;&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.user&#125;&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 配置初始化大小、最小、最大 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minIdle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxActive&quot;</span> <span class="attr">value</span>=<span class="string">&quot;20&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 配置获取连接等待超时的时间 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxWait&quot;</span> <span class="attr">value</span>=<span class="string">&quot;60000&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;timeBetweenEvictionRunsMillis&quot;</span> <span class="attr">value</span>=<span class="string">&quot;60000&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minEvictableIdleTimeMillis&quot;</span> <span class="attr">value</span>=<span class="string">&quot;300000&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;validationQuery&quot;</span> <span class="attr">value</span>=<span class="string">&quot;SELECT &#x27;x&#x27;&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;testWhileIdle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;testOnBorrow&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;testOnReturn&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 打开PSCache，并且指定每个连接上PSCache的大小 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;poolPreparedStatements&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolPreparedStatementPerConnectionSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;20&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;filters&quot;</span> <span class="attr">value</span>=<span class="string">&quot;stat&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- SqlSessionFactory Config --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configuration&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;configuration&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapperLocations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis/**/mapping/**/*.xml&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;globalConfig&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;globalConfig&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;plugins&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;mybatisPrintSqlInterceptor&quot;</span> /&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;pageInterceptor&quot;</span> /&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;mybatisPlusInterceptor&quot;</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- mybatis plus 配置 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;configuration&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.core.MybatisConfiguration&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cacheEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;globalConfig&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.core.config.GlobalConfig&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dbConfig&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dbConfig&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dbConfig&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.core.config.GlobalConfig.DbConfig&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;idType&quot;</span> <span class="attr">value</span>=<span class="string">&quot;AUTO&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;logicDeleteField&quot;</span> <span class="attr">value</span>=<span class="string">&quot;deleted&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;logicDeleteValue&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;logicNotDeleteValue&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- mybatis plus 自带的插件配置 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;mybatisPlusInterceptor&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;interceptors&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 乐观锁配置 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.extension.plugins.inner.OptimisticLockerInnerInterceptor&quot;</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- mybatis 打印 sql 拦截器 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;mybatisPrintSqlInterceptor&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.laolang.jx.framework.mybatis.interceptor.MybatisPrintSqlInterceptor&quot;</span> /&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- pagehelper 拦截器 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;pageInterceptor&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.github.pagehelper.PageInterceptor&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 包扫描 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.laolang.jx.**.mapper&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 定义事务管理器 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 声明式事务 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="logic"><a href="#logic" class="headerlink" title="logic"></a>logic</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.logic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Lists;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.framework.common.consts.CommonBizCode;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.framework.common.exception.BusinessException;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.entity.SysDictData;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.req.SysDictTypeListReq;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.rsp.SysDictTypeListRsp;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.rsp.SysDictTypeListRsp.SysDictTypeListRspBean;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.service.SysDictDataService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.StrUtil;</span><br><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Transactional(readOnly = true)</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysDictLogic</span> &#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> SysDictDataService sysDictDataService;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line">	<span class="keyword">public</span> SysDictTypeListRsp <span class="title function_">list</span><span class="params">(SysDictTypeListReq req)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (StrUtil.equals(<span class="string">&quot;5&quot;</span>, req.getStatus())) &#123;</span><br><span class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessException</span>(CommonBizCode.FAILED.getCode(), <span class="string">&quot;status error&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="type">SysDictData</span> <span class="variable">sysDictData</span> <span class="operator">=</span> sysDictDataService.getById(req.getId());</span><br><span class="line">		sysDictData.setStatus(req.getStatus());</span><br><span class="line">		sysDictDataService.updateById(sysDictData);</span><br><span class="line"></span><br><span class="line">		<span class="type">SysDictTypeListRsp</span> <span class="variable">rsp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysDictTypeListRsp</span>();</span><br><span class="line">		List&lt;SysDictTypeListRsp.SysDictTypeListRspBean&gt; list = Lists.newArrayList();</span><br><span class="line">		rsp.setList(list);</span><br><span class="line">		<span class="type">SysDictTypeListRspBean</span> <span class="variable">bean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysDictTypeListRsp</span>.SysDictTypeListRspBean();</span><br><span class="line">		bean.setId(<span class="number">1001L</span>);</span><br><span class="line">		bean.setGroupCode(<span class="string">&quot;system&quot;</span>);</span><br><span class="line">		list.add(bean);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> rsp;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="aop-tx-命名空间配置"><a href="#aop-tx-命名空间配置" class="headerlink" title="aop&#x2F;tx 命名空间配置"></a>aop&#x2F;tx 命名空间配置</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span> <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 配置 druid数据源 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span> <span class="attr">init-method</span>=<span class="string">&quot;init&quot;</span> <span class="attr">destroy-method</span>=<span class="string">&quot;close&quot;</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 基本属性 url、user、password --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.jdbcUrl&#125;&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.user&#125;&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 配置初始化大小、最小、最大 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minIdle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxActive&quot;</span> <span class="attr">value</span>=<span class="string">&quot;20&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 配置获取连接等待超时的时间 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxWait&quot;</span> <span class="attr">value</span>=<span class="string">&quot;60000&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;timeBetweenEvictionRunsMillis&quot;</span> <span class="attr">value</span>=<span class="string">&quot;60000&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minEvictableIdleTimeMillis&quot;</span> <span class="attr">value</span>=<span class="string">&quot;300000&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;validationQuery&quot;</span> <span class="attr">value</span>=<span class="string">&quot;SELECT &#x27;x&#x27;&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;testWhileIdle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;testOnBorrow&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;testOnReturn&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 打开PSCache，并且指定每个连接上PSCache的大小 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;poolPreparedStatements&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolPreparedStatementPerConnectionSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;20&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;filters&quot;</span> <span class="attr">value</span>=<span class="string">&quot;stat&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- SqlSessionFactory Config --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configuration&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;configuration&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapperLocations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis/**/mapping/**/*.xml&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;globalConfig&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;globalConfig&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;plugins&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;mybatisPrintSqlInterceptor&quot;</span> /&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;pageInterceptor&quot;</span> /&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;mybatisPlusInterceptor&quot;</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- mybatis plus 配置 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;configuration&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.core.MybatisConfiguration&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cacheEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;globalConfig&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.core.config.GlobalConfig&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dbConfig&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dbConfig&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dbConfig&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.core.config.GlobalConfig.DbConfig&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;idType&quot;</span> <span class="attr">value</span>=<span class="string">&quot;AUTO&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;logicDeleteField&quot;</span> <span class="attr">value</span>=<span class="string">&quot;deleted&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;logicDeleteValue&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;logicNotDeleteValue&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- mybatis plus 自带的插件配置 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;mybatisPlusInterceptor&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;interceptors&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 乐观锁配置 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.extension.plugins.inner.OptimisticLockerInnerInterceptor&quot;</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- mybatis 打印 sql 拦截器 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;mybatisPrintSqlInterceptor&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.laolang.jx.framework.mybatis.interceptor.MybatisPrintSqlInterceptor&quot;</span> /&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- pagehelper 拦截器 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;pageInterceptor&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.github.pagehelper.PageInterceptor&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 包扫描 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.laolang.jx.**.mapper&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 定义事务管理器 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 配置式事务 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">expression</span>=<span class="string">&quot;execution(public * com.laolang.jx.module.system..logic.*.* (..))&quot;</span> <span class="attr">id</span>=<span class="string">&quot;logicPoint&quot;</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;logicPoint&quot;</span> <span class="attr">advice-ref</span>=<span class="string">&quot;txAdvice&quot;</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;list&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span> <span class="attr">rollback-for</span>=<span class="string">&quot;Exception&quot;</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>java</category>
        <category>ssm</category>
        <category>spring</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>spring</tag>
        <tag>ssm</tag>
      </tags>
  </entry>
  <entry>
    <title>java 微项目</title>
    <url>/2024/09/12/java-micro-project/</url>
    <content><![CDATA[<h1 id="京西"><a href="#京西" class="headerlink" title="京西"></a>京西</h1><h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><h3 id="小程序端"><a href="#小程序端" class="headerlink" title="小程序端"></a>小程序端</h3><p><a href="https://www.bilibili.com/video/BV1LF4m1E7kB">尚硅谷微信小程序开发教程，2024最新版微信小程序项目实战！</a><br><a href="https://www.bilibili.com/video/BV1Bp4y1379L">黑马程序员前端项目uniapp小兔鲜儿微信小程序项目视频教程，基于Vue3+Ts+Pinia+uni-app的最新组合技术栈开发的电商业务全流程</a></p>
<h3 id="pc-端"><a href="#pc-端" class="headerlink" title="pc 端"></a>pc 端</h3><p><a href="https://www.bilibili.com/video/BV1tN4y197pJ">【完结】小兔仙vue3.0电商实战项目</a></p>
<h3 id="h5-端"><a href="#h5-端" class="headerlink" title="h5 端"></a>h5 端</h3><p><a href="https://www.bilibili.com/video/BV1PL4y1x7cz">Vue+VantUI严选电商项目移动端实战项目</a><br><a href="https://vant-ui.github.io/vant/#/zh-CN">vant ui 官方文档</a></p>
<h1 id="dbmfx"><a href="#dbmfx" class="headerlink" title="dbmfx"></a>dbmfx</h1><p><a href="https://space.bilibili.com/5096022/channel/seriesdetail?sid=394169">javafx 视频教程 极其完整</a><br><a href="https://www.bilibili.com/video/BV1H14y1g7ji">JavaFx 系列教程 2024版 整合SpringBoot3+MyBaitsPlus</a></p>
<h1 id="ghost-book"><a href="#ghost-book" class="headerlink" title="ghost book"></a>ghost book</h1><p><a href="https://layui.dev/">layui 官网</a></p>
<p>chokidar 监控文件变化</p>
<p><a href="https://github.com/paulmillr/chokidar">https://github.com/paulmillr/chokidar</a><br><a href="https://github.com/poppinss/chokidar-ts">https://github.com/poppinss/chokidar-ts</a></p>
<p><a href="https://juejin.cn/post/7000262974430511117">Node、node-watch、Chokidar实现文件监听封装思路解析</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/545161275">来，体会一下npm包的发布、更新管理、使用——完整教程🎈</a></p>
<p><a href="https://cloud.tencent.com/developer/article/2013675">Java实现监听文件变化的三种方法，推荐第三种</a></p>
<p><a href="https://juejin.cn/post/7341592148306739209">使用 FlexSearch 实现本地全文搜索</a></p>
<p><a href="https://www.thosefree.com/fuse-js">Fuse.js - 免费开源、小巧无依赖的模糊搜索 JavaScript 工具库</a></p>
<p><a href="https://www.cnblogs.com/ae6623/p/4416473.html">【技术贴】解决使用maven jetty启动后无法加载修改过后的静态资源</a></p>
]]></content>
      <categories>
        <category>java</category>
        <category>project</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>project</tag>
      </tags>
  </entry>
  <entry>
    <title>javafx 001 hello world</title>
    <url>/2024/09/14/javafx-001-hello-world/</url>
    <content><![CDATA[<h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><p><a href="https://github.com/ghost-hello-project/javafx-study/tree/main/fx-hello">https://github.com/ghost-hello-project/javafx-study/tree/main/fx-hello</a></p>
<h1 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.laolang.fx<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fx-hello<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven-surefire-plugin.version</span>&gt;</span>2.22.2<span class="tag">&lt;/<span class="name">maven-surefire-plugin.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven-compiler-plugin.version</span>&gt;</span>3.11.0<span class="tag">&lt;/<span class="name">maven-compiler-plugin.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javafx-maven-plugin.version</span>&gt;</span>8.8.3<span class="tag">&lt;/<span class="name">javafx-maven-plugin.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- test --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">testng.version</span>&gt;</span>6.14.3<span class="tag">&lt;/<span class="name">testng.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- log --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">logback.version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">logback.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- tool --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hutool.version</span>&gt;</span>5.8.11<span class="tag">&lt;/<span class="name">hutool.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">vavr.version</span>&gt;</span>0.10.4<span class="tag">&lt;/<span class="name">vavr.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapstruct.version</span>&gt;</span>1.4.2.Final<span class="tag">&lt;/<span class="name">mapstruct.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">guava.version</span>&gt;</span>23.0<span class="tag">&lt;/<span class="name">guava.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">okhttp.version</span>&gt;</span>4.9.0<span class="tag">&lt;/<span class="name">okhttp.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commons-lang3.version</span>&gt;</span>3.15.0<span class="tag">&lt;/<span class="name">commons-lang3.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">lombok.version</span>&gt;</span>1.18.30<span class="tag">&lt;/<span class="name">lombok.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- testng --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.testng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>testng<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;testng.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- log --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;logback.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- tool --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;hutool.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.vavr<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>vavr<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;vavr.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mapstruct<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapstruct<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mapstruct.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mapstruct<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapstruct-jdk8<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mapstruct.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mapstruct<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapstruct-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mapstruct.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.guava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guava<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;guava.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-lang3.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;lombok.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-compiler-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;maven.compiler.source&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;maven.compiler.target&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>$&#123;project.build.sourceEncoding&#125;<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-surefire-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--测试失败后，是否忽略并继续测试--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">testFailureIgnore</span>&gt;</span>true<span class="tag">&lt;/<span class="name">testFailureIgnore</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">argLine</span>&gt;</span></span><br><span class="line">                        -Dfile.encoding=UTF-8</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">argLine</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">suiteXmlFiles</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--该文件位于工程根目录时，直接填写名字，其它位置要加上路径--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">suiteXmlFile</span>&gt;</span>testng.xml<span class="tag">&lt;/<span class="name">suiteXmlFile</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">suiteXmlFiles</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                打包命令: mvn jfx:native</span></span><br><span class="line"><span class="comment">             --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.zenjava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javafx-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;javafx-maven-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.laolang.fx.FxHelloApplication<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">appName</span>&gt;</span>FxHello<span class="tag">&lt;/<span class="name">appName</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">vendor</span>&gt;</span>ghost<span class="tag">&lt;/<span class="name">vendor</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="FxHelloApplication"><a href="#FxHelloApplication" class="headerlink" title="FxHelloApplication"></a>FxHelloApplication</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.fx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javafx.application.Application;</span><br><span class="line"><span class="keyword">import</span> javafx.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> javafx.event.EventHandler;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.Scene;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.control.Alert;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.control.Button;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.layout.StackPane;</span><br><span class="line"><span class="keyword">import</span> javafx.stage.Stage;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FxHelloApplication</span> <span class="keyword">extends</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;fx hello is running...&quot;</span>);</span><br><span class="line">        launch(args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">(Stage primaryStage)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>();</span><br><span class="line">        btn.setText(<span class="string">&quot;Say &#x27;Hello World&#x27;&quot;</span>);</span><br><span class="line">        btn.setOnAction(<span class="keyword">new</span> <span class="title class_">EventHandler</span>&lt;ActionEvent&gt;() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handle</span><span class="params">(ActionEvent event)</span> &#123;</span><br><span class="line">                <span class="type">Alert</span> <span class="variable">alert</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Alert</span>(Alert.AlertType.INFORMATION);</span><br><span class="line">                alert.setTitle(<span class="string">&quot;Information Dialog&quot;</span>);</span><br><span class="line">                alert.setHeaderText(<span class="string">&quot;Look, an Information Dialog&quot;</span>);</span><br><span class="line">                alert.setContentText(<span class="string">&quot;I have a great message for you!&quot;</span>);</span><br><span class="line"></span><br><span class="line">                alert.showAndWait();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="type">StackPane</span> <span class="variable">root</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StackPane</span>();</span><br><span class="line">        root.getChildren().add(btn);</span><br><span class="line"></span><br><span class="line">        <span class="type">Scene</span> <span class="variable">scene</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scene</span>(root, <span class="number">300</span>, <span class="number">250</span>);</span><br><span class="line"></span><br><span class="line">        primaryStage.setTitle(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">        primaryStage.setScene(scene);</span><br><span class="line">        primaryStage.show();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h1 id="启动效果"><a href="#启动效果" class="headerlink" title="启动效果"></a>启动效果</h1><p><img src="/images/2024-09-14-javafx-001-hello-world/001.png"></p>
<h1 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h1><p>执行 <code>mvn jfx:native</code> 即可在 <code>target/jfx/native/FxHello</code> 生成本地的绿色包</p>
<p><img src="/images/2024-09-14-javafx-001-hello-world/002.png"></p>
]]></content>
      <categories>
        <category>java</category>
        <category>javafx</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>javafx</tag>
      </tags>
  </entry>
  <entry>
    <title>java 多线程基本使用</title>
    <url>/2024/09/12/juc-base/</url>
    <content><![CDATA[<h1 id="创建和运行线程"><a href="#创建和运行线程" class="headerlink" title="创建和运行线程"></a>创建和运行线程</h1><h2 id="直接使用-Thread"><a href="#直接使用-Thread" class="headerlink" title="直接使用 Thread"></a>直接使用 Thread</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.StrUtil;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JucHelloApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;juc hello is running...&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="string">&quot;t1&quot;</span>) &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        TimeUnit.SECONDS.sleep(<span class="number">5</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                    &#125;</span><br><span class="line">                    log.info(StrUtil.format(<span class="string">&quot;thread &#123;&#125; is running...&quot;</span>), Thread.currentThread().getName());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        t1.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="继承-Thread"><a href="#继承-Thread" class="headerlink" title="继承 Thread"></a>继承 Thread</h2><div class="tabs" id=""><ul class="nav-tabs"><button type="button" class="tab  active" data-href="-1">SimpleThread</button><button type="button" class="tab " data-href="-2">JucHelloApplication</button></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.StrUtil;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SimpleThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">SimpleThread</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                TimeUnit.SECONDS.sleep(<span class="number">5</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(StrUtil.format(<span class="string">&quot;thread &#123;&#125; is running...&quot;</span>), Thread.currentThread().getName());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="-2"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JucHelloApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;juc hello is running...&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleThread</span>(<span class="string">&quot;t1&quot;</span>);</span><br><span class="line">        t1.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>

<h2 id="实现-Runnable"><a href="#实现-Runnable" class="headerlink" title="实现 Runnable"></a>实现 Runnable</h2><div class="tabs" id=""><ul class="nav-tabs"><button type="button" class="tab  active" data-href="-1">SimpleThread</button><button type="button" class="tab " data-href="-2">JucHelloApplication</button></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.StrUtil;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SimpleThread</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                TimeUnit.SECONDS.sleep(<span class="number">5</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(StrUtil.format(<span class="string">&quot;thread &#123;&#125; is running...&quot;</span>), Thread.currentThread().getName());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="-2"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JucHelloApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;juc hello is running...&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">SimpleThread</span>(), <span class="string">&quot;t1&quot;</span>);</span><br><span class="line">        t1.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>

<h2 id="Callable-与-Future"><a href="#Callable-与-Future" class="headerlink" title="Callable 与 Future"></a>Callable 与 Future</h2><h3 id="FutureTask"><a href="#FutureTask" class="headerlink" title="FutureTask"></a>FutureTask</h3><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><div class="tabs" id=""><ul class="nav-tabs"><button type="button" class="tab  active" data-href="-1">SimpleCallable</button><button type="button" class="tab " data-href="-2">JucHelloApplication</button></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Callable;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SimpleCallable</span> <span class="keyword">implements</span> <span class="title class_">Callable</span>&lt;Integer&gt; &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">call</span><span class="params">()</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;callabel 线程启动&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                TimeUnit.SECONDS.sleep(<span class="number">3</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(<span class="string">&quot;callable 正在运行&quot;</span>);</span><br><span class="line">            sum += i;</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(<span class="string">&quot;callable 线程运行完毕&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="-2"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutionException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.FutureTask;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JucHelloApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;juc hello is running...&quot;</span>);</span><br><span class="line"></span><br><span class="line">        FutureTask&lt;Integer&gt; futureTask = <span class="keyword">new</span> <span class="title class_">FutureTask</span>&lt;&gt;(<span class="keyword">new</span> <span class="title class_">SimpleCallable</span>());</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(futureTask, <span class="string">&quot;t1&quot;</span>);</span><br><span class="line">        t1.start();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>( i &lt; <span class="number">5</span> )&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                TimeUnit.SECONDS.sleep(<span class="number">2</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(<span class="string">&quot;主线程的某些任务&quot;</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Integer</span> <span class="variable">ret</span> <span class="operator">=</span> futureTask.get();</span><br><span class="line">            log.info(<span class="string">&quot;线程计算结果:&#123;&#125;&quot;</span>,ret);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException | ExecutionException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>( i &lt; <span class="number">5</span> )&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                TimeUnit.SECONDS.sleep(<span class="number">2</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(<span class="string">&quot;主线程的某些任务2&quot;</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;程序结束&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>

<h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-09-12 08:05:01.920 [main ] INFO  com.laolang.jx.JucHelloApplication       - juc hello is running...</span><br><span class="line">2024-09-12 08:05:01.921 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callabel 线程启动</span><br><span class="line">2024-09-12 08:05:03.931 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务</span><br><span class="line">2024-09-12 08:05:04.934 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callable 正在运行</span><br><span class="line">2024-09-12 08:05:05.938 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务</span><br><span class="line">2024-09-12 08:05:07.938 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callable 正在运行</span><br><span class="line">2024-09-12 08:05:07.954 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务</span><br><span class="line">2024-09-12 08:05:09.961 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务</span><br><span class="line">2024-09-12 08:05:10.951 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callable 正在运行</span><br><span class="line">2024-09-12 08:05:11.963 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务</span><br><span class="line">2024-09-12 08:05:13.962 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callable 正在运行</span><br><span class="line">2024-09-12 08:05:16.972 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callable 正在运行</span><br><span class="line">2024-09-12 08:05:16.972 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callable 线程运行完毕</span><br><span class="line">2024-09-12 08:05:16.972 [main ] INFO  com.laolang.jx.JucHelloApplication       - 线程计算结果:15</span><br><span class="line">2024-09-12 08:05:18.979 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务2</span><br><span class="line">2024-09-12 08:05:20.996 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务2</span><br><span class="line">2024-09-12 08:05:23.013 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务2</span><br><span class="line">2024-09-12 08:05:25.020 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务2</span><br><span class="line">2024-09-12 08:05:27.035 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务2</span><br><span class="line">2024-09-12 08:05:27.037 [main ] INFO  com.laolang.jx.JucHelloApplication       - 程序结束</span><br></pre></td></tr></table></figure>

<h4 id="FutureTask-的缺陷"><a href="#FutureTask-的缺陷" class="headerlink" title="FutureTask 的缺陷"></a>FutureTask 的缺陷</h4><p><code>get</code> 方法在 <code>Future</code> 计算完成之前会一直处于阻塞状态</p>
<h3 id="CompletableFuture"><a href="#CompletableFuture" class="headerlink" title="CompletableFuture"></a>CompletableFuture</h3><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><div class="tabs" id=""><ul class="nav-tabs"><button type="button" class="tab  active" data-href="-1">SimpleCallable</button><button type="button" class="tab " data-href="-2">JucHelloApplication</button></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Callable;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SimpleCallable</span> <span class="keyword">implements</span> <span class="title class_">Callable</span>&lt;Integer&gt; &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">call</span><span class="params">()</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;callabel 线程启动&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                TimeUnit.SECONDS.sleep(<span class="number">3</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(<span class="string">&quot;callable 正在运行&quot;</span>);</span><br><span class="line">            sum += i;</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(<span class="string">&quot;callable 线程运行完毕&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="-2"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CompletableFuture;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JucHelloApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;juc hello is running...&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">ExecutorService</span> <span class="variable">executorService</span> <span class="operator">=</span> Executors.newFixedThreadPool(<span class="number">1</span>, runnable -&gt; &#123;</span><br><span class="line">            <span class="type">Thread</span> <span class="variable">thread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(runnable);</span><br><span class="line">            thread.setName(<span class="string">&quot;t1&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> thread;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        CompletableFuture</span><br><span class="line">                .supplyAsync(() -&gt; <span class="keyword">new</span> <span class="title class_">SimpleCallable</span>().call(), executorService)</span><br><span class="line">                .whenComplete((integer, throwable) -&gt; log.info(<span class="string">&quot;callable 计算结果:&#123;&#125;&quot;</span>, integer));</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; <span class="number">5</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                TimeUnit.SECONDS.sleep(<span class="number">2</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(<span class="string">&quot;主线程的某些任务&quot;</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; <span class="number">5</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                TimeUnit.SECONDS.sleep(<span class="number">2</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(<span class="string">&quot;主线程的某些任务2&quot;</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        executorService.shutdown();</span><br><span class="line">        log.info(<span class="string">&quot;程序结束&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>

<h4 id="结果-1"><a href="#结果-1" class="headerlink" title="结果"></a>结果</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-09-12 08:08:11.632 [main ] INFO  com.laolang.jx.JucHelloApplication       - juc hello is running...</span><br><span class="line">2024-09-12 08:08:11.655 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callabel 线程启动</span><br><span class="line">2024-09-12 08:08:13.665 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务</span><br><span class="line">2024-09-12 08:08:14.670 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callable 正在运行</span><br><span class="line">2024-09-12 08:08:15.678 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务</span><br><span class="line">2024-09-12 08:08:17.682 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务</span><br><span class="line">2024-09-12 08:08:17.682 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callable 正在运行</span><br><span class="line">2024-09-12 08:08:19.689 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务</span><br><span class="line">2024-09-12 08:08:20.690 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callable 正在运行</span><br><span class="line">2024-09-12 08:08:21.703 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务</span><br><span class="line">2024-09-12 08:08:23.693 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callable 正在运行</span><br><span class="line">2024-09-12 08:08:23.709 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务2</span><br><span class="line">2024-09-12 08:08:25.716 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务2</span><br><span class="line">2024-09-12 08:08:26.710 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callable 正在运行</span><br><span class="line">2024-09-12 08:08:26.713 [t1   ] INFO  com.laolang.jx.SimpleCallable            - callable 线程运行完毕</span><br><span class="line">2024-09-12 08:08:26.715 [t1   ] INFO  com.laolang.jx.JucHelloApplication       - callable 计算结果:15</span><br><span class="line">2024-09-12 08:08:27.723 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务2</span><br><span class="line">2024-09-12 08:08:29.740 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务2</span><br><span class="line">2024-09-12 08:08:31.751 [main ] INFO  com.laolang.jx.JucHelloApplication       - 主线程的某些任务2</span><br><span class="line">2024-09-12 08:08:31.751 [main ] INFO  com.laolang.jx.JucHelloApplication       - 程序结束</span><br></pre></td></tr></table></figure>

<h2 id="一个小例子-分别计算奇偶数之和"><a href="#一个小例子-分别计算奇偶数之和" class="headerlink" title="一个小例子: 分别计算奇偶数之和"></a>一个小例子: 分别计算奇偶数之和</h2><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Callable;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CompletableFuture;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutionException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ThreadFactory;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.atomic.AtomicInteger;</span><br><span class="line"><span class="keyword">import</span> javax.annotation.Nonnull;</span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JucHelloApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ExecutionException, InterruptedException &#123;</span><br><span class="line">        log.info(<span class="string">&quot;juc hello is running...&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">ExecutorService</span> <span class="variable">executorService</span> <span class="operator">=</span> Executors.newFixedThreadPool(<span class="number">2</span>, <span class="keyword">new</span> <span class="title class_">SimplThreadFactory</span>(<span class="string">&quot;call-&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算奇数</span></span><br><span class="line">        CompletableFuture.supplyAsync(() -&gt; <span class="keyword">new</span> <span class="title class_">SimpleCallable</span>(NumberType.ODD).call(), executorService)</span><br><span class="line">                .whenComplete((integer, throwable) -&gt; log.info(<span class="string">&quot;奇数之和:&#123;&#125;&quot;</span>, integer));</span><br><span class="line">        <span class="comment">// 计算偶数</span></span><br><span class="line">        CompletableFuture.supplyAsync(() -&gt; <span class="keyword">new</span> <span class="title class_">SimpleCallable</span>(NumberType.EVEN).call(), executorService)</span><br><span class="line">                .whenComplete((integer, throwable) -&gt; log.info(<span class="string">&quot;偶数之和:&#123;&#125;&quot;</span>, integer));</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; <span class="number">5</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                TimeUnit.SECONDS.sleep(<span class="number">2</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(<span class="string">&quot;主线程的某些任务&quot;</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(<span class="string">&quot;主线程运行完毕&quot;</span>);</span><br><span class="line"></span><br><span class="line">        executorService.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义线程名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">SimplThreadFactory</span> <span class="keyword">implements</span> <span class="title class_">ThreadFactory</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">AtomicInteger</span> <span class="variable">threadIndex</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AtomicInteger</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> String threadNamePrefix;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">SimplThreadFactory</span><span class="params">(String threadNamePrefix)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.threadNamePrefix = threadNamePrefix;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> Thread <span class="title function_">newThread</span><span class="params">(<span class="meta">@Nonnull</span> Runnable runnable)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(runnable, threadNamePrefix + threadIndex.getAndIncrement());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数字类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">enum</span> <span class="title class_">NumberType</span> &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 偶数</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        EVEN,</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 奇数</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        ODD</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Slf4j</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">SimpleCallable</span> <span class="keyword">implements</span> <span class="title class_">Callable</span>&lt;Integer&gt; &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> NumberType numberType;</span><br><span class="line">        <span class="meta">@Getter</span></span><br><span class="line">        <span class="keyword">private</span> <span class="type">Integer</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">SimpleCallable</span><span class="params">(NumberType numberType)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.numberType = numberType;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> Integer <span class="title function_">call</span><span class="params">()</span> &#123;</span><br><span class="line">            log.info(<span class="string">&quot;&#123;&#125; 线程启动&quot;</span>, Thread.currentThread().getName());</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (match(i)) &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="comment">// 偶数线程 sleep 1 秒</span></span><br><span class="line">                        <span class="comment">// 奇数线程 sleep 2 秒</span></span><br><span class="line">                        TimeUnit.SECONDS.sleep((i &amp; <span class="number">1</span>) + <span class="number">1</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                    &#125;</span><br><span class="line">                    log.info(<span class="string">&quot;&#123;&#125; 正在运行, 累增:&#123;&#125;&quot;</span>, Thread.currentThread().getName(), i);</span><br><span class="line">                    sum += i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(<span class="string">&quot;&#123;&#125; 线程运行完毕&quot;</span>, Thread.currentThread().getName());</span><br><span class="line">            <span class="keyword">return</span> sum;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">match</span><span class="params">(<span class="type">int</span> number)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> numberType.ordinal() == (number &amp; <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-09-12 21:59:01.874 [main    ] INFO  c.l.jx.JucHelloApplication     - juc hello is running...</span><br><span class="line">2024-09-12 21:59:01.898 [call-2  ] INFO  elloApplication$SimpleCallable - call-2 线程启动</span><br><span class="line">2024-09-12 21:59:01.898 [call-1  ] INFO  elloApplication$SimpleCallable - call-1 线程启动</span><br><span class="line">2024-09-12 21:59:02.903 [call-2  ] INFO  elloApplication$SimpleCallable - call-2 正在运行, 累增:2</span><br><span class="line">2024-09-12 21:59:03.910 [call-2  ] INFO  elloApplication$SimpleCallable - call-2 正在运行, 累增:4</span><br><span class="line">2024-09-12 21:59:03.910 [main    ] INFO  c.l.jx.JucHelloApplication     - 主线程的某些任务</span><br><span class="line">2024-09-12 21:59:03.910 [call-1  ] INFO  elloApplication$SimpleCallable - call-1 正在运行, 累增:1</span><br><span class="line">2024-09-12 21:59:04.922 [call-2  ] INFO  elloApplication$SimpleCallable - call-2 正在运行, 累增:6</span><br><span class="line">2024-09-12 21:59:05.916 [call-1  ] INFO  elloApplication$SimpleCallable - call-1 正在运行, 累增:3</span><br><span class="line">2024-09-12 21:59:05.916 [main    ] INFO  c.l.jx.JucHelloApplication     - 主线程的某些任务</span><br><span class="line">2024-09-12 21:59:05.932 [call-2  ] INFO  elloApplication$SimpleCallable - call-2 正在运行, 累增:8</span><br><span class="line">2024-09-12 21:59:06.946 [call-2  ] INFO  elloApplication$SimpleCallable - call-2 正在运行, 累增:10</span><br><span class="line">2024-09-12 21:59:06.946 [call-2  ] INFO  elloApplication$SimpleCallable - call-2 线程运行完毕</span><br><span class="line">2024-09-12 21:59:06.947 [call-2  ] INFO  c.l.jx.JucHelloApplication     - 偶数之和:30</span><br><span class="line">2024-09-12 21:59:07.925 [call-1  ] INFO  elloApplication$SimpleCallable - call-1 正在运行, 累增:5</span><br><span class="line">2024-09-12 21:59:07.925 [main    ] INFO  c.l.jx.JucHelloApplication     - 主线程的某些任务</span><br><span class="line">2024-09-12 21:59:09.929 [call-1  ] INFO  elloApplication$SimpleCallable - call-1 正在运行, 累增:7</span><br><span class="line">2024-09-12 21:59:09.929 [main    ] INFO  c.l.jx.JucHelloApplication     - 主线程的某些任务</span><br><span class="line">2024-09-12 21:59:11.945 [main    ] INFO  c.l.jx.JucHelloApplication     - 主线程的某些任务</span><br><span class="line">2024-09-12 21:59:11.945 [call-1  ] INFO  elloApplication$SimpleCallable - call-1 正在运行, 累增:9</span><br><span class="line">2024-09-12 21:59:11.945 [main    ] INFO  c.l.jx.JucHelloApplication     - 主线程运行完毕</span><br><span class="line">2024-09-12 21:59:11.945 [call-1  ] INFO  elloApplication$SimpleCallable - call-1 线程运行完毕</span><br><span class="line">2024-09-12 21:59:11.945 [call-1  ] INFO  c.l.jx.JucHelloApplication     - 奇数之和:25</span><br></pre></td></tr></table></figure>

<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://springdoc.cn/java-naming-executor-service-thread/">自定义 ExecutorService 中线程的名称</a></p>
<h1 id="多线程经典例子-·-买票"><a href="#多线程经典例子-·-买票" class="headerlink" title="多线程经典例子 · 买票"></a>多线程经典例子 · 买票</h1><h2 id="synchronized-方式实现"><a href="#synchronized-方式实现" class="headerlink" title="synchronized 方式实现"></a>synchronized 方式实现</h2><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutionException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JucHelloApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ExecutionException, InterruptedException &#123;</span><br><span class="line">        <span class="type">Ticket</span> <span class="variable">ticket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Ticket</span>();</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">TicketRunnable</span>(ticket), <span class="string">&quot;t1&quot;</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">TicketRunnable</span>(ticket), <span class="string">&quot;t2&quot;</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">TicketRunnable</span>(ticket), <span class="string">&quot;t3&quot;</span>);</span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.start();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Ticket</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 总票数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Integer</span> <span class="variable">total</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 买票</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">sale</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (total &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            total--;</span><br><span class="line">            log.info(<span class="string">&quot;&#123;&#125; 卖出:&#123;&#125;,剩下:&#123;&#125;&quot;</span>, Thread.currentThread().getName(), <span class="number">1</span>, total);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                TimeUnit.SECONDS.sleep(<span class="number">2</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TicketRunnable</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Ticket ticket;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">40</span>; i++) &#123;</span><br><span class="line">            ticket.sale();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-10-05 04:39:54.338 [t1   ] INFO  com.laolang.jx.Ticket          - t1 卖出:1,剩下:29</span><br><span class="line">2024-10-05 04:39:56.353 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:28</span><br><span class="line">2024-10-05 04:39:58.364 [t2   ] INFO  com.laolang.jx.Ticket          - t2 卖出:1,剩下:27</span><br><span class="line">2024-10-05 04:40:00.375 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:26</span><br><span class="line">2024-10-05 04:40:02.388 [t1   ] INFO  com.laolang.jx.Ticket          - t1 卖出:1,剩下:25</span><br><span class="line">2024-10-05 04:40:04.398 [t1   ] INFO  com.laolang.jx.Ticket          - t1 卖出:1,剩下:24</span><br><span class="line">2024-10-05 04:40:06.408 [t1   ] INFO  com.laolang.jx.Ticket          - t1 卖出:1,剩下:23</span><br><span class="line">2024-10-05 04:40:08.418 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:22</span><br><span class="line">2024-10-05 04:40:10.436 [t2   ] INFO  com.laolang.jx.Ticket          - t2 卖出:1,剩下:21</span><br><span class="line">2024-10-05 04:40:12.446 [t2   ] INFO  com.laolang.jx.Ticket          - t2 卖出:1,剩下:20</span><br><span class="line">2024-10-05 04:40:14.456 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:19</span><br><span class="line">2024-10-05 04:40:16.467 [t1   ] INFO  com.laolang.jx.Ticket          - t1 卖出:1,剩下:18</span><br><span class="line">2024-10-05 04:40:18.479 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:17</span><br><span class="line">2024-10-05 04:40:20.483 [t2   ] INFO  com.laolang.jx.Ticket          - t2 卖出:1,剩下:16</span><br><span class="line">2024-10-05 04:40:22.497 [t2   ] INFO  com.laolang.jx.Ticket          - t2 卖出:1,剩下:15</span><br><span class="line">2024-10-05 04:40:24.504 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:14</span><br><span class="line">2024-10-05 04:40:26.511 [t1   ] INFO  com.laolang.jx.Ticket          - t1 卖出:1,剩下:13</span><br><span class="line">2024-10-05 04:40:28.521 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:12</span><br><span class="line">2024-10-05 04:40:30.531 [t2   ] INFO  com.laolang.jx.Ticket          - t2 卖出:1,剩下:11</span><br><span class="line">2024-10-05 04:40:32.543 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:10</span><br><span class="line">2024-10-05 04:40:34.556 [t1   ] INFO  com.laolang.jx.Ticket          - t1 卖出:1,剩下:9</span><br><span class="line">2024-10-05 04:40:36.564 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:8</span><br><span class="line">2024-10-05 04:40:38.577 [t2   ] INFO  com.laolang.jx.Ticket          - t2 卖出:1,剩下:7</span><br><span class="line">2024-10-05 04:40:40.585 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:6</span><br><span class="line">2024-10-05 04:40:42.599 [t1   ] INFO  com.laolang.jx.Ticket          - t1 卖出:1,剩下:5</span><br><span class="line">2024-10-05 04:40:44.600 [t1   ] INFO  com.laolang.jx.Ticket          - t1 卖出:1,剩下:4</span><br><span class="line">2024-10-05 04:40:46.613 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:3</span><br><span class="line">2024-10-05 04:40:48.622 [t2   ] INFO  com.laolang.jx.Ticket          - t2 卖出:1,剩下:2</span><br><span class="line">2024-10-05 04:40:50.627 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:1</span><br><span class="line">2024-10-05 04:40:52.640 [t1   ] INFO  com.laolang.jx.Ticket          - t1 卖出:1,剩下:0</span><br></pre></td></tr></table></figure>

<h2 id="Lock-方式实现"><a href="#Lock-方式实现" class="headerlink" title="Lock 方式实现"></a>Lock 方式实现</h2><h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutionException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JucHelloApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ExecutionException, InterruptedException &#123;</span><br><span class="line">        <span class="type">Ticket</span> <span class="variable">ticket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Ticket</span>();</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">TicketRunnable</span>(ticket), <span class="string">&quot;t1&quot;</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">TicketRunnable</span>(ticket), <span class="string">&quot;t2&quot;</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">TicketRunnable</span>(ticket), <span class="string">&quot;t3&quot;</span>);</span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.start();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Ticket</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 总票数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Integer</span> <span class="variable">total</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 可重入锁</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">ReentrantLock</span> <span class="variable">lock</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReentrantLock</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 买票</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">sale</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            lock.lock();</span><br><span class="line">            <span class="keyword">if</span> (total &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                total--;</span><br><span class="line">                log.info(<span class="string">&quot;&#123;&#125; 卖出:&#123;&#125;,剩下:&#123;&#125;&quot;</span>, Thread.currentThread().getName(), <span class="number">1</span>, total);</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    TimeUnit.SECONDS.sleep(<span class="number">2</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TicketRunnable</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Ticket ticket;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">40</span>; i++) &#123;</span><br><span class="line">            ticket.sale();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="运行效果-1"><a href="#运行效果-1" class="headerlink" title="运行效果"></a>运行效果</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-10-05 04:44:58.522 [t1   ] INFO  com.laolang.jx.Ticket          - t1 卖出:1,剩下:29</span><br><span class="line">2024-10-05 04:45:00.536 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:28</span><br><span class="line">2024-10-05 04:45:02.544 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:27</span><br><span class="line">2024-10-05 04:45:04.559 [t2   ] INFO  com.laolang.jx.Ticket          - t2 卖出:1,剩下:26</span><br><span class="line">2024-10-05 04:45:06.567 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:25</span><br><span class="line">2024-10-05 04:45:08.577 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:24</span><br><span class="line">2024-10-05 04:45:10.583 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:23</span><br><span class="line">2024-10-05 04:45:12.588 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:22</span><br><span class="line">2024-10-05 04:45:14.590 [t1   ] INFO  com.laolang.jx.Ticket          - t1 卖出:1,剩下:21</span><br><span class="line">2024-10-05 04:45:16.598 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:20</span><br><span class="line">2024-10-05 04:45:18.617 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:19</span><br><span class="line">2024-10-05 04:45:20.631 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:18</span><br><span class="line">2024-10-05 04:45:22.642 [t2   ] INFO  com.laolang.jx.Ticket          - t2 卖出:1,剩下:17</span><br><span class="line">2024-10-05 04:45:24.648 [t2   ] INFO  com.laolang.jx.Ticket          - t2 卖出:1,剩下:16</span><br><span class="line">2024-10-05 04:45:26.661 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:15</span><br><span class="line">2024-10-05 04:45:28.667 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:14</span><br><span class="line">2024-10-05 04:45:30.674 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:13</span><br><span class="line">2024-10-05 04:45:32.685 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:12</span><br><span class="line">2024-10-05 04:45:34.691 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:11</span><br><span class="line">2024-10-05 04:45:36.699 [t1   ] INFO  com.laolang.jx.Ticket          - t1 卖出:1,剩下:10</span><br><span class="line">2024-10-05 04:45:38.705 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:9</span><br><span class="line">2024-10-05 04:45:40.718 [t2   ] INFO  com.laolang.jx.Ticket          - t2 卖出:1,剩下:8</span><br><span class="line">2024-10-05 04:45:42.726 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:7</span><br><span class="line">2024-10-05 04:45:44.739 [t1   ] INFO  com.laolang.jx.Ticket          - t1 卖出:1,剩下:6</span><br><span class="line">2024-10-05 04:45:46.751 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:5</span><br><span class="line">2024-10-05 04:45:48.768 [t2   ] INFO  com.laolang.jx.Ticket          - t2 卖出:1,剩下:4</span><br><span class="line">2024-10-05 04:45:50.776 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:3</span><br><span class="line">2024-10-05 04:45:52.789 [t3   ] INFO  com.laolang.jx.Ticket          - t3 卖出:1,剩下:2</span><br><span class="line">2024-10-05 04:45:54.794 [t1   ] INFO  com.laolang.jx.Ticket          - t1 卖出:1,剩下:1</span><br><span class="line">2024-10-05 04:45:56.810 [t1   ] INFO  com.laolang.jx.Ticket          - t1 卖出:1,剩下:0</span><br></pre></td></tr></table></figure>

<h1 id="线程间通信"><a href="#线程间通信" class="headerlink" title="线程间通信"></a>线程间通信</h1><h2 id="两种方式"><a href="#两种方式" class="headerlink" title="两种方式"></a>两种方式</h2><ol>
<li>共享内存</li>
<li>消息传递</li>
</ol>
<h2 id="一个经典例子"><a href="#一个经典例子" class="headerlink" title="一个经典例子"></a>一个经典例子</h2><blockquote>
<p>两个线程, 一个对当前数值加 1 ,另一个线程对当前数值减 1, 要求用线程间通信</p>
</blockquote>
<h3 id="synchronized-方式实现-1"><a href="#synchronized-方式实现-1" class="headerlink" title="synchronized 方式实现"></a>synchronized 方式实现</h3><h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutionException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JucHelloApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ExecutionException, InterruptedException &#123;</span><br><span class="line">        <span class="type">Share</span> <span class="variable">share</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Share</span>();</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">ShareRunnable</span>(share, OpType.INCREMENT), <span class="string">&quot;t-increment&quot;</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">ShareRunnable</span>(share, OpType.DECREMENT), <span class="string">&quot;t-decrement&quot;</span>);</span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line"></span><br><span class="line">        TimeUnit.SECONDS.sleep(<span class="number">1</span>);</span><br><span class="line">        log.info(<span class="string">&quot;result:&#123;&#125;&quot;</span>, share.getNumber());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Share</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Integer</span> <span class="variable">number</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">increment</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> != number) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;&#123;&#125;::wait&quot;</span>, Thread.currentThread().getName());</span><br><span class="line">            <span class="built_in">this</span>.wait();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        number++;</span><br><span class="line">        log.info(<span class="string">&quot;&#123;&#125;::&#123;&#125;&quot;</span>, Thread.currentThread().getName(), number);</span><br><span class="line">        <span class="built_in">this</span>.notifyAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">decrement</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">1</span> != number) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;&#123;&#125;::wait&quot;</span>, Thread.currentThread().getName());</span><br><span class="line">            <span class="built_in">this</span>.wait();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        number--;</span><br><span class="line">        log.info(<span class="string">&quot;&#123;&#125;::&#123;&#125;&quot;</span>, Thread.currentThread().getName(), number);</span><br><span class="line">        <span class="built_in">this</span>.notifyAll();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">OpType</span> &#123;</span><br><span class="line">    INCREMENT,</span><br><span class="line">    DECREMENT</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ShareRunnable</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Share share;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> OpType type;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (type == OpType.INCREMENT) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    share.increment();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    share.decrement();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="运行效果-2"><a href="#运行效果-2" class="headerlink" title="运行效果"></a>运行效果</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-10-05 05:02:04.331 [t-increment] INFO  com.laolang.jx.Share           - t-increment::1</span><br><span class="line">2024-10-05 05:02:04.333 [t-increment] INFO  com.laolang.jx.Share           - t-increment::wait</span><br><span class="line">2024-10-05 05:02:04.333 [t-decrement] INFO  com.laolang.jx.Share           - t-decrement::0</span><br><span class="line">2024-10-05 05:02:04.333 [t-decrement] INFO  com.laolang.jx.Share           - t-decrement::wait</span><br><span class="line">2024-10-05 05:02:04.333 [t-increment] INFO  com.laolang.jx.Share           - t-increment::1</span><br><span class="line">2024-10-05 05:02:04.333 [t-increment] INFO  com.laolang.jx.Share           - t-increment::wait</span><br><span class="line">2024-10-05 05:02:04.333 [t-decrement] INFO  com.laolang.jx.Share           - t-decrement::0</span><br><span class="line">2024-10-05 05:02:04.333 [t-decrement] INFO  com.laolang.jx.Share           - t-decrement::wait</span><br><span class="line">2024-10-05 05:02:04.334 [t-increment] INFO  com.laolang.jx.Share           - t-increment::1</span><br><span class="line">2024-10-05 05:02:04.334 [t-increment] INFO  com.laolang.jx.Share           - t-increment::wait</span><br><span class="line">2024-10-05 05:02:04.334 [t-decrement] INFO  com.laolang.jx.Share           - t-decrement::0</span><br><span class="line">2024-10-05 05:02:04.334 [t-decrement] INFO  com.laolang.jx.Share           - t-decrement::wait</span><br><span class="line">2024-10-05 05:02:04.334 [t-increment] INFO  com.laolang.jx.Share           - t-increment::1</span><br><span class="line">2024-10-05 05:02:04.334 [t-increment] INFO  com.laolang.jx.Share           - t-increment::wait</span><br><span class="line">2024-10-05 05:02:04.334 [t-decrement] INFO  com.laolang.jx.Share           - t-decrement::0</span><br><span class="line">2024-10-05 05:02:04.334 [t-decrement] INFO  com.laolang.jx.Share           - t-decrement::wait</span><br><span class="line">2024-10-05 05:02:04.334 [t-increment] INFO  com.laolang.jx.Share           - t-increment::1</span><br><span class="line">2024-10-05 05:02:04.334 [t-increment] INFO  com.laolang.jx.Share           - t-increment::wait</span><br><span class="line">2024-10-05 05:02:04.334 [t-decrement] INFO  com.laolang.jx.Share           - t-decrement::0</span><br><span class="line">2024-10-05 05:02:04.334 [t-decrement] INFO  com.laolang.jx.Share           - t-decrement::wait</span><br><span class="line">2024-10-05 05:02:04.334 [t-increment] INFO  com.laolang.jx.Share           - t-increment::1</span><br><span class="line">2024-10-05 05:02:04.334 [t-increment] INFO  com.laolang.jx.Share           - t-increment::wait</span><br><span class="line">2024-10-05 05:02:04.334 [t-decrement] INFO  com.laolang.jx.Share           - t-decrement::0</span><br><span class="line">2024-10-05 05:02:04.334 [t-decrement] INFO  com.laolang.jx.Share           - t-decrement::wait</span><br><span class="line">2024-10-05 05:02:04.335 [t-increment] INFO  com.laolang.jx.Share           - t-increment::1</span><br><span class="line">2024-10-05 05:02:04.335 [t-increment] INFO  com.laolang.jx.Share           - t-increment::wait</span><br><span class="line">2024-10-05 05:02:04.335 [t-decrement] INFO  com.laolang.jx.Share           - t-decrement::0</span><br><span class="line">2024-10-05 05:02:04.335 [t-decrement] INFO  com.laolang.jx.Share           - t-decrement::wait</span><br><span class="line">2024-10-05 05:02:04.335 [t-increment] INFO  com.laolang.jx.Share           - t-increment::1</span><br><span class="line">2024-10-05 05:02:04.335 [t-increment] INFO  com.laolang.jx.Share           - t-increment::wait</span><br><span class="line">2024-10-05 05:02:04.335 [t-decrement] INFO  com.laolang.jx.Share           - t-decrement::0</span><br><span class="line">2024-10-05 05:02:04.335 [t-decrement] INFO  com.laolang.jx.Share           - t-decrement::wait</span><br><span class="line">2024-10-05 05:02:04.335 [t-increment] INFO  com.laolang.jx.Share           - t-increment::1</span><br><span class="line">2024-10-05 05:02:04.335 [t-increment] INFO  com.laolang.jx.Share           - t-increment::wait</span><br><span class="line">2024-10-05 05:02:04.335 [t-decrement] INFO  com.laolang.jx.Share           - t-decrement::0</span><br><span class="line">2024-10-05 05:02:04.335 [t-decrement] INFO  com.laolang.jx.Share           - t-decrement::wait</span><br><span class="line">2024-10-05 05:02:04.335 [t-increment] INFO  com.laolang.jx.Share           - t-increment::1</span><br><span class="line">2024-10-05 05:02:04.335 [t-decrement] INFO  com.laolang.jx.Share           - t-decrement::0</span><br><span class="line">2024-10-05 05:02:05.341 [main       ] INFO  c.l.jx.JucHelloApplication     - result:0</span><br></pre></td></tr></table></figure>

<h4 id="虚假唤醒问题"><a href="#虚假唤醒问题" class="headerlink" title="虚假唤醒问题"></a>虚假唤醒问题</h4><p>修改代码如下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JucHelloApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ExecutionException, InterruptedException &#123;</span><br><span class="line">        <span class="type">Share</span> <span class="variable">share</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Share</span>();</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">ShareRunnable</span>(share, OpType.INCREMENT), <span class="string">&quot;t-in-1&quot;</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">ShareRunnable</span>(share, OpType.DECREMENT), <span class="string">&quot;t-de-1&quot;</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">ShareRunnable</span>(share, OpType.INCREMENT), <span class="string">&quot;t-in-2&quot;</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">ShareRunnable</span>(share, OpType.DECREMENT), <span class="string">&quot;t-de-2&quot;</span>);</span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.start();</span><br><span class="line">        t4.start();</span><br><span class="line"></span><br><span class="line">        TimeUnit.SECONDS.sleep(<span class="number">1</span>);</span><br><span class="line">        log.info(<span class="string">&quot;result:&#123;&#125;&quot;</span>, share.getNumber());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>运行效果</p>
<div class="note info no-icon simple"><p>出现了 <strong>-1</strong></p>
</div>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-10-05 05:05:20.180 [t-in-1     ] INFO  com.laolang.jx.Share           - t-in-1::1</span><br><span class="line">2024-10-05 05:05:20.182 [t-in-1     ] INFO  com.laolang.jx.Share           - t-in-1::wait</span><br><span class="line">2024-10-05 05:05:20.183 [t-de-2     ] INFO  com.laolang.jx.Share           - t-de-2::0</span><br><span class="line">2024-10-05 05:05:20.183 [t-de-2     ] INFO  com.laolang.jx.Share           - t-de-2::wait</span><br><span class="line">2024-10-05 05:05:20.183 [t-de-1     ] INFO  com.laolang.jx.Share           - t-de-1::wait</span><br><span class="line">2024-10-05 05:05:20.183 [t-in-2     ] INFO  com.laolang.jx.Share           - t-in-2::1</span><br><span class="line">2024-10-05 05:05:20.183 [t-in-2     ] INFO  com.laolang.jx.Share           - t-in-2::wait</span><br><span class="line">2024-10-05 05:05:20.183 [t-de-1     ] INFO  com.laolang.jx.Share           - t-de-1::0</span><br><span class="line">2024-10-05 05:05:20.183 [t-de-1     ] INFO  com.laolang.jx.Share           - t-de-1::wait</span><br><span class="line">2024-10-05 05:05:20.183 [t-de-2     ] INFO  com.laolang.jx.Share           - t-de-2::-1</span><br><span class="line">2024-10-05 05:05:20.183 [t-de-2     ] INFO  com.laolang.jx.Share           - t-de-2::wait</span><br><span class="line">2024-10-05 05:05:20.183 [t-in-1     ] INFO  com.laolang.jx.Share           - t-in-1::0</span><br><span class="line">2024-10-05 05:05:20.183 [t-in-1     ] INFO  com.laolang.jx.Share           - t-in-1::1</span><br><span class="line">2024-10-05 05:05:20.183 [t-in-1     ] INFO  com.laolang.jx.Share           - t-in-1::wait</span><br><span class="line">2024-10-05 05:05:20.183 [t-de-2     ] INFO  com.laolang.jx.Share           - t-de-2::0</span><br><span class="line">2024-10-05 05:05:20.183 [t-de-2     ] INFO  com.laolang.jx.Share           - t-de-2::wait</span><br><span class="line">2024-10-05 05:05:20.183 [t-de-1     ] INFO  com.laolang.jx.Share           - t-de-1::-1</span><br><span class="line">2024-10-05 05:05:20.184 [t-de-1     ] INFO  com.laolang.jx.Share           - t-de-1::wait</span><br><span class="line">2024-10-05 05:05:20.184 [t-in-2     ] INFO  com.laolang.jx.Share           - t-in-2::0</span><br><span class="line">2024-10-05 05:05:20.184 [t-in-2     ] INFO  com.laolang.jx.Share           - t-in-2::1</span><br><span class="line">2024-10-05 05:05:20.184 [t-in-2     ] INFO  com.laolang.jx.Share           - t-in-2::wait</span><br><span class="line">2024-10-05 05:05:20.184 [t-de-1     ] INFO  com.laolang.jx.Share           - t-de-1::0</span><br><span class="line">2024-10-05 05:05:20.184 [t-de-1     ] INFO  com.laolang.jx.Share           - t-de-1::wait</span><br><span class="line">2024-10-05 05:05:20.184 [t-de-2     ] INFO  com.laolang.jx.Share           - t-de-2::-1</span><br><span class="line">2024-10-05 05:05:20.184 [t-de-2     ] INFO  com.laolang.jx.Share           - t-de-2::wait</span><br><span class="line">2024-10-05 05:05:20.184 [t-in-1     ] INFO  com.laolang.jx.Share           - t-in-1::0</span><br><span class="line">2024-10-05 05:05:20.184 [t-in-1     ] INFO  com.laolang.jx.Share           - t-in-1::1</span><br><span class="line">2024-10-05 05:05:20.184 [t-in-1     ] INFO  com.laolang.jx.Share           - t-in-1::wait</span><br><span class="line">2024-10-05 05:05:20.184 [t-de-2     ] INFO  com.laolang.jx.Share           - t-de-2::0</span><br><span class="line">2024-10-05 05:05:20.184 [t-de-2     ] INFO  com.laolang.jx.Share           - t-de-2::wait</span><br><span class="line">2024-10-05 05:05:20.184 [t-de-1     ] INFO  com.laolang.jx.Share           - t-de-1::-1</span><br><span class="line">2024-10-05 05:05:20.184 [t-de-1     ] INFO  com.laolang.jx.Share           - t-de-1::wait</span><br><span class="line">2024-10-05 05:05:20.184 [t-in-2     ] INFO  com.laolang.jx.Share           - t-in-2::0</span><br><span class="line">2024-10-05 05:05:20.184 [t-in-2     ] INFO  com.laolang.jx.Share           - t-in-2::1</span><br><span class="line">2024-10-05 05:05:20.184 [t-in-2     ] INFO  com.laolang.jx.Share           - t-in-2::wait</span><br><span class="line">2024-10-05 05:05:20.184 [t-de-1     ] INFO  com.laolang.jx.Share           - t-de-1::0</span><br><span class="line">2024-10-05 05:05:20.184 [t-de-1     ] INFO  com.laolang.jx.Share           - t-de-1::wait</span><br><span class="line">2024-10-05 05:05:20.184 [t-de-2     ] INFO  com.laolang.jx.Share           - t-de-2::-1</span><br><span class="line">2024-10-05 05:05:20.185 [t-de-2     ] INFO  com.laolang.jx.Share           - t-de-2::wait</span><br><span class="line">2024-10-05 05:05:20.185 [t-in-1     ] INFO  com.laolang.jx.Share           - t-in-1::0</span><br><span class="line">2024-10-05 05:05:20.185 [t-in-1     ] INFO  com.laolang.jx.Share           - t-in-1::1</span><br><span class="line">2024-10-05 05:05:20.185 [t-in-1     ] INFO  com.laolang.jx.Share           - t-in-1::wait</span><br><span class="line">2024-10-05 05:05:20.185 [t-de-2     ] INFO  com.laolang.jx.Share           - t-de-2::0</span><br><span class="line">2024-10-05 05:05:20.185 [t-de-2     ] INFO  com.laolang.jx.Share           - t-de-2::wait</span><br><span class="line">2024-10-05 05:05:20.185 [t-de-1     ] INFO  com.laolang.jx.Share           - t-de-1::-1</span><br><span class="line">2024-10-05 05:05:20.185 [t-de-1     ] INFO  com.laolang.jx.Share           - t-de-1::wait</span><br><span class="line">2024-10-05 05:05:20.185 [t-in-2     ] INFO  com.laolang.jx.Share           - t-in-2::0</span><br><span class="line">2024-10-05 05:05:20.185 [t-in-2     ] INFO  com.laolang.jx.Share           - t-in-2::1</span><br><span class="line">2024-10-05 05:05:20.185 [t-in-2     ] INFO  com.laolang.jx.Share           - t-in-2::wait</span><br><span class="line">2024-10-05 05:05:20.185 [t-de-1     ] INFO  com.laolang.jx.Share           - t-de-1::0</span><br><span class="line">2024-10-05 05:05:20.186 [t-de-1     ] INFO  com.laolang.jx.Share           - t-de-1::wait</span><br><span class="line">2024-10-05 05:05:20.186 [t-de-2     ] INFO  com.laolang.jx.Share           - t-de-2::-1</span><br><span class="line">2024-10-05 05:05:20.186 [t-de-2     ] INFO  com.laolang.jx.Share           - t-de-2::wait</span><br><span class="line">2024-10-05 05:05:20.186 [t-in-1     ] INFO  com.laolang.jx.Share           - t-in-1::0</span><br><span class="line">2024-10-05 05:05:20.186 [t-in-1     ] INFO  com.laolang.jx.Share           - t-in-1::1</span><br><span class="line">2024-10-05 05:05:20.186 [t-in-1     ] INFO  com.laolang.jx.Share           - t-in-1::wait</span><br><span class="line">2024-10-05 05:05:20.186 [t-de-2     ] INFO  com.laolang.jx.Share           - t-de-2::0</span><br><span class="line">2024-10-05 05:05:20.186 [t-de-2     ] INFO  com.laolang.jx.Share           - t-de-2::wait</span><br><span class="line">2024-10-05 05:05:20.186 [t-de-1     ] INFO  com.laolang.jx.Share           - t-de-1::-1</span><br><span class="line">2024-10-05 05:05:20.186 [t-de-1     ] INFO  com.laolang.jx.Share           - t-de-1::wait</span><br><span class="line">2024-10-05 05:05:20.186 [t-in-2     ] INFO  com.laolang.jx.Share           - t-in-2::0</span><br><span class="line">2024-10-05 05:05:20.186 [t-in-2     ] INFO  com.laolang.jx.Share           - t-in-2::1</span><br><span class="line">2024-10-05 05:05:20.186 [t-in-2     ] INFO  com.laolang.jx.Share           - t-in-2::wait</span><br><span class="line">2024-10-05 05:05:20.186 [t-de-1     ] INFO  com.laolang.jx.Share           - t-de-1::0</span><br><span class="line">2024-10-05 05:05:20.186 [t-de-1     ] INFO  com.laolang.jx.Share           - t-de-1::wait</span><br><span class="line">2024-10-05 05:05:20.186 [t-de-2     ] INFO  com.laolang.jx.Share           - t-de-2::-1</span><br><span class="line">2024-10-05 05:05:20.186 [t-in-1     ] INFO  com.laolang.jx.Share           - t-in-1::0</span><br><span class="line">2024-10-05 05:05:20.186 [t-de-1     ] INFO  com.laolang.jx.Share           - t-de-1::-1</span><br><span class="line">2024-10-05 05:05:20.186 [t-in-2     ] INFO  com.laolang.jx.Share           - t-in-2::0</span><br><span class="line">2024-10-05 05:05:21.184 [main       ] INFO  c.l.jx.JucHelloApplication     - result:0</span><br></pre></td></tr></table></figure>

<p>原因: 当某个线程 <code>wait</code> 之后又抢到锁, 就会继续执行 <code>wait</code> 之后的代码,此时 <code>if</code> 判断不会执行, 导致运行逻辑不正确<br>解决方式: 把 <code>wait</code> 放到循环中</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Share</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Integer</span> <span class="variable">number</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">increment</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">0</span> != number) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;&#123;&#125;::wait&quot;</span>, Thread.currentThread().getName());</span><br><span class="line">            <span class="built_in">this</span>.wait();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        number++;</span><br><span class="line">        log.info(<span class="string">&quot;&#123;&#125;::&#123;&#125;&quot;</span>, Thread.currentThread().getName(), number);</span><br><span class="line">        <span class="built_in">this</span>.notifyAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">decrement</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span> != number) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;&#123;&#125;::wait&quot;</span>, Thread.currentThread().getName());</span><br><span class="line">            <span class="built_in">this</span>.wait();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        number--;</span><br><span class="line">        log.info(<span class="string">&quot;&#123;&#125;::&#123;&#125;&quot;</span>, Thread.currentThread().getName(), number);</span><br><span class="line">        <span class="built_in">this</span>.notifyAll();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Lock-方式实现-1"><a href="#Lock-方式实现-1" class="headerlink" title="Lock 方式实现"></a>Lock 方式实现</h3><h4 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Share</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Integer</span> <span class="variable">number</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">Lock</span> <span class="variable">lock</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReentrantLock</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">Condition</span> <span class="variable">condition</span> <span class="operator">=</span> lock.newCondition();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">increment</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            lock.lock();</span><br><span class="line">            <span class="keyword">while</span> (<span class="number">0</span> != number) &#123;</span><br><span class="line">                log.info(<span class="string">&quot;&#123;&#125;::wait&quot;</span>, Thread.currentThread().getName());</span><br><span class="line">                condition.await();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            number++;</span><br><span class="line">            log.info(<span class="string">&quot;&#123;&#125;::&#123;&#125;&quot;</span>, Thread.currentThread().getName(), number);</span><br><span class="line">            condition.signalAll();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">decrement</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            lock.lock();</span><br><span class="line">            <span class="keyword">while</span> (<span class="number">1</span> != number) &#123;</span><br><span class="line">                log.info(<span class="string">&quot;&#123;&#125;::wait&quot;</span>, Thread.currentThread().getName());</span><br><span class="line">                condition.await();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            number--;</span><br><span class="line">            log.info(<span class="string">&quot;&#123;&#125;::&#123;&#125;&quot;</span>, Thread.currentThread().getName(), number);</span><br><span class="line">            condition.signalAll();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="线程间定制化通信"><a href="#线程间定制化通信" class="headerlink" title="线程间定制化通信"></a>线程间定制化通信</h2><p>A 线程打印 1 次 A , B 线程打印 2 次 B , C 线程打印 3 次 C , 按照此顺序循环 3 次</p>
<h3 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutionException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.Condition;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.Lock;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.SneakyThrows;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JucHelloApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ExecutionException, InterruptedException &#123;</span><br><span class="line">        <span class="type">Share</span> <span class="variable">share</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Share</span>();</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">ShareRunnable</span>(share, OpType.A), <span class="string">&quot;t-A&quot;</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">ShareRunnable</span>(share, OpType.B), <span class="string">&quot;t-B&quot;</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">ShareRunnable</span>(share, OpType.C), <span class="string">&quot;t-C&quot;</span>);</span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">OpType</span> &#123;</span><br><span class="line">    A(<span class="number">1</span>),</span><br><span class="line">    B(<span class="number">2</span>),</span><br><span class="line">    C(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Integer times;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Share</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">OpType</span> <span class="variable">flag</span> <span class="operator">=</span> OpType.A;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">Lock</span> <span class="variable">lock</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReentrantLock</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">Condition</span> <span class="variable">conditionA</span> <span class="operator">=</span> lock.newCondition();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">Condition</span> <span class="variable">conditionB</span> <span class="operator">=</span> lock.newCondition();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">Condition</span> <span class="variable">conditionC</span> <span class="operator">=</span> lock.newCondition();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printA</span><span class="params">(<span class="type">int</span> loop)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            lock.lock();</span><br><span class="line">            <span class="keyword">while</span> (OpType.A != flag) &#123;</span><br><span class="line">                conditionA.await();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= flag.getTimes(); i++) &#123;</span><br><span class="line">                log.info(<span class="string">&quot;&#123;&#125;::A-&#123;&#125;::loop-&#123;&#125;&quot;</span>, Thread.currentThread().getName(), i, loop);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            flag = OpType.B;</span><br><span class="line">            conditionB.signal();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printB</span><span class="params">(<span class="type">int</span> loop)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            lock.lock();</span><br><span class="line">            <span class="keyword">while</span> (OpType.B != flag) &#123;</span><br><span class="line">                conditionB.await();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= flag.getTimes(); i++) &#123;</span><br><span class="line">                log.info(<span class="string">&quot;&#123;&#125;::B-&#123;&#125;::loop-&#123;&#125;&quot;</span>, Thread.currentThread().getName(), i, loop);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            flag = OpType.C;</span><br><span class="line">            conditionC.signal();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printC</span><span class="params">(<span class="type">int</span> loop)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            lock.lock();</span><br><span class="line">            <span class="keyword">while</span> (OpType.C != flag) &#123;</span><br><span class="line">                conditionC.await();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= flag.getTimes(); i++) &#123;</span><br><span class="line">                log.info(<span class="string">&quot;&#123;&#125;::C-&#123;&#125;::loop-&#123;&#125;&quot;</span>, Thread.currentThread().getName(), i, loop);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            flag = OpType.A;</span><br><span class="line">            conditionA.signal();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ShareRunnable</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Share share;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> OpType type;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SneakyThrows</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">                <span class="keyword">case</span> A: &#123;</span><br><span class="line">                    share.printA(i);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">case</span> B: &#123;</span><br><span class="line">                    share.printB(i);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">case</span> C: &#123;</span><br><span class="line">                    share.printC(i);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="运行效果-3"><a href="#运行效果-3" class="headerlink" title="运行效果"></a>运行效果</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-10-05 05:46:02.271 [t-A        ] INFO  com.laolang.jx.Share           - t-A::A-1::loop-1</span><br><span class="line">2024-10-05 05:46:02.273 [t-B        ] INFO  com.laolang.jx.Share           - t-B::B-1::loop-1</span><br><span class="line">2024-10-05 05:46:02.273 [t-B        ] INFO  com.laolang.jx.Share           - t-B::B-2::loop-1</span><br><span class="line">2024-10-05 05:46:02.273 [t-C        ] INFO  com.laolang.jx.Share           - t-C::C-1::loop-1</span><br><span class="line">2024-10-05 05:46:02.273 [t-C        ] INFO  com.laolang.jx.Share           - t-C::C-2::loop-1</span><br><span class="line">2024-10-05 05:46:02.273 [t-C        ] INFO  com.laolang.jx.Share           - t-C::C-3::loop-1</span><br><span class="line">2024-10-05 05:46:02.273 [t-A        ] INFO  com.laolang.jx.Share           - t-A::A-1::loop-2</span><br><span class="line">2024-10-05 05:46:02.273 [t-B        ] INFO  com.laolang.jx.Share           - t-B::B-1::loop-2</span><br><span class="line">2024-10-05 05:46:02.273 [t-B        ] INFO  com.laolang.jx.Share           - t-B::B-2::loop-2</span><br><span class="line">2024-10-05 05:46:02.274 [t-C        ] INFO  com.laolang.jx.Share           - t-C::C-1::loop-2</span><br><span class="line">2024-10-05 05:46:02.274 [t-C        ] INFO  com.laolang.jx.Share           - t-C::C-2::loop-2</span><br><span class="line">2024-10-05 05:46:02.274 [t-C        ] INFO  com.laolang.jx.Share           - t-C::C-3::loop-2</span><br><span class="line">2024-10-05 05:46:02.274 [t-A        ] INFO  com.laolang.jx.Share           - t-A::A-1::loop-3</span><br><span class="line">2024-10-05 05:46:02.274 [t-B        ] INFO  com.laolang.jx.Share           - t-B::B-1::loop-3</span><br><span class="line">2024-10-05 05:46:02.274 [t-B        ] INFO  com.laolang.jx.Share           - t-B::B-2::loop-3</span><br><span class="line">2024-10-05 05:46:02.274 [t-C        ] INFO  com.laolang.jx.Share           - t-C::C-1::loop-3</span><br><span class="line">2024-10-05 05:46:02.274 [t-C        ] INFO  com.laolang.jx.Share           - t-C::C-2::loop-3</span><br><span class="line">2024-10-05 05:46:02.274 [t-C        ] INFO  com.laolang.jx.Share           - t-C::C-3::loop-3</span><br></pre></td></tr></table></figure>

<h1 id="集合线程安全问题"><a href="#集合线程安全问题" class="headerlink" title="集合线程安全问题"></a>集合线程安全问题</h1><h2 id="ArrayList-线程安全问题"><a href="#ArrayList-线程安全问题" class="headerlink" title="ArrayList 线程安全问题"></a>ArrayList 线程安全问题</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JucHelloApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">                list.add(UUID.randomUUID().toString());</span><br><span class="line">                System.out.println(list);</span><br><span class="line">            &#125;, String.valueOf(i)).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>抛出异常</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Exception in thread &quot;1&quot; Exception in thread &quot;0&quot; Exception in thread &quot;3&quot; java.util.ConcurrentModificationException</span><br><span class="line">	at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:907)</span><br><span class="line">	at java.util.ArrayList$Itr.next(ArrayList.java:857)</span><br><span class="line">	at java.util.AbstractCollection.toString(AbstractCollection.java:461)</span><br><span class="line">	at java.lang.String.valueOf(String.java:2994)</span><br><span class="line">	at java.io.PrintStream.println(PrintStream.java:821)</span><br><span class="line">	at com.laolang.jx.JucHelloApplication.lambda$main$0(JucHelloApplication.java:16)</span><br><span class="line">	at java.lang.Thread.run(Thread.java:748)</span><br><span class="line">java.util.ConcurrentModificationException</span><br><span class="line">	at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:907)</span><br><span class="line">	at java.util.ArrayList$Itr.next(ArrayList.java:857)</span><br><span class="line">	at java.util.AbstractCollection.toString(AbstractCollection.java:461)</span><br><span class="line">	at java.lang.String.valueOf(String.java:2994)</span><br><span class="line">	at java.io.PrintStream.println(PrintStream.java:821)</span><br><span class="line">	at com.laolang.jx.JucHelloApplication.lambda$main$0(JucHelloApplication.java:16)</span><br><span class="line">	at java.lang.Thread.run(Thread.java:748)</span><br><span class="line">java.util.ConcurrentModificationException</span><br><span class="line">	at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:907)</span><br><span class="line">	at java.util.ArrayList$Itr.next(ArrayList.java:857)</span><br><span class="line">	at java.util.AbstractCollection.toString(AbstractCollection.java:461)</span><br><span class="line">	at java.lang.String.valueOf(String.java:2994)</span><br><span class="line">	at java.io.PrintStream.println(PrintStream.java:821)</span><br><span class="line">	at com.laolang.jx.JucHelloApplication.lambda$main$0(JucHelloApplication.java:16)</span><br><span class="line">	at java.lang.Thread.run(Thread.java:748)</span><br><span class="line">5:51:55: Execution finished &#x27;:juc-hello:JucHelloApplication.main()&#x27;.</span><br></pre></td></tr></table></figure>

<h2 id="解决方案一-Vector"><a href="#解决方案一-Vector" class="headerlink" title="解决方案一 Vector"></a>解决方案一 Vector</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"><span class="keyword">import</span> java.util.Vector;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JucHelloApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">Vector</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">                list.add(UUID.randomUUID().toString());</span><br><span class="line">                System.out.println(list);</span><br><span class="line">            &#125;, String.valueOf(i)).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="解决方案一-Collections"><a href="#解决方案一-Collections" class="headerlink" title="解决方案一 Collections"></a>解决方案一 Collections</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JucHelloApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;String&gt; list = Collections.synchronizedList(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">                list.add(UUID.randomUUID().toString());</span><br><span class="line">                System.out.println(list);</span><br><span class="line">            &#125;, String.valueOf(i)).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="解决方案一-CopyOnWriteArrayList"><a href="#解决方案一-CopyOnWriteArrayList" class="headerlink" title="解决方案一 CopyOnWriteArrayList"></a>解决方案一 CopyOnWriteArrayList</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CopyOnWriteArrayList;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JucHelloApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">CopyOnWriteArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">                list.add(UUID.randomUUID().toString());</span><br><span class="line">                System.out.println(list);</span><br><span class="line">            &#125;, String.valueOf(i)).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="线程工具类"><a href="#线程工具类" class="headerlink" title="线程工具类"></a>线程工具类</h1><h2 id="CountDownLatch"><a href="#CountDownLatch" class="headerlink" title="CountDownLatch"></a>CountDownLatch</h2><h3 id="四个方法"><a href="#四个方法" class="headerlink" title="四个方法"></a>四个方法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CountDownLatch(int count); //构造方法，创建一个值为count 的计数器。</span><br><span class="line">​</span><br><span class="line">await();//阻塞当前线程，将当前线程加入阻塞队列。</span><br><span class="line">​</span><br><span class="line">await(long timeout, TimeUnit unit);//在timeout的时间之内阻塞当前线程,时间一过则当前线程可以执行，</span><br><span class="line">​</span><br><span class="line">countDown();//对计数器进行递减1操作，当计数器递减至0时，当前线程会去唤醒阻塞队列里的所有线程。</span><br></pre></td></tr></table></figure>

<h3 id="一个示例"><a href="#一个示例" class="headerlink" title="一个示例"></a>一个示例</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//用于聚合所有的统计指标</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Map map=<span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line"><span class="comment">//创建计数器，这里需要统计4个指标</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> CountDownLatch countDownLatch=<span class="keyword">new</span> <span class="title class_">CountDownLatch</span>(<span class="number">4</span>);</span><br><span class="line">​</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">​</span><br><span class="line">    <span class="comment">//记录开始时间</span></span><br><span class="line">    <span class="type">long</span> startTime=System.currentTimeMillis();</span><br><span class="line">​</span><br><span class="line">    Thread countUserThread=<span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;正在统计新增用户数量&quot;</span>);</span><br><span class="line">                Thread.sleep(<span class="number">3000</span>);<span class="comment">//任务执行需要3秒</span></span><br><span class="line">                map.put(<span class="string">&quot;userNumber&quot;</span>,<span class="number">1</span>);<span class="comment">//保存结果值</span></span><br><span class="line">                countDownLatch.countDown();<span class="comment">//标记已经完成一个任务</span></span><br><span class="line">                System.out.println(<span class="string">&quot;统计新增用户数量完毕&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">​</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    Thread countOrderThread=<span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;正在统计订单数量&quot;</span>);</span><br><span class="line">                Thread.sleep(<span class="number">3000</span>);<span class="comment">//任务执行需要3秒</span></span><br><span class="line">                map.put(<span class="string">&quot;countOrder&quot;</span>,<span class="number">2</span>);<span class="comment">//保存结果值</span></span><br><span class="line">                countDownLatch.countDown();<span class="comment">//标记已经完成一个任务</span></span><br><span class="line">                System.out.println(<span class="string">&quot;统计订单数量完毕&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">​</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">​</span><br><span class="line">    Thread countGoodsThread=<span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;正在商品销量&quot;</span>);</span><br><span class="line">                Thread.sleep(<span class="number">3000</span>);<span class="comment">//任务执行需要3秒</span></span><br><span class="line">                map.put(<span class="string">&quot;countGoods&quot;</span>,<span class="number">3</span>);<span class="comment">//保存结果值</span></span><br><span class="line">                countDownLatch.countDown();<span class="comment">//标记已经完成一个任务</span></span><br><span class="line">                System.out.println(<span class="string">&quot;统计商品销量完毕&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">​</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">​</span><br><span class="line">    Thread countmoneyThread=<span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;正在总销售额&quot;</span>);</span><br><span class="line">                Thread.sleep(<span class="number">3000</span>);<span class="comment">//任务执行需要3秒</span></span><br><span class="line">                map.put(<span class="string">&quot;countmoney&quot;</span>,<span class="number">4</span>);<span class="comment">//保存结果值</span></span><br><span class="line">                countDownLatch.countDown();<span class="comment">//标记已经完成一个任务</span></span><br><span class="line">                System.out.println(<span class="string">&quot;统计销售额完毕&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">​</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//启动子线程执行任务</span></span><br><span class="line">    countUserThread.start();</span><br><span class="line">    countGoodsThread.start();</span><br><span class="line">    countOrderThread.start();</span><br><span class="line">    countmoneyThread.start();</span><br><span class="line">​</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//主线程等待所有统计指标执行完毕</span></span><br><span class="line">        countDownLatch.await();</span><br><span class="line">        <span class="type">long</span> endTime=System.currentTimeMillis();<span class="comment">//记录结束时间</span></span><br><span class="line">        System.out.println(<span class="string">&quot;------统计指标全部完成--------&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;统计结果为：&quot;</span>+map.toString());</span><br><span class="line">        System.out.println(<span class="string">&quot;任务总执行时间为&quot;</span>+(endTime-startTime)/<span class="number">1000</span>+<span class="string">&quot;秒&quot;</span>);</span><br><span class="line">​</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="阻塞队列"><a href="#阻塞队列" class="headerlink" title="阻塞队列"></a>阻塞队列</h1><h2 id="ArrayBlockingQueue"><a href="#ArrayBlockingQueue" class="headerlink" title="ArrayBlockingQueue"></a>ArrayBlockingQueue</h2><p><code>ArrayBlockingQueue</code> 和 <code>LinkedBlockingQueue</code></p>
<ol>
<li><code>ArrayBlockingQueue</code> 在生产者和消费者获取数据, 都是公用一个锁对象, 由此也意味着两者无法并行执行. </li>
<li><code>ArrayBlockingQueue</code> 插入或删除元素时不会产生或销毁任何额外的对象实例, 而 <code>LinkedBlockingQueue</code> 会生成一个额外的 <code>Node</code> 对象, 这在长时间内需要高效并发处理大批量数据时, 其对于 GC 的影响还是有一定的区别, <code>ArrayBlockingQueue</code> 默认使用非公平锁</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.NoSuchElementException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ArrayBlockingQueue;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.BlockingQueue;</span><br><span class="line"><span class="keyword">import</span> org.testng.Assert;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.BeforeTest;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BlockingQueueTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> BlockingQueue&lt;String&gt; queue;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">queueSize</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BeforeTest</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeTest</span><span class="params">()</span> &#123;</span><br><span class="line">        queue = <span class="literal">null</span>;</span><br><span class="line">        queue = <span class="keyword">new</span> <span class="title class_">ArrayBlockingQueue</span>&lt;&gt;(queueSize);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;code&gt;add&lt;/code&gt; 方法可以添加, &lt;code&gt;element&lt;/code&gt; 方法可以查看元素</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAdd</span><span class="params">()</span> &#123;</span><br><span class="line">        queue.add(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        queue.add(<span class="string">&quot;b&quot;</span>);</span><br><span class="line">        queue.add(<span class="string">&quot;c&quot;</span>);</span><br><span class="line">        Assert.assertEquals(queue.element(), <span class="string">&quot;a&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 超出最大容量, 会报异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test(expectedExceptions = IllegalStateException.class)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAddException</span><span class="params">()</span> &#123;</span><br><span class="line">        queue.add(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        queue.add(<span class="string">&quot;b&quot;</span>);</span><br><span class="line">        queue.add(<span class="string">&quot;c&quot;</span>);</span><br><span class="line">        queue.add(<span class="string">&quot;d&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;code&gt;remove&lt;/code&gt; 方法可以取出元素</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testRemove</span><span class="params">()</span> &#123;</span><br><span class="line">        queue.add(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        queue.add(<span class="string">&quot;b&quot;</span>);</span><br><span class="line">        queue.add(<span class="string">&quot;c&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">remove</span> <span class="operator">=</span> queue.remove();</span><br><span class="line">        Assert.assertEquals(remove, <span class="string">&quot;a&quot;</span>);</span><br><span class="line">        Assert.assertEquals(queue.element(), <span class="string">&quot;b&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果队列为空, &lt;code&gt;remove&lt;/code&gt; 方法会报异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test(expectedExceptions = NoSuchElementException.class)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testRemoveException</span><span class="params">()</span> &#123;</span><br><span class="line">        queue.add(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        queue.add(<span class="string">&quot;b&quot;</span>);</span><br><span class="line">        queue.add(<span class="string">&quot;c&quot;</span>);</span><br><span class="line">        queue.remove();</span><br><span class="line">        queue.remove();</span><br><span class="line">        queue.remove();</span><br><span class="line">        queue.remove();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;code&gt;offer&lt;/code&gt; 方法返回添加是否成功, &lt;code&gt;poll&lt;/code&gt; 方法如果没有取到则返回 &lt;code&gt;null&lt;/code&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testOfferAndPoll</span><span class="params">()</span> &#123;</span><br><span class="line">        Assert.assertTrue(queue.offer(<span class="string">&quot;a&quot;</span>));</span><br><span class="line">        Assert.assertTrue(queue.offer(<span class="string">&quot;b&quot;</span>));</span><br><span class="line">        Assert.assertTrue(queue.offer(<span class="string">&quot;c&quot;</span>));</span><br><span class="line">        Assert.assertFalse(queue.offer(<span class="string">&quot;d&quot;</span>));</span><br><span class="line">        Assert.assertEquals(queue.poll(), <span class="string">&quot;a&quot;</span>);</span><br><span class="line">        Assert.assertEquals(queue.poll(), <span class="string">&quot;b&quot;</span>);</span><br><span class="line">        Assert.assertEquals(queue.poll(), <span class="string">&quot;c&quot;</span>);</span><br><span class="line">        Assert.assertNull(queue.poll());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;code&gt;put&lt;/code&gt; 方法在队列已满时会阻塞</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPut</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        queue.put(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        queue.put(<span class="string">&quot;b&quot;</span>);</span><br><span class="line">        queue.put(<span class="string">&quot;c&quot;</span>);</span><br><span class="line">        queue.put(<span class="string">&quot;c&quot;</span>); <span class="comment">// 此时会阻塞</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;code&gt;take&lt;/code&gt; 方法在队列空时会阻塞</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testTake</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        queue.put(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        queue.put(<span class="string">&quot;b&quot;</span>);</span><br><span class="line">        queue.put(<span class="string">&quot;c&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Assert.assertEquals(queue.take(), <span class="string">&quot;a&quot;</span>);</span><br><span class="line">        Assert.assertEquals(queue.take(), <span class="string">&quot;b&quot;</span>);</span><br><span class="line">        Assert.assertEquals(queue.take(), <span class="string">&quot;c&quot;</span>);</span><br><span class="line">        queue.take(); <span class="comment">// 此时会阻塞</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="LinkedBlockingQueue"><a href="#LinkedBlockingQueue" class="headerlink" title="LinkedBlockingQueue"></a>LinkedBlockingQueue</h2><p><code>LinkedBlockingQueue</code> 生产者和消费者分别采用了独立的锁来控制数据同步<br>在生产者放入一个数据时, 队列会从生产者中获取数据,并缓存在队列内部, 而生产者立即返回; 只有当队列缓冲区达到最大值缓存容量时, 才会阻塞生产者队列, 指导消费者从队列中消费掉一份数据, 生产者线程会被唤醒, 繁殖对于消费者的处理也是一样.</p>
<h1 id="线程池"><a href="#线程池" class="headerlink" title="线程池"></a>线程池</h1><h2 id="线程池的参数"><a href="#线程池的参数" class="headerlink" title="线程池的参数"></a>线程池的参数</h2><table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>corePoolSize</td>
<td>线程池的核心线程数</td>
</tr>
<tr>
<td>maximumPoolSize</td>
<td>能容纳的最大线程数</td>
</tr>
<tr>
<td>keepAliveTime</td>
<td>空闲线程存活时间</td>
</tr>
<tr>
<td>unit</td>
<td>存活的时间单位</td>
</tr>
<tr>
<td>workQueue</td>
<td>存放提交但未执行任务的队列</td>
</tr>
<tr>
<td>threadFactory</td>
<td>创建线程的工厂类</td>
</tr>
<tr>
<td>handler</td>
<td>当代队列满后的拒绝策略</td>
</tr>
</tbody></table>
<h2 id="拒绝策略"><a href="#拒绝策略" class="headerlink" title="拒绝策略"></a>拒绝策略</h2><table>
<thead>
<tr>
<th>策略</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td><code>CallerRunsPolicy</code></td>
<td>当触发拒绝策略, 只要线程池没有关闭的话, 则使用调用线程直接运行任务. 一般并发比较小, 性能要求不高, 不允许失败. 但是, 由于调用者自己运行任务, 四任务提交速度过快, 可能导致程序阻塞, 性能效率上必然有损失</td>
</tr>
<tr>
<td><code>AbortPolicy</code></td>
<td>丢弃任务, 并抛出拒绝执行 <code>RejectedExecutionException</code> 异常信息. 线程池默认的拒绝策略. 必须处理好抛出的异常, 否则会打断当前的执行流程, 影响后续的人物执行</td>
</tr>
<tr>
<td><code>DiscardPolicy</code></td>
<td>丢弃</td>
</tr>
<tr>
<td><code>DiscardOldestPolicy</code></td>
<td>当触发拒绝策略, 只要线程池没有关闭的话, 丢弃阻塞队列 <code>workQueue</code> 中最老的一个任务, 并将新的任务加入</td>
</tr>
</tbody></table>
<h2 id="线程池的种类"><a href="#线程池的种类" class="headerlink" title="线程池的种类"></a>线程池的种类</h2><h3 id="newCachedThreadPool"><a href="#newCachedThreadPool" class="headerlink" title="newCachedThreadPool"></a>newCachedThreadPool</h3><p><strong>作用</strong></p>
<p>创建一个可缓存线程池，如果线程池长度超过处理需要，可灵活回收空闲线程，若无可回收，则新建线程</p>
<p><strong>特点</strong></p>
<ul>
<li>线程池中数量没有固定，可达到最大值（Interger. MAX_VALUE）</li>
<li>线程池中的线程可进行缓存重复利用和回收（回收默认时间为 1 分钟）</li>
<li>当线程池中，没有可用线程，会重新创建一个线程</li>
</ul>
<p><strong>创建方式</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> ExecutorService <span class="title function_">newCachedThreadPool</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ThreadPoolExecutor</span>(<span class="number">0</span>, Integer.MAX_VALUE,</span><br><span class="line">                                    <span class="number">60L</span>, TimeUnit.SECONDS,</span><br><span class="line">                                    <span class="keyword">new</span> <span class="title class_">SynchronousQueue</span>&lt;Runnable&gt;());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>场景</strong><br>适用于创建一个可无限扩大的线程池，服务器负载压力较轻，执行时间较短，任务多的场景</p>
<h3 id="newFixedThreadPool"><a href="#newFixedThreadPool" class="headerlink" title="newFixedThreadPool"></a>newFixedThreadPool</h3><p><strong>作用</strong></p>
<p>创建一个可重用固定线程数的线程池，以共享的无界队列方式来运行这些线程。在任意点，在大多数线程会处于处理任务的活动状态。如果在所有线程处于活动状态时提交附加任务，则在有可用线程之前，附加任务将在队列中等待。如果在关闭前的执行期间由于失败而导致任何线程终止，那么一个新线程将代替它执行后续的任务（如果需要）。在某个线程被显式地关闭之前，池中的线程将一直存在。</p>
<p><em>特征</em>*</p>
<ul>
<li>线程池中的线程处于一定的量，可以很好的控制线程的并发量</li>
<li>线程可以重复被使用，在显示关闭之前，都将一直存在</li>
<li>超出一定量的线程被提交时候需在队列中等待</li>
</ul>
<p><strong>创建方式</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> ExecutorService <span class="title function_">newFixedThreadPool</span><span class="params">(<span class="type">int</span> nThreads, ThreadFactory threadFactory)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ThreadPoolExecutor</span>(nThreads, nThreads,</span><br><span class="line">                                    <span class="number">0L</span>, TimeUnit.MILLISECONDS,</span><br><span class="line">                                    <span class="keyword">new</span> <span class="title class_">LinkedBlockingQueue</span>&lt;Runnable&gt;(),</span><br><span class="line">                                    threadFactory);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>场景</strong><br>适用于可以预测线程数量的业务中，或者服务器负载较重，对线程数有严格限制的场景</p>
<h2 id="newSingleThreadExecutor"><a href="#newSingleThreadExecutor" class="headerlink" title="newSingleThreadExecutor"></a>newSingleThreadExecutor</h2><p><strong>作用</strong><br>创建一个使用单个 worker 线程的 Executor，以无界队列方式来运行该线程。（注意，如果因为在关闭前的执行期间出现失败而终止了此单个线程，那么如果需要，一个新线程将代替它执行后续的任务）。可保证顺序地执行各个任务，并且在任意给定的时间不会有多个线程是活动的。与其他等效的newFixedThreadPool 不同，可保证无需重新配置此方法所返回的执行程序即可使用其他的线程。</p>
<p><strong>特征</strong><br>线程池中最多执行 1 个线程，之后提交的线程活动将会排在队列中以此执行</p>
<p><strong>创建方式</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> ExecutorService <span class="title function_">newSingleThreadExecutor</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">FinalizableDelegatedExecutorService</span></span><br><span class="line">        (<span class="keyword">new</span> <span class="title class_">ThreadPoolExecutor</span>(<span class="number">1</span>, <span class="number">1</span>,</span><br><span class="line">                                <span class="number">0L</span>, TimeUnit.MILLISECONDS,</span><br><span class="line">                                <span class="keyword">new</span> <span class="title class_">LinkedBlockingQueue</span>&lt;Runnable&gt;()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>场景</strong><br>适用于需要保证顺序执行各个任务，并且在任意时间点，不会同时有多个线程的场景</p>
<h2 id="newScheduleThreadPool"><a href="#newScheduleThreadPool" class="headerlink" title="newScheduleThreadPool"></a>newScheduleThreadPool</h2><p><strong>作用</strong><br>线程池支持定时以及周期性执行任务，创建一个 corePoolSize 为传入参数，最大线程数为整形的最大数的线程池**<br><strong>特征</strong></p>
<ol>
<li>线程池中具有指定数量的线程，即便是空线程也将保留 </li>
<li>可定时或者延迟执行线程活动</li>
</ol>
<p><strong>创建方式</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> ScheduledExecutorService <span class="title function_">newScheduledThreadPool</span><span class="params">(</span></span><br><span class="line"><span class="params">        <span class="type">int</span> corePoolSize, ThreadFactory threadFactory)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ScheduledThreadPoolExecutor</span>(corePoolSize, threadFactory);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>场景</strong><br>适用于需要多个后台线程执行周期任务的场景</p>
<h2 id="newWorkStealingPool"><a href="#newWorkStealingPool" class="headerlink" title="newWorkStealingPool"></a>newWorkStealingPool</h2><p>jdk1.8 提供的线程池，底层使用的是 ForkJoinPool 实现，创建一个拥有多个任务队列的线程池，可以减少连接数，创建当前可用 cpu 核数的线程来并行执行任务</p>
<p><strong>创建方式</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> ExecutorService <span class="title function_">newWorkStealingPool</span><span class="params">(<span class="type">int</span> parallelism)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ForkJoinPool</span></span><br><span class="line">            (parallelism,</span><br><span class="line">                    ForkJoinPool.defaultForkJoinWorkerThreadFactory,</span><br><span class="line">                    <span class="literal">null</span>, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> parallelism 并行界别</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> factory 用户创建 ForkJoinPool 中使用的线程</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> handler 用于处理工作线程未处理的异常</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> asyncMode 用于控制 WorkQueue 的工作模式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ForkJoinPool</span><span class="params">(<span class="type">int</span> parallelism,</span></span><br><span class="line"><span class="params">                    ForkJoinPool.ForkJoinWorkerThreadFactory factory,</span></span><br><span class="line"><span class="params">                    Thread.UncaughtExceptionHandler handler,</span></span><br><span class="line"><span class="params">                    <span class="type">boolean</span> asyncMode)</span></span><br></pre></td></tr></table></figure>

<p><strong>场景</strong><br>适用于大耗时，可并行执行的场景</p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><ol>
<li>在创建了线程池后，线程池中的线程数为零</li>
<li>当调用 execute()方法添加一个请求任务时，线程池会做出如下判断：<br>2.1 如果正在运行的线程数量小于 corePoolSize，那么马上创建线程运行这个任务；<br>2.2 如果正在运行的线程数量大于或等于 corePoolSize，那么将这个任务放入队列；<br>2.3 如果这个时候队列满了且正在运行的线程数量还小于 maximumPoolSize，那么还是要创建非核心线程立刻运行这个任务；<br>2.4 如果队列满了且正在运行的线程数量大于或等于 maximumPoolSize，那么线程池会启动饱和拒绝策略来执行。</li>
<li>当一个线程完成任务时，它会从队列中取下一个任务来执行</li>
<li>当一个线程无事可做超过一定的时间（keepAliveTime）时，线程会判断：<br>4.1 如果当前运行的线程数大于 corePoolSize，那么这个线程就被停掉。<br>4.2 所以线程池的所有任务完成后，它最终会收缩到 corePoolSize 的大小。</li>
</ol>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>项目中创建多线程时，使用常见的三种线程池创建方式，单一、可变、定长都有一定问题，原因是 FixedThreadPool 和 SingleThreadExecutor 底层都是用LinkedBlockingQueue 实现的，这个队列最大长度 Integer.MAX_VALUE，容易导致 OOM。所以实际生产一般自己通过 ThreadPoolExecutor 的 7 个参数，自定义线程池</p>
<p><img src="/images/2024-09-12-juc-base/001.png"></p>
]]></content>
      <categories>
        <category>java</category>
        <category>juc</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>juc</tag>
      </tags>
  </entry>
  <entry>
    <title>gradle 基本使用</title>
    <url>/2024/09/12/gradle-study/</url>
    <content><![CDATA[<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>在这里 <a href="https://services.gradle.org/distributions/">https://services.gradle.org/distributions/</a> 可以下载所有版本的 gralde , 我下载的是 <a href="https://services.gradle.org/distributions/gradle-8.10-all.zip">https://services.gradle.org/distributions/gradle-8.10-all.zip</a></p>
<h1 id="关于文档"><a href="#关于文档" class="headerlink" title="关于文档"></a>关于文档</h1><h2 id="一些文档汇总"><a href="#一些文档汇总" class="headerlink" title="一些文档汇总"></a>一些文档汇总</h2><p><a href="https://docs.gradle.org/8.10/userguide/userguide.html">gradle 8.10 官方文档</a></p>
<p><a href="https://doc.qzxdp.cn/gradle/8.1.1/userguide/userguide.html">gradle 用户手册</a></p>
<p><a href="https://gradle.github.net.cn/">gradle 中文网</a> 目测像是机翻</p>
<h2 id="怎么查找每个版本对应的官方文档"><a href="#怎么查找每个版本对应的官方文档" class="headerlink" title="怎么查找每个版本对应的官方文档"></a>怎么查找每个版本对应的官方文档</h2><p>第一种就是在官网上看, 在这个地址: <a href="https://gradle.org/releases/">https://gradle.org/releases/</a>, 有每个版本对应的手册</p>
<p><img src="/images/2024-09-12-gradle-study/001.png"></p>
<p>第二种就是在下载的 <code>gradle-xxx-all.zip</code> 中</p>
<div class="note info no-icon simple"><p>打开 <code>userguide.html</code> 即可, 那个 <code>userguide_single.html</code> 并不好用<br><code>userguide.pdf</code> 是 pdf 版本</p>
</div>

<p><img src="/images/2024-09-12-gradle-study/002.png"></p>
<h2 id="一个视频教程"><a href="#一个视频教程" class="headerlink" title="一个视频教程"></a>一个视频教程</h2><p><a href="https://www.bilibili.com/video/BV1Fc411x7xF">Gradle 教程 已完结 (基于Kotlin DSL讲解) 4K蓝光画质 超强的脚本式项目依赖和构建工具</a></p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ol>
<li>解压后将 <code>bin</code> 目录添加到环境变量</li>
<li>添加 <code>GRADLE_USER_HOME</code> 环境变量, 关于此环境变量的作用可参考: <a href="https://blog.csdn.net/LG_15011399296/article/details/134333647">GRADLE_USER_HOME用法指南</a></li>
</ol>
<h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h1><h2 id="直接命令行新建"><a href="#直接命令行新建" class="headerlink" title="直接命令行新建"></a>直接命令行新建</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">md spring-hello</span><br><span class="line">cd spring-hello</span><br><span class="line">gradle init</span><br></pre></td></tr></table></figure>

<p>选项如下</p>
<table>
<thead>
<tr>
<th>步骤</th>
<th>我的选择</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>Select type of build to generate</td>
<td>1</td>
<td>一个应用程序</td>
</tr>
<tr>
<td>Select implementation language</td>
<td>1</td>
<td>语言为 java</td>
</tr>
<tr>
<td>Enter target Java version</td>
<td>8</td>
<td>当前我主要使用 java8</td>
</tr>
<tr>
<td>project name</td>
<td>默认</td>
<td></td>
</tr>
<tr>
<td>Select application structure</td>
<td>1</td>
<td>先学会使用单模块项目</td>
</tr>
<tr>
<td>Select build script DSL</td>
<td>1</td>
<td>官方推荐 kotlin dsl</td>
</tr>
<tr>
<td>Select test framework</td>
<td>2</td>
<td>个人习惯使用 testng</td>
</tr>
<tr>
<td>Generate build using new APIs and behavior</td>
<td>默认(即 no)</td>
<td>gradle API 变更极快, 不建议使用哪些尚不稳定的 API</td>
</tr>
</tbody></table>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\github\gradle-study\spring-hello&gt;gradle init</span><br><span class="line">Starting a Gradle Daemon (subsequent builds will be faster)</span><br><span class="line"></span><br><span class="line">Select type of build to generate:</span><br><span class="line">  1: Application</span><br><span class="line">  2: Library</span><br><span class="line">  3: Gradle plugin</span><br><span class="line">  4: Basic (build structure only)</span><br><span class="line">Enter selection (default: Application) [1..4] 1</span><br><span class="line"></span><br><span class="line">Select implementation language:</span><br><span class="line">  1: Java</span><br><span class="line">  2: Kotlin</span><br><span class="line">  3: Groovy</span><br><span class="line">  4: Scala</span><br><span class="line">  5: C++</span><br><span class="line">  6: Swift</span><br><span class="line">Enter selection (default: Java) [1..6] 1</span><br><span class="line"></span><br><span class="line">Enter target Java version (min: 7, default: 21): 8</span><br><span class="line"></span><br><span class="line">Project name (default: spring-hello):</span><br><span class="line"></span><br><span class="line">Select application structure:</span><br><span class="line">  1: Single application project</span><br><span class="line">  2: Application and library project</span><br><span class="line">Enter selection (default: Single application project) [1..2] 1</span><br><span class="line"></span><br><span class="line">Select build script DSL:</span><br><span class="line">  1: Kotlin</span><br><span class="line">  2: Groovy</span><br><span class="line">Enter selection (default: Kotlin) [1..2] 1</span><br><span class="line"></span><br><span class="line">Select test framework:</span><br><span class="line">  1: JUnit 4</span><br><span class="line">  2: TestNG</span><br><span class="line">  3: Spock</span><br><span class="line">  4: JUnit Jupiter</span><br><span class="line">Enter selection (default: JUnit Jupiter) [1..4] 2</span><br><span class="line"></span><br><span class="line">Generate build using new APIs and behavior (some features may change in the next minor release)? (default: no) [yes, no]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; Task :init</span><br><span class="line">Learn more about Gradle by exploring our Samples at https://docs.gradle.org/8.10/samples/sample_building_java_applications.html</span><br><span class="line"></span><br><span class="line">Deprecated Gradle features were used in this build, making it incompatible with Gradle 9.0.</span><br><span class="line"></span><br><span class="line">You can use &#x27;--warning-mode all&#x27; to show the individual deprecation warnings and determine if they come from your own scripts or plugins.</span><br><span class="line"></span><br><span class="line">For more on this, please refer to https://docs.gradle.org/8.10/userguide/command_line_interface.html#sec:command_line_warnings in the Gradle documentation.</span><br><span class="line"></span><br><span class="line">BUILD SUCCESSFUL in 31s</span><br><span class="line">1 actionable task: 1 executed</span><br><span class="line">E:\github\gradle-study\spring-hello&gt;</span><br></pre></td></tr></table></figure>

<h2 id="新建后的一些配置"><a href="#新建后的一些配置" class="headerlink" title="新建后的一些配置"></a>新建后的一些配置</h2><p>不要着急用 <code>idea</code> 打开, 先修改一下 <code>gradle/wrapper/gradle-wrapper.properties</code></p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">distributionBase</span>=<span class="string">GRADLE_USER_HOME</span></span><br><span class="line"><span class="attr">distributionPath</span>=<span class="string">wrapper/dists</span></span><br><span class="line"> <span class="attr">distributionUrl</span>=<span class="string">https\://services.gradle.org/distributions/gradle-8.10-bin.zip</span></span><br><span class="line"></span><br><span class="line"> <span class="attr">使用腾讯云镜像下载</span> <span class="string">gradle</span></span><br><span class="line"><span class="attr">distributionUrl</span>=<span class="string">https\://mirrors.cloud.tencent.com/gradle/gradle-8.10-bin.zip</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networkTimeout</span>=<span class="string">10000</span></span><br><span class="line"><span class="attr">validateDistributionUrl</span>=<span class="string">true</span></span><br><span class="line"><span class="attr">zipStoreBase</span>=<span class="string">GRADLE_USER_HOME</span></span><br><span class="line"><span class="attr">zipStorePath</span>=<span class="string">wrapper/dists</span></span><br></pre></td></tr></table></figure>

<p>修改 <code>spring-hello/app/build.gradle.kts</code>, 添加阿里云镜像</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">repositories &#123;</span><br><span class="line">    maven(&quot;https://maven.aliyun.com/repository/public/&quot;)</span><br><span class="line">    maven(&quot;https://maven.aliyun.com/repository/spring/&quot;)</span><br><span class="line">    mavenLocal()</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后用 <code>idea</code> 打开, 修改一下项目配置 File -&gt; Settings -&gt; Build, Execution, Deployment -&gt; Build Tools -&gt; Gradle</p>
<p><img src="/images/2024-09-12-gradle-study/003.png"></p>
<p>开始运行</p>
<p><img src="/images/2024-09-12-gradle-study/004.png"></p>
<h1 id="单模块项目的基本操作"><a href="#单模块项目的基本操作" class="headerlink" title="单模块项目的基本操作"></a>单模块项目的基本操作</h1><h2 id="修改结构"><a href="#修改结构" class="headerlink" title="修改结构"></a>修改结构</h2><p>其实 <code>gradle</code> 新建的单模块项目还是一个多模块结构的, 这与我在 <code>maven</code> 中的使用习惯不一致</p>
<ol>
<li>直接复制 <code>app</code> 目录中的所有内容到根目录</li>
<li>删除 <code>app</code> 目录</li>
</ol>
<h2 id="添加依赖并测试"><a href="#添加依赖并测试" class="headerlink" title="添加依赖并测试"></a>添加依赖并测试</h2><h3 id="关于-version-catalog"><a href="#关于-version-catalog" class="headerlink" title="关于 version catalog"></a>关于 version catalog</h3><p>目前 <code>gradle</code> 在新建项目时会自动创建 <code>gradle/libs.versions.toml</code>, 这个目录就是所谓的 <code>version catalog</code>, 关于这个文件的作用可参考: </p>
<p><a href="https://doc.qzxdp.cn/gradle/8.1.1/userguide/platforms.html">gradle 用户手册 - 在项目之间共享依赖版本</a></p>
<p><a href="https://blog.csdn.net/qq_24889033/article/details/125307004">如何使用Gradle7.0+的VERSION_CATALOG</a></p>
<p>我们可以在 <code>libs.versions.toml</code> 中添加新的依赖并引用</p>
<h3 id="libs-versions-toml"><a href="#libs-versions-toml" class="headerlink" title="libs.versions.toml"></a>libs.versions.toml</h3><figure class="highlight toml"><table><tr><td class="code"><pre><span class="line"><span class="section">[versions]</span></span><br><span class="line"><span class="attr">lombok-version</span> = <span class="string">&quot;1.18.30&quot;</span></span><br><span class="line"><span class="attr">guava-version</span> = <span class="string">&quot;23.0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logback-version</span> = <span class="string">&quot;1.2.12&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">testng-version</span> = <span class="string">&quot;6.14.3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[libraries]</span></span><br><span class="line"><span class="attr">lombok</span> = &#123; module = <span class="string">&quot;org.projectlombok:lombok&quot;</span>, version.ref = <span class="string">&quot;lombok-version&quot;</span> &#125;</span><br><span class="line"><span class="attr">guava</span> = &#123; module = <span class="string">&quot;com.google.guava:guava&quot;</span>, version.ref = <span class="string">&quot;guava-version&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">logback-classic</span> = &#123;module = <span class="string">&quot;ch.qos.logback:logback-classic&quot;</span>,version.ref = <span class="string">&quot;logback-version&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">testng</span> = &#123; module = <span class="string">&quot;org.testng:testng&quot;</span>, version.ref = <span class="string">&quot;testng-version&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="section">[bundles]</span></span><br><span class="line"><span class="attr">logback</span> = [<span class="string">&quot;logback-classic&quot;</span>]</span><br></pre></td></tr></table></figure>

<h3 id="build-gradle-kts"><a href="#build-gradle-kts" class="headerlink" title="build.gradle.kts"></a>build.gradle.kts</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.gradle.api.tasks.testing.logging.TestExceptionFormat</span><br><span class="line"></span><br><span class="line">plugins &#123;</span><br><span class="line">    application</span><br><span class="line">    jacoco</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">repositories &#123;</span><br><span class="line">    maven(<span class="string">&quot;https://maven.aliyun.com/repository/public/&quot;</span>)</span><br><span class="line">    maven(<span class="string">&quot;https://maven.aliyun.com/repository/spring/&quot;</span>)</span><br><span class="line">    mavenLocal()</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    compileOnly(libs.lombok)</span><br><span class="line">    annotationProcessor(libs.lombok)</span><br><span class="line">    implementation(libs.guava)</span><br><span class="line"></span><br><span class="line">    implementation(libs.bundles.logback)</span><br><span class="line"></span><br><span class="line">    testImplementation(libs.testng)</span><br><span class="line">    testCompileOnly(libs.lombok)</span><br><span class="line">    testAnnotationProcessor(libs.lombok)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">java &#123;</span><br><span class="line">    toolchain &#123;</span><br><span class="line">        languageVersion = JavaLanguageVersion.of(<span class="number">8</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">application &#123;</span><br><span class="line">    mainClass = <span class="string">&quot;com.laolang.jx.SpringHelloApp&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;Test&gt;(<span class="string">&quot;test&quot;</span>) &#123;</span><br><span class="line">    useTestNG &#123;</span><br><span class="line">        suites(<span class="string">&quot;testng.xml&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 输出详细日志</span></span><br><span class="line">    testLogging &#123;</span><br><span class="line">        <span class="comment">// 记录日志的事件类型</span></span><br><span class="line">        events(<span class="string">&quot;FAILED&quot;</span>, <span class="string">&quot;PASSED&quot;</span>, <span class="string">&quot;SKIPPED&quot;</span>, <span class="string">&quot;STANDARD_ERROR&quot;</span>, <span class="string">&quot;STANDARD_OUT&quot;</span>, <span class="string">&quot;STARTED&quot;</span>)</span><br><span class="line">        <span class="comment">// 记录测试异常的格式</span></span><br><span class="line">        <span class="comment">// FULL: 完整显示异常</span></span><br><span class="line">        <span class="comment">// SHORT: 异常的简短显示</span></span><br><span class="line">        exceptionFormat = TestExceptionFormat.FULL</span><br><span class="line">        <span class="comment">// 是否记录标准输出和标准错误的输出</span></span><br><span class="line">        showStandardStreams = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    finalizedBy(tasks.jacocoTestReport)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * jacoco 任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;JacocoReport&gt;(<span class="string">&quot;jacocoTestReport&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">// 依赖于测试任务</span></span><br><span class="line">    dependsOn(tasks.test)</span><br><span class="line"></span><br><span class="line">    reports &#123;</span><br><span class="line">        <span class="comment">// 把不需要的报告去掉</span></span><br><span class="line">        xml.required.<span class="keyword">set</span>(<span class="literal">false</span>)</span><br><span class="line">        csv.required.<span class="keyword">set</span>(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 只启用 html 报告</span></span><br><span class="line">        html.required.<span class="keyword">set</span>(<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// jacoco 报告位置</span></span><br><span class="line">        html.outputLocation.<span class="keyword">set</span>(layout.buildDirectory.dir(<span class="string">&quot;jacocoHtml&quot;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="解决中文乱码"><a href="#解决中文乱码" class="headerlink" title="解决中文乱码"></a>解决中文乱码</h3><p>如果此时直接运行, 在 <code>jacoco</code> 报告中查看代码时会有中文乱码的问题, 可以修改 <code>gradlew.bat</code> , 避免中文乱码, 同时也建议使用 <code>gradlew.bat</code> 来运行, 即通过 <code>wrapper</code> 运行 <code>gradle</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set DEFAULT_JVM_OPTS=&quot;-Xmx64m&quot; &quot;-Xms64m&quot; &quot;-Dfile.encoding=UTF-8&quot;</span><br></pre></td></tr></table></figure>

<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p>此时直接运行 <code>gradlew.bat clean test</code> 即可, 运行之后可以查看如下两个报告</p>
<ol>
<li><code>build/jacocoHtml/index.html</code> 是 <code>jacoco</code> 的报告</li>
<li><code>build/reports/tests/test/index.html</code> 是 <code>gradle</code> 的测试报告</li>
</ol>
<p><img src="/images/2024-09-12-gradle-study/005.png"></p>
<p><img src="/images/2024-09-12-gradle-study/006.png"></p>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ol>
<li><code>lombok</code> 需要同时添加编译依赖和测试依赖</li>
<li><code>gradle</code> 默认不会输出测试日志, 需要配置</li>
<li>尽量使用 <code>wrapper</code> 运行</li>
</ol>
<h2 id="打包与发布"><a href="#打包与发布" class="headerlink" title="打包与发布"></a>打包与发布</h2><h3 id="build-gradle-kts-1"><a href="#build-gradle-kts-1" class="headerlink" title="build.gradle.kts"></a>build.gradle.kts</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar</span><br><span class="line"><span class="keyword">import</span> org.gradle.api.tasks.testing.logging.TestExceptionFormat</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加插件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">plugins &#123;</span><br><span class="line">    application</span><br><span class="line">    jacoco</span><br><span class="line">    id(<span class="string">&quot;maven-publish&quot;</span>)</span><br><span class="line">    id(<span class="string">&quot;com.github.johnrengelman.shadow&quot;</span>) version <span class="string">&quot;7.0.0&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 配置仓库</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">repositories &#123;</span><br><span class="line">    maven(<span class="string">&quot;https://maven.aliyun.com/repository/public/&quot;</span>)</span><br><span class="line">    maven(<span class="string">&quot;https://maven.aliyun.com/repository/spring/&quot;</span>)</span><br><span class="line">    mavenLocal()</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 项目坐标</span></span><br><span class="line">group = <span class="string">&quot;com.laolang.jx&quot;</span></span><br><span class="line">version = <span class="string">&quot;0.1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 声明启动类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">application &#123;</span><br><span class="line">    mainClass = <span class="string">&quot;com.laolang.jx.SpringHelloApp&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置依赖</span></span><br><span class="line">dependencies &#123;</span><br><span class="line">    compileOnly(libs.lombok)</span><br><span class="line">    annotationProcessor(libs.lombok)</span><br><span class="line">    implementation(libs.guava)</span><br><span class="line"></span><br><span class="line">    implementation(libs.bundles.logback)</span><br><span class="line"></span><br><span class="line">    testImplementation(libs.testng)</span><br><span class="line">    testCompileOnly(libs.lombok)</span><br><span class="line">    testAnnotationProcessor(libs.lombok)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 打包时生成 source.jar 和 javadoc.jar</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">configure&lt;JavaPluginExtension&gt; &#123;</span><br><span class="line">    withSourcesJar()</span><br><span class="line">    withJavadocJar()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * java 编译配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.withType&lt;JavaCompile&gt; &#123;</span><br><span class="line">    options.encoding = Charsets.UTF_8.name()</span><br><span class="line">    sourceCompatibility = JavaVersion.VERSION_1_8.toString()</span><br><span class="line">    targetCompatibility = JavaVersion.VERSION_1_8.toString()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * javadoc</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.withType&lt;Javadoc&gt; &#123;</span><br><span class="line">    options &#123;</span><br><span class="line">        encoding = Charsets.UTF_8.name()</span><br><span class="line">        charset(Charsets.UTF_8.name())</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 忽略 javadoc 报错</span></span><br><span class="line">    isFailOnError = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;Test&gt;(<span class="string">&quot;test&quot;</span>) &#123;</span><br><span class="line">    useTestNG &#123;</span><br><span class="line">        suites(<span class="string">&quot;testng.xml&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 输出详细日志</span></span><br><span class="line">    testLogging &#123;</span><br><span class="line">        <span class="comment">// 记录日志的事件类型</span></span><br><span class="line">        events(<span class="string">&quot;FAILED&quot;</span>, <span class="string">&quot;PASSED&quot;</span>, <span class="string">&quot;SKIPPED&quot;</span>, <span class="string">&quot;STANDARD_ERROR&quot;</span>, <span class="string">&quot;STANDARD_OUT&quot;</span>, <span class="string">&quot;STARTED&quot;</span>)</span><br><span class="line">        <span class="comment">// 记录测试异常的格式</span></span><br><span class="line">        <span class="comment">// FULL: 完整显示异常</span></span><br><span class="line">        <span class="comment">// SHORT: 异常的简短显示</span></span><br><span class="line">        exceptionFormat = TestExceptionFormat.FULL</span><br><span class="line">        <span class="comment">// 是否记录标准输出和标准错误的输出</span></span><br><span class="line">        showStandardStreams = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    finalizedBy(tasks.jacocoTestReport)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * jacoco 任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;JacocoReport&gt;(<span class="string">&quot;jacocoTestReport&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">// 依赖于测试任务</span></span><br><span class="line">    dependsOn(tasks.test)</span><br><span class="line"></span><br><span class="line">    reports &#123;</span><br><span class="line">        <span class="comment">// 把不需要的报告去掉</span></span><br><span class="line">        xml.required.<span class="keyword">set</span>(<span class="literal">false</span>)</span><br><span class="line">        csv.required.<span class="keyword">set</span>(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 只启用 html 报告</span></span><br><span class="line">        html.required.<span class="keyword">set</span>(<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// jacoco 报告位置</span></span><br><span class="line">        html.outputLocation.<span class="keyword">set</span>(layout.buildDirectory.dir(<span class="string">&quot;jacocoHtml&quot;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 打包可执行 jar</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;ShadowJar&gt;(<span class="string">&quot;shadowJar&quot;</span>) &#123;</span><br><span class="line">    archiveBaseName.<span class="keyword">set</span>(project.name)</span><br><span class="line">    archiveVersion.<span class="keyword">set</span>(project.version.toString())</span><br><span class="line">    archiveFileName.<span class="keyword">set</span>(project.name + <span class="string">&quot;.jar&quot;</span>)</span><br><span class="line"></span><br><span class="line">    destinationDirectory.<span class="keyword">set</span>(layout.buildDirectory.dir(<span class="string">&quot;shaded&quot;</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 发布到本地</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">publishing &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        mavenLocal()</span><br><span class="line">    &#125;</span><br><span class="line">    publications &#123;</span><br><span class="line">        create&lt;MavenPublication&gt;(<span class="string">&quot;maven&quot;</span>) &#123;</span><br><span class="line">            groupId = project.group.toString()</span><br><span class="line">            artifactId = project.name</span><br><span class="line">            version = project.version.toString()</span><br><span class="line"></span><br><span class="line">            from(components[<span class="string">&quot;java&quot;</span>])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h3><ol>
<li>执行 <code>gradlew.bat build</code>, 可在 <code>build/shaded</code> 目录下生成可执行 jar</li>
<li>执行 <code>gradlew.bat publish</code> 可以发布到本地 maven 仓库</li>
</ol>
<h3 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h3><p>如果没有在家目录的 <code>.m2/settings.xml</code> 中指定本地仓库路径, 那么默认会发布到 C 盘</p>
<h2 id="使用-bom"><a href="#使用-bom" class="headerlink" title="使用 bom"></a>使用 bom</h2><h3 id="如何引入-maven-bom"><a href="#如何引入-maven-bom" class="headerlink" title="如何引入 maven bom"></a>如何引入 maven bom</h3><p>在 <code>maven</code> 项目中经常使用如下代码</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-framework-bom<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在 <code>gradle</code> 中同样具备此功能</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line"></span><br><span class="line">    implementation(platform(&quot;org.springframework:spring-framework-bom:5.3.31&quot;))</span><br><span class="line"></span><br><span class="line">    implementation(&quot;org.springframework:spring-context&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://doc.qzxdp.cn/gradle/8.1.1/userguide/platforms.html#sub:bom_import">gradle 中文手册 导入 Maven BOM</a></p>
<p><a href="https://stackoverflow.com/questions/53619890/how-to-use-a-maven-bom-for-spring-in-gradle">stack overflow How to use a maven BOM for Spring in Gradle?</a></p>
<p><a href="https://developer.aliyun.com/article/1025091">Gradle-04：BOM管理依赖版本</a></p>
<h2 id="查看和解决依赖冲突"><a href="#查看和解决依赖冲突" class="headerlink" title="查看和解决依赖冲突"></a>查看和解决依赖冲突</h2><h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><p>例如引入如下依赖</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">implementation(&quot;com.baomidou:mybatis-plus:3.5.1&quot;)</span><br><span class="line">implementation(&quot;com.github.pagehelper:pagehelper:5.3.0&quot;)</span><br></pre></td></tr></table></figure>

<h3 id="查看方式一"><a href="#查看方式一" class="headerlink" title="查看方式一"></a>查看方式一</h3><p>运行 <code>gradle dependencies</code> 可以看到 <code>pagehelper</code> 和 <code>mybatis-plus</code> 同时引入了 <code>jsqlparser</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------</span><br><span class="line">Root project &#x27;spring-hello&#x27;</span><br><span class="line">------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">annotationProcessor - Annotation processors and their dependencies for source set &#x27;main&#x27;.</span><br><span class="line">\--- org.projectlombok:lombok:1.18.30</span><br><span class="line"></span><br><span class="line">apiElements - API elements for main. (n)</span><br><span class="line">No dependencies</span><br><span class="line"></span><br><span class="line">archives - Configuration for archive artifacts. (n)</span><br><span class="line">No dependencies</span><br><span class="line"></span><br><span class="line">compileClasspath - Compile classpath for source set &#x27;main&#x27;.</span><br><span class="line">+--- org.projectlombok:lombok:1.18.30</span><br><span class="line">+--- ch.qos.logback:logback-classic:1.2.12</span><br><span class="line">|    +--- ch.qos.logback:logback-core:1.2.12</span><br><span class="line">|    \--- org.slf4j:slf4j-api:1.7.32</span><br><span class="line">+--- com.google.guava:guava:23.0</span><br><span class="line">|    +--- com.google.code.findbugs:jsr305:1.3.9</span><br><span class="line">|    +--- com.google.errorprone:error_prone_annotations:2.0.18</span><br><span class="line">|    +--- com.google.j2objc:j2objc-annotations:1.1</span><br><span class="line">|    \--- org.codehaus.mojo:animal-sniffer-annotations:1.14</span><br><span class="line">+--- com.baomidou:mybatis-plus:3.5.1</span><br><span class="line">|    \--- com.baomidou:mybatis-plus-extension:3.5.1</span><br><span class="line">|         +--- com.baomidou:mybatis-plus-core:3.5.1</span><br><span class="line">|         |    +--- com.baomidou:mybatis-plus-annotation:3.5.1</span><br><span class="line">|         |    +--- com.github.jsqlparser:jsqlparser:4.3</span><br><span class="line">|         |    \--- org.mybatis:mybatis:3.5.9</span><br><span class="line">|         \--- org.mybatis:mybatis-spring:2.0.6</span><br><span class="line">\--- com.github.pagehelper:pagehelper:5.3.0</span><br><span class="line">     \--- com.github.jsqlparser:jsqlparser:4.2 -&gt; 4.3</span><br><span class="line"></span><br><span class="line">compileOnly - Compile only dependencies for source set &#x27;main&#x27;. (n)</span><br><span class="line">\--- org.projectlombok:lombok:1.18.30 (n)</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="查看方式二"><a href="#查看方式二" class="headerlink" title="查看方式二"></a>查看方式二</h3><p>也可以运行命令 <code>gradle dependencyInsight --dependency jsqlparser --configuration compileClasspath</code> 查看</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\github\ghost-hello-project\gradle-study\spring-hello&gt;gradle dependencyInsight --dependency jsqlparser --configuration compileClasspath</span><br><span class="line"></span><br><span class="line">&gt; Task :dependencyInsight</span><br><span class="line">com.github.jsqlparser:jsqlparser:4.3</span><br><span class="line">  Variant compile:</span><br><span class="line">    | Attribute Name                 | Provided | Requested    |</span><br><span class="line">    |--------------------------------|----------|--------------|</span><br><span class="line">    | org.gradle.status              | release  |              |</span><br><span class="line">    | org.gradle.category            | library  | library      |</span><br><span class="line">    | org.gradle.libraryelements     | jar      | classes      |</span><br><span class="line">    | org.gradle.usage               | java-api | java-api     |</span><br><span class="line">    | org.gradle.dependency.bundling |          | external     |</span><br><span class="line">    | org.gradle.jvm.environment     |          | standard-jvm |</span><br><span class="line">    | org.gradle.jvm.version         |          | 8            |</span><br><span class="line">   Selection reasons:</span><br><span class="line">      - By conflict resolution: between versions 4.3 and 4.2</span><br><span class="line"></span><br><span class="line">com.github.jsqlparser:jsqlparser:4.3</span><br><span class="line">\--- com.baomidou:mybatis-plus-core:3.5.1</span><br><span class="line">     \--- com.baomidou:mybatis-plus-extension:3.5.1</span><br><span class="line">          \--- com.baomidou:mybatis-plus:3.5.1</span><br><span class="line">               \--- compileClasspath</span><br><span class="line"></span><br><span class="line">com.github.jsqlparser:jsqlparser:4.2 -&gt; 4.3</span><br><span class="line">\--- com.github.pagehelper:pagehelper:5.3.0</span><br><span class="line">     \--- compileClasspath</span><br><span class="line"></span><br><span class="line">A web-based, searchable dependency report is available by adding the --scan option.</span><br><span class="line"></span><br><span class="line">BUILD SUCCESSFUL in 1s</span><br><span class="line">1 actionable task: 1 executed</span><br><span class="line">E:\github\ghost-hello-project\gradle-study\spring-hello&gt;</span><br></pre></td></tr></table></figure>

<h3 id="排除依赖"><a href="#排除依赖" class="headerlink" title="排除依赖"></a>排除依赖</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">implementation(&quot;com.baomidou:mybatis-plus:3.5.1&quot;)</span><br><span class="line">implementation(&quot;com.github.pagehelper:pagehelper:5.3.0&quot;) &#123;</span><br><span class="line">    exclude(group = &quot;com.github.jsqlparser&quot;, module = &quot;jsqlparser&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>运行命令 <code>gradle dependencies --configuration compileClasspath</code> 再次查看</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\github\ghost-hello-project\gradle-study\spring-hello&gt;gradle dependencies --configuration compileClasspath</span><br><span class="line"></span><br><span class="line">&gt; Task :dependencies</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------</span><br><span class="line">Root project &#x27;spring-hello&#x27;</span><br><span class="line">------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">compileClasspath - Compile classpath for source set &#x27;main&#x27;.</span><br><span class="line">+--- org.projectlombok:lombok:1.18.30</span><br><span class="line">+--- ch.qos.logback:logback-classic:1.2.12</span><br><span class="line">|    +--- ch.qos.logback:logback-core:1.2.12</span><br><span class="line">|    \--- org.slf4j:slf4j-api:1.7.32</span><br><span class="line">+--- com.google.guava:guava:23.0</span><br><span class="line">|    +--- com.google.code.findbugs:jsr305:1.3.9</span><br><span class="line">|    +--- com.google.errorprone:error_prone_annotations:2.0.18</span><br><span class="line">|    +--- com.google.j2objc:j2objc-annotations:1.1</span><br><span class="line">|    \--- org.codehaus.mojo:animal-sniffer-annotations:1.14</span><br><span class="line">+--- com.baomidou:mybatis-plus:3.5.1</span><br><span class="line">|    \--- com.baomidou:mybatis-plus-extension:3.5.1</span><br><span class="line">|         +--- com.baomidou:mybatis-plus-core:3.5.1</span><br><span class="line">|         |    +--- com.baomidou:mybatis-plus-annotation:3.5.1</span><br><span class="line">|         |    +--- com.github.jsqlparser:jsqlparser:4.3</span><br><span class="line">|         |    \--- org.mybatis:mybatis:3.5.9</span><br><span class="line">|         \--- org.mybatis:mybatis-spring:2.0.6</span><br><span class="line">\--- com.github.pagehelper:pagehelper:5.3.0</span><br><span class="line"></span><br><span class="line">A web-based, searchable dependency report is available by adding the --scan option.</span><br><span class="line"></span><br><span class="line">BUILD SUCCESSFUL in 1s</span><br><span class="line">1 actionable task: 1 executed</span><br><span class="line">E:\github\ghost-hello-project\gradle-study\spring-hello&gt;</span><br></pre></td></tr></table></figure>

<h3 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h3><p><a href="https://doc.qzxdp.cn/gradle/8.1.1/userguide/viewing_debugging_dependencies.html">gradle 中文文档 查看和调试依赖项</a></p>
<p><a href="https://blog.csdn.net/Jason847/article/details/76849680">使用Gradle命令查看项目中库的依赖关系</a></p>
<h2 id="查看任务依赖关系"><a href="#查看任务依赖关系" class="headerlink" title="查看任务依赖关系"></a>查看任务依赖关系</h2><h3 id="引入插件"><a href="#引入插件" class="headerlink" title="引入插件"></a>引入插件</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    application</span><br><span class="line">    jacoco</span><br><span class="line">    id(<span class="string">&quot;com.github.johnrengelman.shadow&quot;</span>) version <span class="string">&quot;7.0.0&quot;</span></span><br><span class="line">    id(<span class="string">&quot;com.dorongold.task-tree&quot;</span>) version <span class="string">&quot;3.0.0&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h3><p>执行 <code>gradle &lt;task 1&gt;...&lt;task N&gt; taskTree</code> 即可查看任务依赖关系, 例如 <code>gradle build taskTree</code> 输出如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\github\ghost-hello-project\gradle-study\spring-hello&gt;gradle build taskTree</span><br><span class="line"></span><br><span class="line">&gt; Task :taskTree</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------</span><br><span class="line">Root project &#x27;spring-hello&#x27;</span><br><span class="line">------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">:build</span><br><span class="line">+--- :assemble</span><br><span class="line">|    +--- :distTar</span><br><span class="line">|    |    +--- :jar</span><br><span class="line">|    |    |    \--- :classes</span><br><span class="line">|    |    |         +--- :compileJava</span><br><span class="line">|    |    |         \--- :processResources</span><br><span class="line">|    |    \--- :startScripts</span><br><span class="line">|    |         \--- :jar *</span><br><span class="line">|    +--- :distZip</span><br><span class="line">|    |    +--- :jar *</span><br><span class="line">|    |    \--- :startScripts *</span><br><span class="line">|    +--- :jar *</span><br><span class="line">|    +--- :shadowDistTar</span><br><span class="line">|    |    +--- :shadowJar</span><br><span class="line">|    |    |    \--- :classes *</span><br><span class="line">|    |    \--- :startShadowScripts</span><br><span class="line">|    |         \--- :shadowJar *</span><br><span class="line">|    \--- :shadowDistZip</span><br><span class="line">|         +--- :shadowJar *</span><br><span class="line">|         \--- :startShadowScripts *</span><br><span class="line">\--- :check</span><br><span class="line">     \--- :test</span><br><span class="line">          +--- :classes *</span><br><span class="line">          \--- :testClasses</span><br><span class="line">               +--- :compileTestJava</span><br><span class="line">               |    \--- :classes *</span><br><span class="line">               \--- :processTestResources</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(*) - subtree omitted (printed previously)</span><br><span class="line">Add --repeat to allow printing a subtree of the same task more than once.</span><br><span class="line"></span><br><span class="line">To see task dependency tree for a specific task, run gradle &lt;project-path&gt;:&lt;task&gt; &lt;project-path&gt;:taskTree [--depth &lt;depth&gt;] [--with-inputs] [--with-outputs] [--with-description] [--repeat]</span><br><span class="line">Executions of all tasks except for taskTree are skipped. They are used for building the task graph only.</span><br><span class="line">For example, try running gradle :build :taskTree</span><br><span class="line"></span><br><span class="line">BUILD SUCCESSFUL in 822ms</span><br><span class="line">1 actionable task: 1 executed</span><br><span class="line">E:\github\ghost-hello-project\gradle-study\spring-hello&gt;</span><br></pre></td></tr></table></figure>

<h3 id="参考-2"><a href="#参考-2" class="headerlink" title="参考"></a>参考</h3><p><a href="https://github.com/dorongold/gradle-task-tree">gradle-task-tree github</a></p>
<h2 id="profile"><a href="#profile" class="headerlink" title="profile"></a>profile</h2><h3 id="添加-buildSrc"><a href="#添加-buildSrc" class="headerlink" title="添加 buildSrc"></a>添加 buildSrc</h3><p>关于 <code>buildSrc</code> 可参考 <a href="https://gradle.github.net.cn/current/userguide/sharing_build_logic_between_subprojects.html">在子项目之间共享构建逻辑</a></p>
<p><code>buildSrc/build.gradle.kts</code> 内容如下</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    `kotlin-dsl`</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">repositories &#123;</span><br><span class="line">    maven &#123;</span><br><span class="line">        setUrl(<span class="string">&quot;https://maven.aliyun.com/repository/public/&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    maven &#123;</span><br><span class="line">        setUrl(<span class="string">&quot;https://maven.aliyun.com/repository/spring/&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    gradlePluginPortal()</span><br><span class="line">    mavenLocal()</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在 <code>buildSrc</code> 中添加一个单例类</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.gradle</span><br><span class="line"></span><br><span class="line"><span class="keyword">object</span> GradleUtil &#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">getProfile</span><span class="params">(defaultProfile: <span class="type">String</span>)</span></span>: String &#123;</span><br><span class="line">        <span class="keyword">var</span> profile: String? = System.getProperty(<span class="string">&quot;profile&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> (profile.isNullOrBlank()) &#123;</span><br><span class="line">            profile = defaultProfile</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> profile</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="修改目录结构"><a href="#修改目录结构" class="headerlink" title="修改目录结构"></a>修改目录结构</h3><p>删除 <code>src/main/resources</code> 中的所有文件, 并新建 <code>src/main/resources/dev</code> 和 <code>src/main/resources/test</code>. 将配置文件放在对应的目录, 例如 <code>src/main/resources/dev/spring-context.xml</code> 内容如下</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span> <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.laolang.jx&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.laolang.jx.bean.HelloService&quot;</span> <span class="attr">p:msg</span>=<span class="string">&quot;dev msg&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="修改根目录-build-gradle-kts"><a href="#修改根目录-build-gradle-kts" class="headerlink" title="修改根目录 build.gradle.kts"></a>修改根目录 build.gradle.kts</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.gradle.GradleUtil</span><br><span class="line"><span class="keyword">import</span> org.gradle.api.tasks.testing.logging.TestExceptionFormat</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加插件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">plugins &#123;</span><br><span class="line">    application</span><br><span class="line">    jacoco</span><br><span class="line">    id(<span class="string">&quot;maven-publish&quot;</span>)</span><br><span class="line">    id(<span class="string">&quot;com.github.johnrengelman.shadow&quot;</span>) version <span class="string">&quot;7.0.0&quot;</span></span><br><span class="line">    id(<span class="string">&quot;com.dorongold.task-tree&quot;</span>) version <span class="string">&quot;3.0.0&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 配置仓库</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">repositories &#123;</span><br><span class="line">    maven(<span class="string">&quot;https://maven.aliyun.com/repository/public/&quot;</span>)</span><br><span class="line">    maven(<span class="string">&quot;https://maven.aliyun.com/repository/spring/&quot;</span>)</span><br><span class="line">    mavenLocal()</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 项目坐标</span></span><br><span class="line">group = <span class="string">&quot;com.laolang.jx&quot;</span></span><br><span class="line">version = <span class="string">&quot;0.1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 声明启动类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">application &#123;</span><br><span class="line">    mainClass = <span class="string">&quot;com.laolang.jx.SpringHelloApp&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// profile</span></span><br><span class="line"><span class="keyword">val</span> profile: String = GradleUtil.getProfile(<span class="string">&quot;dev&quot;</span>)</span><br><span class="line"><span class="comment">// 资源目录</span></span><br><span class="line"><span class="keyword">val</span> resourceDir = <span class="string">&quot;src/main/resources/<span class="variable">$profile</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置资源目录</span></span><br><span class="line">sourceSets &#123;</span><br><span class="line">    main &#123;</span><br><span class="line">        resources &#123;</span><br><span class="line">            srcDir(resourceDir)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置依赖</span></span><br><span class="line">dependencies &#123;</span><br><span class="line"></span><br><span class="line">    implementation(platform(<span class="string">&quot;org.springframework:spring-framework-bom:5.3.31&quot;</span>))</span><br><span class="line"></span><br><span class="line">    implementation(<span class="string">&quot;org.springframework:spring-context&quot;</span>)</span><br><span class="line"></span><br><span class="line">    compileOnly(libs.lombok)</span><br><span class="line">    annotationProcessor(libs.lombok)</span><br><span class="line">    implementation(libs.guava)</span><br><span class="line"></span><br><span class="line">    implementation(libs.bundles.logback)</span><br><span class="line"></span><br><span class="line">    testImplementation(libs.testng)</span><br><span class="line">    testCompileOnly(libs.lombok)</span><br><span class="line">    testAnnotationProcessor(libs.lombok)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 打包时生成 source.jar 和 javadoc.jar</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">configure&lt;JavaPluginExtension&gt; &#123;</span><br><span class="line">    withSourcesJar()</span><br><span class="line">    withJavadocJar()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * java 编译配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.withType&lt;JavaCompile&gt; &#123;</span><br><span class="line">    options.encoding = Charsets.UTF_8.name()</span><br><span class="line">    sourceCompatibility = JavaVersion.VERSION_1_8.toString()</span><br><span class="line">    targetCompatibility = JavaVersion.VERSION_1_8.toString()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 排除 dev 目录和 test 目录</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.withType&lt;ProcessResources&gt; &#123;</span><br><span class="line">    exclude(<span class="string">&quot;dev/**&quot;</span>)</span><br><span class="line">    exclude(<span class="string">&quot;test/**&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * javadoc</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.withType&lt;Javadoc&gt; &#123;</span><br><span class="line">    options &#123;</span><br><span class="line">        encoding = Charsets.UTF_8.name()</span><br><span class="line">        charset(Charsets.UTF_8.name())</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 忽略 javadoc 报错</span></span><br><span class="line">    isFailOnError = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;Test&gt;(<span class="string">&quot;test&quot;</span>) &#123;</span><br><span class="line">    useTestNG &#123;</span><br><span class="line">        suites(<span class="string">&quot;testng.xml&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 输出详细日志</span></span><br><span class="line">    testLogging &#123;</span><br><span class="line">        <span class="comment">// 记录日志的事件类型</span></span><br><span class="line">        events(<span class="string">&quot;FAILED&quot;</span>, <span class="string">&quot;PASSED&quot;</span>, <span class="string">&quot;SKIPPED&quot;</span>, <span class="string">&quot;STANDARD_ERROR&quot;</span>, <span class="string">&quot;STANDARD_OUT&quot;</span>, <span class="string">&quot;STARTED&quot;</span>)</span><br><span class="line">        <span class="comment">// 记录测试异常的格式</span></span><br><span class="line">        <span class="comment">// FULL: 完整显示异常</span></span><br><span class="line">        <span class="comment">// SHORT: 异常的简短显示</span></span><br><span class="line">        exceptionFormat = TestExceptionFormat.FULL</span><br><span class="line">        <span class="comment">// 是否记录标准输出和标准错误的输出</span></span><br><span class="line">        showStandardStreams = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    finalizedBy(tasks.jacocoTestReport)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * jacoco 任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;JacocoReport&gt;(<span class="string">&quot;jacocoTestReport&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">// 依赖于测试任务</span></span><br><span class="line">    dependsOn(tasks.test)</span><br><span class="line"></span><br><span class="line">    reports &#123;</span><br><span class="line">        <span class="comment">// 把不需要的报告去掉</span></span><br><span class="line">        xml.required.<span class="keyword">set</span>(<span class="literal">false</span>)</span><br><span class="line">        csv.required.<span class="keyword">set</span>(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 只启用 html 报告</span></span><br><span class="line">        html.required.<span class="keyword">set</span>(<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// jacoco 报告位置</span></span><br><span class="line">        html.outputLocation.<span class="keyword">set</span>(layout.buildDirectory.dir(<span class="string">&quot;jacocoHtml&quot;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 打包可执行 jar</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;ShadowJar&gt;(<span class="string">&quot;shadowJar&quot;</span>) &#123;</span><br><span class="line">    archiveBaseName.<span class="keyword">set</span>(project.name)</span><br><span class="line">    archiveVersion.<span class="keyword">set</span>(project.version.toString())</span><br><span class="line">    archiveFileName.<span class="keyword">set</span>(project.name + <span class="string">&quot;.jar&quot;</span>)</span><br><span class="line"></span><br><span class="line">    destinationDirectory.<span class="keyword">set</span>(layout.buildDirectory.dir(<span class="string">&quot;shaded&quot;</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 发布到本地</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">publishing &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        mavenLocal()</span><br><span class="line">    &#125;</span><br><span class="line">    publications &#123;</span><br><span class="line">        create&lt;MavenPublication&gt;(<span class="string">&quot;maven&quot;</span>) &#123;</span><br><span class="line">            groupId = project.group.toString()</span><br><span class="line">            artifactId = project.name</span><br><span class="line">            version = project.version.toString()</span><br><span class="line"></span><br><span class="line">            from(components[<span class="string">&quot;java&quot;</span>])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p><code>gradlew.bat -Dprofile=test run</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\github\gradle-study\spring-hello&gt;gradlew.bat -Dprofile=test run</span><br><span class="line"></span><br><span class="line">&gt; Configure project :</span><br><span class="line">profile:test</span><br><span class="line"></span><br><span class="line">&gt; Task :run</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">2024-09-11 09:08:51.229 [main] INFO  com.laolang.jx.SpringHelloApp            - bean.msg:test msg</span><br><span class="line"></span><br><span class="line">Deprecated Gradle features were used in this build, making it incompatible with Gradle 9.0.</span><br><span class="line"></span><br><span class="line">You can use &#x27;--warning-mode all&#x27; to show the individual deprecation warnings and determine if they come from your own scripts or plugins.</span><br><span class="line"></span><br><span class="line">For more on this, please refer to https://docs.gradle.org/8.10/userguide/command_line_interface.html#sec:command_line_warnings in the Gradle documentation.</span><br><span class="line"></span><br><span class="line">BUILD SUCCESSFUL in 2s</span><br><span class="line">7 actionable tasks: 2 executed, 5 up-to-date</span><br><span class="line">E:\github\gradle-study\spring-hello&gt;</span><br></pre></td></tr></table></figure>

<p><code>gradlew.bat -Dprofile=dev run</code> 或者 <code>gradlew.bat run</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\github\gradle-study\spring-hello&gt;gradlew.bat run</span><br><span class="line"></span><br><span class="line">&gt; Configure project :</span><br><span class="line">profile:dev</span><br><span class="line"></span><br><span class="line">&gt; Task :run</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">2024-09-11 09:10:03.309 [main] INFO  com.laolang.jx.SpringHelloApp            - bean.msg:dev msg</span><br><span class="line"></span><br><span class="line">Deprecated Gradle features were used in this build, making it incompatible with Gradle 9.0.</span><br><span class="line"></span><br><span class="line">You can use &#x27;--warning-mode all&#x27; to show the individual deprecation warnings and determine if they come from your own scripts or plugins.</span><br><span class="line"></span><br><span class="line">For more on this, please refer to https://docs.gradle.org/8.10/userguide/command_line_interface.html#sec:command_line_warnings in the Gradle documentation.</span><br><span class="line"></span><br><span class="line">BUILD SUCCESSFUL in 1s</span><br><span class="line">7 actionable tasks: 2 executed, 5 up-to-date</span><br><span class="line">E:\github\gradle-study\spring-hello&gt;</span><br></pre></td></tr></table></figure>


<h3 id="参考-3"><a href="#参考-3" class="headerlink" title="参考"></a>参考</h3><p><a href="https://gradle.github.net.cn/current/userguide/build_environment.html#sec:gradle_system_properties">gradle 中文手册 · 配置构建环境</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1798260">Gradle构建时像Maven那样根据profile环境打包</a></p>
<p><a href="https://www.cnblogs.com/yjmyzz/p/gradle-profile.html">gradle项目中profile的实现</a></p>
<p><a href="https://blog.gradle.org/maven-pom-profiles">Gradle’s Support for Maven POM Profiles</a></p>
<h2 id="单模块项目总结与代码地址"><a href="#单模块项目总结与代码地址" class="headerlink" title="单模块项目总结与代码地址"></a>单模块项目总结与代码地址</h2><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol>
<li>遇事不决, google</li>
<li>多看官方文档</li>
<li>理论与实践相结合</li>
<li>profile 的实现有很多种方式, 我只是选了其中一种</li>
</ol>
<h3 id="代码地址"><a href="#代码地址" class="headerlink" title="代码地址"></a>代码地址</h3><p><a href="https://github.com/laolang2016/gradle-study/tree/master/spring-hello">https://github.com/laolang2016/gradle-study/tree/master/spring-hello</a></p>
<h1 id="spring-mvc-schema-项目示例"><a href="#spring-mvc-schema-项目示例" class="headerlink" title="spring mvc schema 项目示例"></a>spring mvc schema 项目示例</h1><h2 id="代码地址-1"><a href="#代码地址-1" class="headerlink" title="代码地址"></a>代码地址</h2><p><a href="https://github.com/laolang2016/gradle-study/tree/master/jx-schema">https://github.com/laolang2016/gradle-study/tree/master/jx-schema</a></p>
<h2 id="gradle-配置说明"><a href="#gradle-配置说明" class="headerlink" title="gradle 配置说明"></a>gradle 配置说明</h2><h3 id="libs-version-toml"><a href="#libs-version-toml" class="headerlink" title="libs.version.toml"></a>libs.version.toml</h3><div class="note info simple"><p>使用 bom 之后, 这个文件就不需要写 <code>spring</code> 依赖的版本号了</p>
</div>

<figure class="highlight toml"><table><tr><td class="code"><pre><span class="line"><span class="section">[versions]</span></span><br><span class="line"><span class="attr">javax-servlet-api-version</span> = <span class="string">&quot;3.1.0&quot;</span></span><br><span class="line"><span class="attr">jackson-version</span> = <span class="string">&quot;2.13.5&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logback-version</span> = <span class="string">&quot;1.2.12&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">lombok-version</span> = <span class="string">&quot;1.18.30&quot;</span></span><br><span class="line"><span class="attr">hutool-version</span> = <span class="string">&quot;5.8.11&quot;</span></span><br><span class="line"><span class="attr">vavr-version</span> = <span class="string">&quot;0.10.4&quot;</span></span><br><span class="line"><span class="attr">mapstruct-version</span> = <span class="string">&quot;1.4.2.Final&quot;</span></span><br><span class="line"><span class="attr">guava-version</span> = <span class="string">&quot;23.0&quot;</span></span><br><span class="line"><span class="attr">commons-lang3-version</span> = <span class="string">&quot;3.12.0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">testng-version</span> = <span class="string">&quot;6.14.3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[libraries]</span></span><br><span class="line"><span class="attr">javax-servlet-api</span> = &#123; module = <span class="string">&quot;javax.servlet:javax.servlet-api&quot;</span>, version.ref = <span class="string">&quot;javax-servlet-api-version&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">spring-context</span> = &#123; module = <span class="string">&quot;org.springframework:spring-context&quot;</span> &#125;</span><br><span class="line"><span class="attr">spring-context-support</span> = &#123; module = <span class="string">&quot;org.springframework:spring-context-support&quot;</span> &#125;</span><br><span class="line"><span class="attr">spring-webmvc</span> = &#123; module = <span class="string">&quot;org.springframework:spring-webmvc&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">jackson-databind</span> = &#123; module = <span class="string">&quot;com.fasterxml.jackson.core:jackson-databind&quot;</span>, version.ref = <span class="string">&quot;jackson-version&quot;</span> &#125;</span><br><span class="line"><span class="attr">jackson-datatype-jdk8</span> = &#123; module = <span class="string">&quot;com.fasterxml.jackson.datatype:jackson-datatype-jdk8&quot;</span>, version.ref = <span class="string">&quot;jackson-version&quot;</span> &#125;</span><br><span class="line"><span class="attr">jackson-datatype-jsr310</span> = &#123; module = <span class="string">&quot;com.fasterxml.jackson.datatype:jackson-datatype-jsr310&quot;</span>, version.ref = <span class="string">&quot;jackson-version&quot;</span> &#125;</span><br><span class="line"><span class="attr">jackson-module-parameter-names</span> = &#123; module = <span class="string">&quot;com.fasterxml.jackson.module:jackson-module-parameter-names&quot;</span>, version.ref = <span class="string">&quot;jackson-version&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">logback-classic</span> = &#123; module = <span class="string">&quot;ch.qos.logback:logback-classic&quot;</span>, version.ref = <span class="string">&quot;logback-version&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">lombok</span> = &#123; module = <span class="string">&quot;org.projectlombok:lombok&quot;</span>, version.ref = <span class="string">&quot;lombok-version&quot;</span> &#125;</span><br><span class="line"><span class="attr">hutool-all</span> = &#123; module = <span class="string">&quot;cn.hutool:hutool-all&quot;</span>, version.ref = <span class="string">&quot;hutool-version&quot;</span> &#125;</span><br><span class="line"><span class="attr">vavr</span> = &#123; module = <span class="string">&quot;io.vavr:vavr&quot;</span>, version.ref = <span class="string">&quot;vavr-version&quot;</span> &#125;</span><br><span class="line"><span class="attr">mapstruct-mapstruct</span> = &#123; module = <span class="string">&quot;org.mapstruct:mapstruct&quot;</span>, version.ref = <span class="string">&quot;mapstruct-version&quot;</span> &#125;</span><br><span class="line"><span class="attr">mapstruct-jdk8</span> = &#123; module = <span class="string">&quot;org.mapstruct:mapstruct-jdk8&quot;</span>, version.ref = <span class="string">&quot;mapstruct-version&quot;</span> &#125;</span><br><span class="line"><span class="attr">mapstruct-processor</span> = &#123; module = <span class="string">&quot;org.mapstruct:mapstruct-processor&quot;</span>, version.ref = <span class="string">&quot;mapstruct-version&quot;</span> &#125;</span><br><span class="line"><span class="attr">guava</span> = &#123; module = <span class="string">&quot;com.google.guava:guava&quot;</span>, version.ref = <span class="string">&quot;guava-version&quot;</span> &#125;</span><br><span class="line"><span class="attr">commons-lang3</span> = &#123; module = <span class="string">&quot;org.apache.commons:commons-lang3&quot;</span>, version.ref = <span class="string">&quot;commons-lang3-version&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">testng</span> = &#123; module = <span class="string">&quot;org.testng:testng&quot;</span>, version.ref = <span class="string">&quot;testng-version&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="section">[bundles]</span></span><br><span class="line"><span class="attr">spring</span> = [<span class="string">&quot;spring-context&quot;</span>, <span class="string">&quot;spring-context-support&quot;</span>, <span class="string">&quot;spring-webmvc&quot;</span>]</span><br><span class="line"><span class="attr">jackson</span> = [<span class="string">&quot;jackson-databind&quot;</span>, <span class="string">&quot;jackson-datatype-jdk8&quot;</span>, <span class="string">&quot;jackson-datatype-jsr310&quot;</span>, <span class="string">&quot;jackson-module-parameter-names&quot;</span>]</span><br><span class="line"><span class="attr">mapstruct</span> = [<span class="string">&quot;mapstruct-mapstruct&quot;</span>, <span class="string">&quot;mapstruct-jdk8&quot;</span>, <span class="string">&quot;mapstruct-processor&quot;</span>]</span><br><span class="line"><span class="attr">logback</span> = [<span class="string">&quot;logback-classic&quot;</span>]</span><br></pre></td></tr></table></figure>

<h3 id="build-gradle-kts-2"><a href="#build-gradle-kts-2" class="headerlink" title="build.gradle.kts"></a>build.gradle.kts</h3><p><code>maven</code> 有 <code>jetty</code> 插件, <code>gradle</code> 则有 <code>gretty</code>, 运行方式都一样, 但是 <code>gretty</code> debug 需要使用远程调试, 目前还没找到 idea 直接 debug 的方式</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.gradle.api.tasks.testing.logging.TestExceptionFormat</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加插件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">plugins &#123;</span><br><span class="line">    war</span><br><span class="line">    id(<span class="string">&quot;org.gretty&quot;</span>) version <span class="string">&quot;3.0.9&quot;</span></span><br><span class="line">    jacoco</span><br><span class="line">    id(<span class="string">&quot;maven-publish&quot;</span>)</span><br><span class="line">    id(<span class="string">&quot;com.dorongold.task-tree&quot;</span>) version <span class="string">&quot;3.0.0&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 配置仓库</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">repositories &#123;</span><br><span class="line">    maven(<span class="string">&quot;https://maven.aliyun.com/repository/public/&quot;</span>)</span><br><span class="line">    maven(<span class="string">&quot;https://maven.aliyun.com/repository/spring/&quot;</span>)</span><br><span class="line">    mavenLocal()</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 项目坐标</span></span><br><span class="line">group = <span class="string">&quot;com.laolang.jx&quot;</span></span><br><span class="line">version = <span class="string">&quot;0.1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置依赖</span></span><br><span class="line">dependencies &#123;</span><br><span class="line"></span><br><span class="line">    implementation(platform(<span class="string">&quot;org.springframework:spring-framework-bom:5.3.31&quot;</span>))</span><br><span class="line"></span><br><span class="line">    implementation(libs.javax.servlet.api)</span><br><span class="line">    implementation(libs.bundles.spring)</span><br><span class="line">    implementation(libs.bundles.jackson)</span><br><span class="line"></span><br><span class="line">    implementation(libs.bundles.logback)</span><br><span class="line"></span><br><span class="line">    compileOnly(libs.lombok)</span><br><span class="line">    annotationProcessor(libs.lombok)</span><br><span class="line">    implementation(libs.hutool.all)</span><br><span class="line">    implementation(libs.vavr)</span><br><span class="line">    implementation(libs.bundles.mapstruct)</span><br><span class="line">    implementation(libs.guava)</span><br><span class="line">    implementation(libs.commons.lang3)</span><br><span class="line"></span><br><span class="line">    testImplementation(libs.testng)</span><br><span class="line">    testCompileOnly(libs.lombok)</span><br><span class="line">    testAnnotationProcessor(libs.lombok)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 打包时生成 source.jar 和 javadoc.jar</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">configure&lt;JavaPluginExtension&gt; &#123;</span><br><span class="line">    withSourcesJar()</span><br><span class="line">    withJavadocJar()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * java 编译配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.withType&lt;JavaCompile&gt; &#123;</span><br><span class="line">    options.encoding = Charsets.UTF_8.name()</span><br><span class="line">    sourceCompatibility = JavaVersion.VERSION_1_8.toString()</span><br><span class="line">    targetCompatibility = JavaVersion.VERSION_1_8.toString()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * javadoc</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.withType&lt;Javadoc&gt; &#123;</span><br><span class="line">    options &#123;</span><br><span class="line">        encoding = Charsets.UTF_8.name()</span><br><span class="line">        charset(Charsets.UTF_8.name())</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 忽略 javadoc 报错</span></span><br><span class="line">    isFailOnError = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;Test&gt;(<span class="string">&quot;test&quot;</span>) &#123;</span><br><span class="line">    useTestNG &#123;</span><br><span class="line">        suites(<span class="string">&quot;testng.xml&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 输出详细日志</span></span><br><span class="line">    testLogging &#123;</span><br><span class="line">        <span class="comment">// 记录日志的事件类型</span></span><br><span class="line">        events(<span class="string">&quot;FAILED&quot;</span>, <span class="string">&quot;PASSED&quot;</span>, <span class="string">&quot;SKIPPED&quot;</span>, <span class="string">&quot;STANDARD_ERROR&quot;</span>, <span class="string">&quot;STANDARD_OUT&quot;</span>, <span class="string">&quot;STARTED&quot;</span>)</span><br><span class="line">        <span class="comment">// 记录测试异常的格式</span></span><br><span class="line">        <span class="comment">// FULL: 完整显示异常</span></span><br><span class="line">        <span class="comment">// SHORT: 异常的简短显示</span></span><br><span class="line">        exceptionFormat = TestExceptionFormat.FULL</span><br><span class="line">        <span class="comment">// 是否记录标准输出和标准错误的输出</span></span><br><span class="line">        showStandardStreams = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    finalizedBy(tasks.jacocoTestReport)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * war 任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.withType&lt;War&gt;&#123;</span><br><span class="line">    archiveBaseName = project.name</span><br><span class="line">    version = project.version</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * jacoco 任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;JacocoReport&gt;(<span class="string">&quot;jacocoTestReport&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">// 依赖于测试任务</span></span><br><span class="line">    dependsOn(tasks.test)</span><br><span class="line"></span><br><span class="line">    reports &#123;</span><br><span class="line">        <span class="comment">// 把不需要的报告去掉</span></span><br><span class="line">        xml.required.<span class="keyword">set</span>(<span class="literal">false</span>)</span><br><span class="line">        csv.required.<span class="keyword">set</span>(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 只启用 html 报告</span></span><br><span class="line">        html.required.<span class="keyword">set</span>(<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// jacoco 报告位置</span></span><br><span class="line">        html.outputLocation.<span class="keyword">set</span>(layout.buildDirectory.dir(<span class="string">&quot;jacocoHtml&quot;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 发布到本地</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">publishing &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        mavenLocal()</span><br><span class="line">    &#125;</span><br><span class="line">    publications &#123;</span><br><span class="line">        create&lt;MavenPublication&gt;(<span class="string">&quot;maven&quot;</span>) &#123;</span><br><span class="line">            groupId = project.group.toString()</span><br><span class="line">            artifactId = project.name</span><br><span class="line">            version = project.version.toString()</span><br><span class="line"></span><br><span class="line">            from(components[<span class="string">&quot;java&quot;</span>])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * gretty</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">gretty&#123;</span><br><span class="line">    <span class="comment">// 服务端口号</span></span><br><span class="line">    httpPort = <span class="number">8096</span></span><br><span class="line">    <span class="comment">// 服务根路径</span></span><br><span class="line">    contextPath = <span class="string">&#x27;/&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 远程调试端口号</span></span><br><span class="line">    debugPort = <span class="number">8098</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>直接执行 <code>gretty</code> 的 <code>appRun</code> 即可</p>
<p><img src="/images/2024-09-12-gradle-study/007.png"></p>
<h2 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h2><p>首先执行 <code>gretty</code> 的 <code>appRunDebug</code></p>
<p><img src="/images/2024-09-12-gradle-study/008.png"></p>
<p>然后配置 remote debug 并启动</p>
<p><img src="/images/2024-09-12-gradle-study/009.png"></p>
<p>然后切换到 <code>appRunDebug</code>, 稍等一两秒就会看到项目成功启动了, 此时断点已经可以正常使用</p>
<p><img src="/images/2024-09-12-gradle-study/010.png"></p>
<h2 id="参考-4"><a href="#参考-4" class="headerlink" title="参考"></a>参考</h2><p><a href="https://doc.qzxdp.cn/gradle/8.1.1/userguide/war_plugin.html">gradle 中文文档 war 插件</a></p>
<p>gretty 官网: <a href="https://gretty-gradle-plugin.github.io/gretty-doc/">https://gretty-gradle-plugin.github.io/gretty-doc/</a></p>
<p><a href="https://www.cnblogs.com/qrlozte/p/8734512.html">IDEA community + Gradle + Gretty 调试 servlet 应用 + war包部署到tomcat</a></p>
<p><a href="https://www.cnblogs.com/gzdaijie/p/5267166.html">Java Gradle入门指南之gretty插件（安装、命令与核心特性）</a></p>
<h1 id="spring-单体项目"><a href="#spring-单体项目" class="headerlink" title="spring 单体项目"></a>spring 单体项目</h1><h2 id="根目录-build-gradle-kts"><a href="#根目录-build-gradle-kts" class="headerlink" title="根目录 build.gradle.kts"></a>根目录 build.gradle.kts</h2><p>与 <a href="https://github.com/laolang2016/gradle-study/tree/master/jx-schema">spring mvc schema</a> 项目比起来并没有太大的区别</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.laolang.gradle.mavenAlibaba</span><br><span class="line"><span class="keyword">import</span> com.laolang.gradle.util.GradleUtil</span><br><span class="line"><span class="keyword">import</span> org.gradle.api.tasks.testing.logging.TestExceptionFormat</span><br><span class="line"><span class="keyword">import</span> org.gradle.<span class="keyword">internal</span>.classpath.Instrumented.systemProperty</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.gradle.tasks.bundling.BootJar</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">repositories &#123;</span><br><span class="line">    mavenAlibaba()</span><br><span class="line">    mavenLocal()</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">plugins &#123;</span><br><span class="line">    application</span><br><span class="line">    jacoco</span><br><span class="line">    id(<span class="string">&quot;com.dorongold.task-tree&quot;</span>) version <span class="string">&quot;3.0.0&quot;</span></span><br><span class="line">    id(<span class="string">&quot;maven-publish&quot;</span>)</span><br><span class="line">    id(<span class="string">&quot;org.springframework.boot&quot;</span>) version <span class="string">&quot;2.7.6&quot;</span></span><br><span class="line">    id(<span class="string">&quot;io.spring.dependency-management&quot;</span>) version <span class="string">&quot;1.0.15.RELEASE&quot;</span></span><br><span class="line">    id(<span class="string">&quot;my-plugin&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 项目坐标</span></span><br><span class="line">group = <span class="string">&quot;com.laolang.jx&quot;</span></span><br><span class="line">version = <span class="string">&quot;0.1&quot;</span></span><br><span class="line"></span><br><span class="line">application &#123;</span><br><span class="line">    mainClass.<span class="keyword">set</span>(<span class="string">&quot;com.laolang.jx.JxApplication&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// profile</span></span><br><span class="line"><span class="keyword">val</span> profile: String = GradleUtil.getProfile(<span class="string">&quot;dev&quot;</span>)</span><br><span class="line"><span class="comment">// 资源目录</span></span><br><span class="line"><span class="keyword">val</span> resourceDir = <span class="string">&quot;src/main/resources/<span class="variable">$profile</span>&quot;</span></span><br><span class="line"></span><br><span class="line">println(<span class="string">&quot;profile:<span class="variable">$profile</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置资源目录</span></span><br><span class="line">sourceSets &#123;</span><br><span class="line">    main &#123;</span><br><span class="line">        resources &#123;</span><br><span class="line">            srcDir(resourceDir)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    implementation(<span class="string">&quot;org.springframework.boot:spring-boot-starter-web&quot;</span>)</span><br><span class="line">    implementation(<span class="string">&quot;org.springframework.boot:spring-boot-starter-log4j2&quot;</span>)</span><br><span class="line">    implementation(<span class="string">&quot;org.springframework.boot:spring-boot-starter-json&quot;</span>)</span><br><span class="line">    annotationProcessor(<span class="string">&quot;org.springframework.boot:spring-boot-configuration-processor&quot;</span>)</span><br><span class="line">    compileOnly(<span class="string">&quot;org.springframework.boot:spring-boot-configuration-processor&quot;</span>)</span><br><span class="line"></span><br><span class="line">    implementation(libs.tlog)</span><br><span class="line"></span><br><span class="line">    implementation(libs.hutool.all)</span><br><span class="line">    implementation(libs.vavr)</span><br><span class="line">    implementation(libs.bundles.mapstruct)</span><br><span class="line">    implementation(libs.guava)</span><br><span class="line">    compileOnly(<span class="string">&quot;org.projectlombok:lombok&quot;</span>)</span><br><span class="line">    annotationProcessor(<span class="string">&quot;org.projectlombok:lombok&quot;</span>)</span><br><span class="line">    implementation(<span class="string">&quot;org.apache.commons:commons-lang3&quot;</span>)</span><br><span class="line"></span><br><span class="line">    testImplementation(libs.testng)</span><br><span class="line">    testCompileOnly(<span class="string">&quot;org.projectlombok:lombok&quot;</span>)</span><br><span class="line">    testAnnotationProcessor(<span class="string">&quot;org.projectlombok:lombok&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 由于引入了 log4j2 , 故此处排除 spring-boot 默认的 logback 日志依赖</span></span><br><span class="line">    configurations &#123;</span><br><span class="line">        all &#123;</span><br><span class="line">            exclude(group = <span class="string">&quot;org.springframework.boot&quot;</span>, module = <span class="string">&quot;spring-boot-starter-logging&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 打包时生成 source.jar 和 javadoc.jar</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">configure&lt;JavaPluginExtension&gt; &#123;</span><br><span class="line">    withSourcesJar()</span><br><span class="line">    withJavadocJar()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * java 编译配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.withType&lt;JavaCompile&gt; &#123;</span><br><span class="line">    options.encoding = Charsets.UTF_8.name()</span><br><span class="line">    sourceCompatibility = JavaVersion.VERSION_1_8.toString()</span><br><span class="line">    targetCompatibility = JavaVersion.VERSION_1_8.toString()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tasks.named&lt;Test&gt;(<span class="string">&quot;test&quot;</span>) &#123;</span><br><span class="line">    useTestNG &#123;</span><br><span class="line">        suites(<span class="string">&quot;testng.xml&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 输出详细日志</span></span><br><span class="line">    testLogging &#123;</span><br><span class="line">        <span class="comment">// 记录日志的事件类型</span></span><br><span class="line">        events(<span class="string">&quot;FAILED&quot;</span>, <span class="string">&quot;PASSED&quot;</span>, <span class="string">&quot;SKIPPED&quot;</span>, <span class="string">&quot;STANDARD_ERROR&quot;</span>, <span class="string">&quot;STANDARD_OUT&quot;</span>, <span class="string">&quot;STARTED&quot;</span>)</span><br><span class="line">        <span class="comment">// 记录测试异常的格式</span></span><br><span class="line">        <span class="comment">// FULL: 完整显示异常</span></span><br><span class="line">        <span class="comment">// SHORT: 异常的简短显示</span></span><br><span class="line">        exceptionFormat = TestExceptionFormat.FULL</span><br><span class="line">        <span class="comment">// 是否记录标准输出和标准错误的输出</span></span><br><span class="line">        showStandardStreams = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    finalizedBy(tasks.jacocoTestReport)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * javadoc</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.withType&lt;Javadoc&gt; &#123;</span><br><span class="line">    options &#123;</span><br><span class="line">        encoding = Charsets.UTF_8.name()</span><br><span class="line">        charset(Charsets.UTF_8.name())</span><br><span class="line">        windowTitle = <span class="string">&quot;spring-hello&quot;</span></span><br><span class="line">        header = <span class="string">&quot;spring-hello&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 忽略 javadoc 报错</span></span><br><span class="line">    isFailOnError = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * jacoco 任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;JacocoReport&gt;(<span class="string">&quot;jacocoTestReport&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">// 依赖于测试任务</span></span><br><span class="line">    dependsOn(tasks.test)</span><br><span class="line"></span><br><span class="line">    reports &#123;</span><br><span class="line">        xml.required.<span class="keyword">set</span>(<span class="literal">false</span>)</span><br><span class="line">        csv.required.<span class="keyword">set</span>(<span class="literal">false</span>)</span><br><span class="line">        html.required.<span class="keyword">set</span>(<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">        html.outputLocation.<span class="keyword">set</span>(layout.buildDirectory.dir(<span class="string">&quot;jacocoHtml&quot;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * spring-boot 打包</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;BootJar&gt;(<span class="string">&quot;bootJar&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">// jar 包名称</span></span><br><span class="line">    archiveBaseName.<span class="keyword">set</span>(<span class="string">&quot;jx-boot&quot;</span>)</span><br><span class="line">    <span class="comment">// 版本号设置为空</span></span><br><span class="line">    archiveVersion.<span class="keyword">set</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 发布到本地</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">publishing &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        mavenLocal()</span><br><span class="line">    &#125;</span><br><span class="line">    publications &#123;</span><br><span class="line">        create&lt;MavenPublication&gt;(<span class="string">&quot;maven&quot;</span>) &#123;</span><br><span class="line">            groupId = project.group.toString()</span><br><span class="line">            artifactId = project.name</span><br><span class="line">            version = project.version.toString()</span><br><span class="line"></span><br><span class="line">            from(components[<span class="string">&quot;java&quot;</span>])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="spring-配置文件"><a href="#spring-配置文件" class="headerlink" title="spring 配置文件"></a>spring 配置文件</h2><p>在每个 <code>profile</code> 目录中直接写死 <code>spring.profiles.active</code>, 例如 <code>resources/dev/application.yml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8096</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">context-path:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">jx-boot</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">config:</span> <span class="string">classpath:log4j2.xml</span></span><br></pre></td></tr></table></figure>

<h2 id="代码地址-2"><a href="#代码地址-2" class="headerlink" title="代码地址"></a>代码地址</h2><p><a href="https://github.com/laolang2016/gradle-study/tree/master/jx-boot">https://github.com/laolang2016/gradle-study/tree/master/jx-boot</a></p>
<h2 id="参考-5"><a href="#参考-5" class="headerlink" title="参考"></a>参考</h2><p><a href="https://gist.github.com/jakzal/1ff82e1c4c2a83805c370c17cc7308bc">Run a Spring Boot application with the dev profile (Gradle Kotlin DSL)</a></p>
<h1 id="spring-boot-多模块项目"><a href="#spring-boot-多模块项目" class="headerlink" title="spring boot 多模块项目"></a>spring boot 多模块项目</h1><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><p><img src="/images/2024-09-12-gradle-study/011.png"></p>
<h2 id="settings-gradle-kts"><a href="#settings-gradle-kts" class="headerlink" title="settings.gradle.kts"></a>settings.gradle.kts</h2><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">pluginManagement &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        <span class="comment">// 插件使用阿里云 maven 源</span></span><br><span class="line">        maven(<span class="string">&quot;https://maven.aliyun.com/repository/gradle-plugin&quot;</span>)</span><br><span class="line">        gradlePluginPortal()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rootProject.name = <span class="string">&quot;jx-boot-multi&quot;</span></span><br><span class="line"></span><br><span class="line">include(<span class="string">&quot;:jx-app&quot;</span>)</span><br><span class="line"></span><br><span class="line">include(<span class="string">&quot;:jx-framework:jx-common&quot;</span>)</span><br><span class="line">include(<span class="string">&quot;:jx-framework:jx-spring-boot-starter-web&quot;</span>)</span><br><span class="line"></span><br><span class="line">include(<span class="string">&quot;:jx-module:jx-module-system:jx-module-system-api&quot;</span>)</span><br><span class="line">include(<span class="string">&quot;:jx-module:jx-module-system:jx-module-system-biz&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="根目录-build-gradle-kts【重要】"><a href="#根目录-build-gradle-kts【重要】" class="headerlink" title="根目录 build.gradle.kts【重要】"></a>根目录 build.gradle.kts【重要】</h2><div class="note info simple"><p>重要文件</p>
</div>


<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.laolang.gradle.Version</span><br><span class="line"><span class="keyword">import</span> com.laolang.gradle.mavenAlibaba</span><br><span class="line"><span class="keyword">import</span> io.spring.gradle.dependencymanagement.dsl.DependencyManagementExtension</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用插件之前需要先声明</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">plugins &#123;</span><br><span class="line">    id(<span class="string">&quot;org.springframework.boot&quot;</span>) version <span class="string">&quot;2.7.18&quot;</span></span><br><span class="line">    id(<span class="string">&quot;io.spring.dependency-management&quot;</span>) version <span class="string">&quot;1.0.14.RELEASE&quot;</span></span><br><span class="line">    id(<span class="string">&quot;maven-publish&quot;</span>)</span><br><span class="line">    id(<span class="string">&quot;java&quot;</span>)</span><br><span class="line">    id(<span class="string">&quot;com.dorongold.task-tree&quot;</span>) version <span class="string">&quot;3.0.0&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 所有工程的配置, 包含根项目</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        mavenAlibaba()</span><br><span class="line">        mavenLocal()</span><br><span class="line">        mavenCentral()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 所有子工程的配置, 不包含根项目</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">subprojects &#123;</span><br><span class="line">    <span class="comment">// 不处理主工程, 主工程单独写构建文件</span></span><br><span class="line">    <span class="keyword">if</span> (name != <span class="string">&quot;jx-app&quot;</span>) &#123;</span><br><span class="line">        apply(plugin = <span class="string">&quot;java-library&quot;</span>)</span><br><span class="line">        apply(plugin = <span class="string">&quot;maven-publish&quot;</span>)</span><br><span class="line">        apply(plugin = <span class="string">&quot;com.dorongold.task-tree&quot;</span>)</span><br><span class="line">        apply(plugin = <span class="string">&quot;io.spring.dependency-management&quot;</span>)</span><br><span class="line"></span><br><span class="line">        group = <span class="string">&quot;com.laolang.jx&quot;</span></span><br><span class="line">        version = <span class="string">&quot;0.1&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 导入 Spring Boot 的 bom</span></span><br><span class="line">        the&lt;DependencyManagementExtension&gt;().apply &#123;</span><br><span class="line">            imports &#123;</span><br><span class="line">                mavenBom(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 注意这里 全局导入 lombok</span></span><br><span class="line">        dependencies &#123;</span><br><span class="line">            compileOnly(rootProject.libs.lombok)</span><br><span class="line">            annotationProcessor(rootProject.libs.lombok)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 打包时生成 source.jar 和 javadoc.jar</span></span><br><span class="line">        configure&lt;JavaPluginExtension&gt; &#123;</span><br><span class="line">            withSourcesJar()</span><br><span class="line">            withJavadocJar()</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * java 编译配置</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        tasks.withType&lt;JavaCompile&gt; &#123;</span><br><span class="line">            options.encoding = Charsets.UTF_8.name()</span><br><span class="line">            sourceCompatibility = Version.sourceCompatibility.toString()</span><br><span class="line">            targetCompatibility = Version.targetCompatibility.toString()</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * javadoc</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        tasks.withType&lt;Javadoc&gt; &#123;</span><br><span class="line">            options &#123;</span><br><span class="line">                encoding = Charsets.UTF_8.name()</span><br><span class="line">                charset(Charsets.UTF_8.name())</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 忽略 javadoc 报错</span></span><br><span class="line">            isFailOnError = <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 发布到本地</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        publishing &#123;</span><br><span class="line">            repositories &#123;</span><br><span class="line">                mavenLocal()</span><br><span class="line">            &#125;</span><br><span class="line">            publications &#123;</span><br><span class="line">                create&lt;MavenPublication&gt;(<span class="string">&quot;maven&quot;</span>) &#123;</span><br><span class="line">                    groupId = project.group.toString()</span><br><span class="line">                    artifactId = project.name</span><br><span class="line">                    version = project.version.toString()</span><br><span class="line"></span><br><span class="line">                    from(components[<span class="string">&quot;java&quot;</span>])</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 注意这里</span></span><br><span class="line"><span class="comment"> * 由于根项目添加了 spring-boot 插件, 所有根项目在打包时也会执行 bootJar</span></span><br><span class="line"><span class="comment"> * 而根项目又没有 java 启动类, 就会导致打包报错</span></span><br><span class="line"><span class="comment"> * 下面的配置可忽略根项目的 bootJar 任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.bootJar &#123;</span><br><span class="line">    enabled = <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="主工程-build-gradle-kts【重要】"><a href="#主工程-build-gradle-kts【重要】" class="headerlink" title="主工程 build.gradle.kts【重要】"></a>主工程 build.gradle.kts【重要】</h2><p>其实和 <a href="https://github.com/laolang2016/gradle-study/tree/master/jx-boot">spring boot</a> 比起来并没有什么不同</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.laolang.gradle.Version</span><br><span class="line"><span class="keyword">import</span> com.laolang.gradle.util.GradleUtil</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.gradle.tasks.bundling.BootJar</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 已经在根项目声明过的插件,在子项目中使用时, 不需要写版本号</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">plugins &#123;</span><br><span class="line">    application</span><br><span class="line">    id(<span class="string">&quot;org.springframework.boot&quot;</span>)</span><br><span class="line">    id(<span class="string">&quot;io.spring.dependency-management&quot;</span>)</span><br><span class="line">    id(<span class="string">&quot;maven-publish&quot;</span>)</span><br><span class="line">    id(<span class="string">&quot;com.dorongold.task-tree&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置启动类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">application &#123;</span><br><span class="line">    mainClass.<span class="keyword">set</span>(<span class="string">&quot;com.laolang.jx.App&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// profile</span></span><br><span class="line"><span class="keyword">val</span> profile: String = GradleUtil.getProfile(<span class="string">&quot;dev&quot;</span>)</span><br><span class="line"><span class="comment">// 资源目录</span></span><br><span class="line"><span class="keyword">val</span> resourceDir = <span class="string">&quot;src/main/resources/<span class="variable">$profile</span>&quot;</span></span><br><span class="line"></span><br><span class="line">println(<span class="string">&quot;profile:<span class="variable">$profile</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置资源目录</span></span><br><span class="line">sourceSets &#123;</span><br><span class="line">    main &#123;</span><br><span class="line">        resources &#123;</span><br><span class="line">            srcDir(resourceDir)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 依赖</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">dependencies &#123;</span><br><span class="line">    implementation(project(<span class="string">&quot;:jx-module:jx-module-system:jx-module-system-biz&quot;</span>))</span><br><span class="line"></span><br><span class="line">    compileOnly(<span class="string">&quot;org.projectlombok:lombok&quot;</span>)</span><br><span class="line">    annotationProcessor(<span class="string">&quot;org.projectlombok:lombok&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 由于引入了 log4j2, 所以此处排除默认的 logback 依赖</span></span><br><span class="line">    configurations &#123;</span><br><span class="line">        all &#123;</span><br><span class="line">            exclude(group = <span class="string">&quot;org.springframework.boot&quot;</span>, module = <span class="string">&quot;spring-boot-starter-logging&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">group = <span class="string">&quot;com.laolang.jx&quot;</span></span><br><span class="line">version = <span class="string">&quot;0.1&quot;</span></span><br><span class="line"></span><br><span class="line">java &#123;</span><br><span class="line">    targetCompatibility = Version.targetCompatibility</span><br><span class="line">    sourceCompatibility = Version.sourceCompatibility</span><br><span class="line">    withSourcesJar()</span><br><span class="line">    withJavadocJar()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * java 编译配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.withType&lt;JavaCompile&gt; &#123;</span><br><span class="line">    options.encoding = Charsets.UTF_8.name()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * javadoc</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.withType&lt;Javadoc&gt; &#123;</span><br><span class="line">    options &#123;</span><br><span class="line">        encoding = Charsets.UTF_8.name()</span><br><span class="line">        charset(Charsets.UTF_8.name())</span><br><span class="line">    &#125;</span><br><span class="line">    isFailOnError = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 发布到本地</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">publishing &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        mavenLocal()</span><br><span class="line">    &#125;</span><br><span class="line">    publications &#123;</span><br><span class="line">        create&lt;MavenPublication&gt;(<span class="string">&quot;maven&quot;</span>) &#123;</span><br><span class="line">            groupId = project.group.toString()</span><br><span class="line">            artifactId = project.name</span><br><span class="line">            version = project.version.toString()</span><br><span class="line"></span><br><span class="line">            from(components[<span class="string">&quot;java&quot;</span>])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * spring-boot 打包</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tasks.named&lt;BootJar&gt;(<span class="string">&quot;bootJar&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">// jar 包名称</span></span><br><span class="line">    archiveBaseName.<span class="keyword">set</span>(<span class="string">&quot;jx-boot&quot;</span>)</span><br><span class="line">    <span class="comment">// 版本号设置为空</span></span><br><span class="line">    archiveVersion.<span class="keyword">set</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="common-build-gradle-kts"><a href="#common-build-gradle-kts" class="headerlink" title="common build.gradle.kts"></a>common build.gradle.kts</h2><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    compileOnlyApi(<span class="string">&quot;org.springframework.boot:spring-boot-starter-web&quot;</span>)</span><br><span class="line">    api(<span class="string">&quot;org.springframework.boot:spring-boot-starter-json&quot;</span>)</span><br><span class="line">    api(<span class="string">&quot;org.springframework.boot:spring-boot-starter-log4j2&quot;</span>)</span><br><span class="line"></span><br><span class="line">    compileOnlyApi(libs.knife4j)</span><br><span class="line"></span><br><span class="line">    api(libs.tlog)</span><br><span class="line"></span><br><span class="line">    api(libs.hutool.all)</span><br><span class="line">    api(libs.vavr)</span><br><span class="line">    api(libs.bundles.mapstruct)</span><br><span class="line">    api(libs.guava)</span><br><span class="line">    api(<span class="string">&quot;org.apache.commons:commons-lang3&quot;</span>)</span><br><span class="line"></span><br><span class="line">    compileOnly(<span class="string">&quot;org.projectlombok:lombok&quot;</span>)</span><br><span class="line">    annotationProcessor(<span class="string">&quot;org.projectlombok:lombok&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="jx-spring-boot-starter-web-build-gradle-kts"><a href="#jx-spring-boot-starter-web-build-gradle-kts" class="headerlink" title="jx-spring-boot-starter-web build.gradle.kts"></a>jx-spring-boot-starter-web build.gradle.kts</h2><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    api(project(<span class="string">&quot;:jx-framework:jx-common&quot;</span>))</span><br><span class="line"></span><br><span class="line">    api(<span class="string">&quot;org.springframework.boot:spring-boot-starter-web&quot;</span>)</span><br><span class="line">    api(libs.knife4j)</span><br><span class="line"></span><br><span class="line">    compileOnly(<span class="string">&quot;org.projectlombok:lombok&quot;</span>)</span><br><span class="line">    annotationProcessor(<span class="string">&quot;org.projectlombok:lombok&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="其他构建文件"><a href="#其他构建文件" class="headerlink" title="其他构建文件"></a>其他构建文件</h2><p><strong>略</strong></p>
<h2 id="几个小问题"><a href="#几个小问题" class="headerlink" title="几个小问题"></a>几个小问题</h2><h3 id="打包时-bootJar-找不到启动类"><a href="#打包时-bootJar-找不到启动类" class="headerlink" title="打包时 bootJar 找不到启动类"></a>打包时 bootJar 找不到启动类</h3><p><img src="/images/2024-09-12-gradle-study/012.png"></p>
<p>根项目忽略 <code>bootJar</code> 任务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 注意这里 </span><br><span class="line"> * 由于根项目添加了 spring-boot 插件, 所有根项目在打包时也会执行 bootJar</span><br><span class="line"> * 而根项目又没有 java 启动类, 就会导致打包报错</span><br><span class="line"> * 下面的配置可忽略根项目的 bootJar 任务</span><br><span class="line"> */</span><br><span class="line">tasks.bootJar &#123;</span><br><span class="line">    enabled = false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="idea-打包时-lombok-报错"><a href="#idea-打包时-lombok-报错" class="headerlink" title="idea 打包时 lombok 报错"></a>idea 打包时 lombok 报错</h3><p><img src="/images/2024-09-12-gradle-study/013.png"></p>
<p>此问题不一定每次都会出现, 在设置中使用 <code>wrapper</code> 构建打包即可</p>
<p><img src="/images/2024-09-12-gradle-study/014.png"></p>
<p>一个小发现: 如果 <code>lombok</code> 报错, 那么在 <code>idea</code> 中先用 <code>wrapper</code> 打包, 此时不报错, 再用 <code>Local installtion</code> 打包, 也不会再报错了</p>
<h3 id="关于-spring-boot-与-lombok-的引入"><a href="#关于-spring-boot-与-lombok-的引入" class="headerlink" title="关于 spring boot 与 lombok 的引入"></a>关于 spring boot 与 lombok 的引入</h3><p>按照 <a href="https://docs.springframework.org.cn/spring-boot/gradle-plugin/managing-dependencies.html">官方文档</a> 的描述, 引用方式是这样的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">	java</span><br><span class="line">	id(&quot;org.springframework.boot&quot;) version &quot;3.3.0&quot; apply false</span><br><span class="line">	id(&quot;io.spring.dependency-management&quot;) version &quot;1.1.5&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencyManagement &#123;</span><br><span class="line">	imports &#123;</span><br><span class="line">		mavenBom(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>但是我这样操作之后无法全局引入 <code>lombok</code>, 所以只好用一个比较丑陋的方式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">subprojects &#123;</span><br><span class="line">    // 不处理主工程, 主工程单独写构建文件</span><br><span class="line">    if (name != &quot;jx-app&quot;) &#123;</span><br><span class="line">        apply(plugin = &quot;java-library&quot;)</span><br><span class="line">        apply(plugin = &quot;maven-publish&quot;)</span><br><span class="line">        apply(plugin = &quot;com.dorongold.task-tree&quot;)</span><br><span class="line">        apply(plugin = &quot;io.spring.dependency-management&quot;)</span><br><span class="line"></span><br><span class="line">        group = &quot;com.laolang.jx&quot;</span><br><span class="line">        version = &quot;0.1&quot;</span><br><span class="line"></span><br><span class="line">        // 导入 Spring Boot 的 bom</span><br><span class="line">        the&lt;DependencyManagementExtension&gt;().apply &#123;</span><br><span class="line">            imports &#123;</span><br><span class="line">                mavenBom(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 注意这里 全局导入 lombok</span><br><span class="line">        dependencies &#123;</span><br><span class="line">            compileOnly(rootProject.libs.lombok)</span><br><span class="line">            annotationProcessor(rootProject.libs.lombok)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="关于-subproject-如何使用版本目录"><a href="#关于-subproject-如何使用版本目录" class="headerlink" title="关于 subproject 如何使用版本目录"></a>关于 subproject 如何使用版本目录</h3><p>可参考 <a href="https://stackoverflow.com/questions/77527617/using-version-catalog-in-gradle-kotlin-build-for-subprojects">这里</a>, 重点就是添加 <code>rootProject</code> 前缀</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">subprojects &#123;</span><br><span class="line">    // 不处理主工程, 主工程单独写构建文件</span><br><span class="line">    if (name != &quot;jx-app&quot;) &#123;</span><br><span class="line">        // 注意这里 全局导入 lombok</span><br><span class="line">        dependencies &#123;</span><br><span class="line">            compileOnly(rootProject.libs.lombok)</span><br><span class="line">            annotationProcessor(rootProject.libs.lombok)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="代码地址-3"><a href="#代码地址-3" class="headerlink" title="代码地址"></a>代码地址</h2><p><a href="https://github.com/laolang2016/gradle-study/tree/master/jx-boot-multi">https://github.com/laolang2016/gradle-study/tree/master/jx-boot-multi</a></p>
<h2 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h2><ol>
<li>多模块有很多比较有意思的问题, 比如依赖传递, 比如子项目公用构建逻辑等, 我这里只是给出了一个可行的例子, 并没有详细解释, 或者说我了解的太过流于表面</li>
<li>使用 gradle 进行多模块构建出了上面这种一个启动项目的, 还有一种就是多个启动项目, 比如 spring cloud 项目, 这个等之后再处理. 大致思路是这样的: 写一个自定义插件, 然后将这个插件应用到每个微服务的启动项目中, 在此插件的配置中填写依赖哪些子模块类似这样<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jxBootApp &#123;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        module(&quot;jx-module-system-api&quot;)</span><br><span class="line">        module(&quot;jx-module-auth-api&quot;)</span><br><span class="line">        module(&quot;jx-mall-product-api&quot;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 启动类就不用配置了, 由自定义插件根据项目名自动填充, 当然命名要有规律</span><br><span class="line">    // 比如项目名是 jx-mall-product-biz , 那么启动类应该是 JxMallProductBizApplication</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>为什么项目结构是这样的? 主要是为了和 <code>maven</code> 构建方式兼容, 如果不考虑兼用 <code>maven</code> , 其实所有子模块应该平铺而不是嵌套</li>
<li>尚未考虑 <code>gradle</code> 和 <code>docker</code> 或者 <code>jenkins</code> 如何结合</li>
<li>有些工程化的东西还没处理, 例如 <code>checkstyle</code></li>
</ol>
<h2 id="参考-6"><a href="#参考-6" class="headerlink" title="参考"></a>参考</h2><p><a href="https://zhuanlan.zhihu.com/p/354119928">SpringBoot+Gradle构建多模块项目</a></p>
<p><a href="https://blog.csdn.net/qq_36279799/article/details/131983818">springboot gradle kotlin 多模块（或微服务）统一依赖及版本管理和构建不同环境打包task,docker镜像构建task</a></p>
<p><a href="https://github.com/emmapatterson/multi-module-spring-boot">https://github.com/emmapatterson/multi-module-spring-boot</a></p>
<p><a href="https://docs.springframework.org.cn/spring-boot/gradle-plugin/managing-dependencies.html">spring 中文文档 gradle 插件 管理依赖项</a></p>
<p><a href="https://docs.spring.io/spring-boot/docs/2.4.5/gradle-plugin/reference/htmlsingle/">spring boot gradle 插件官方文档</a></p>
<p><a href="https://juejin.cn/post/6955854790027345934">Springboot 多模块依赖构建常见问题</a></p>
<p><a href="https://stackoverflow.com/questions/77527617/using-version-catalog-in-gradle-kotlin-build-for-subprojects">Using version catalog in Gradle Kotlin build for subprojects</a></p>
]]></content>
      <categories>
        <category>java</category>
        <category>gradle</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>gradle</tag>
      </tags>
  </entry>
  <entry>
    <title>java 新特性</title>
    <url>/2024/09/13/java-new-feature/</url>
    <content><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.bilibili.com/video/BV16v4y1y7xa">java8之后版本的变化-涵盖java9~21新特性</a><br><a href="https://www.bilibili.com/video/BV1tU4y1y7Fg">JavaSE 9-17 新特性 已完结（IDEA 2022.1最新版）4K蓝光画质 Java9&#x2F;10&#x2F;11&#x2F;12&#x2F;13&#x2F;14&#x2F;15&#x2F;16&#x2F;17讲解</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>javafx 002 启动方式</title>
    <url>/2024/09/14/javafx-002-start-type/</url>
    <content><![CDATA[<h1 id="方式一-继承-Application"><a href="#方式一-继承-Application" class="headerlink" title="方式一 继承 Application"></a>方式一 继承 Application</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.fx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javafx.application.Application;</span><br><span class="line"><span class="keyword">import</span> javafx.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> javafx.event.EventHandler;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.Scene;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.control.Alert;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.control.Button;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.layout.StackPane;</span><br><span class="line"><span class="keyword">import</span> javafx.stage.Stage;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FxHelloApplication</span> <span class="keyword">extends</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;fx hello is running...&quot;</span>);</span><br><span class="line">        launch(args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">(Stage primaryStage)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>();</span><br><span class="line">        btn.setText(<span class="string">&quot;Say &#x27;Hello World&#x27;&quot;</span>);</span><br><span class="line">        btn.setOnAction(<span class="keyword">new</span> <span class="title class_">EventHandler</span>&lt;ActionEvent&gt;() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handle</span><span class="params">(ActionEvent event)</span> &#123;</span><br><span class="line">                <span class="type">Alert</span> <span class="variable">alert</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Alert</span>(Alert.AlertType.INFORMATION);</span><br><span class="line">                alert.setTitle(<span class="string">&quot;Information Dialog&quot;</span>);</span><br><span class="line">                alert.setHeaderText(<span class="string">&quot;Look, an Information Dialog&quot;</span>);</span><br><span class="line">                alert.setContentText(<span class="string">&quot;I have a great message for you!&quot;</span>);</span><br><span class="line"></span><br><span class="line">                alert.showAndWait();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="type">StackPane</span> <span class="variable">root</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StackPane</span>();</span><br><span class="line">        root.getChildren().add(btn);</span><br><span class="line"></span><br><span class="line">        <span class="type">Scene</span> <span class="variable">scene</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scene</span>(root, <span class="number">300</span>, <span class="number">250</span>);</span><br><span class="line"></span><br><span class="line">        primaryStage.setTitle(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">        primaryStage.setScene(scene);</span><br><span class="line">        primaryStage.show();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="方式二-启动类与-Application-分开"><a href="#方式二-启动类与-Application-分开" class="headerlink" title="方式二 启动类与 Application 分开"></a>方式二 启动类与 Application 分开</h1><h2 id="启动类"><a href="#启动类" class="headerlink" title="启动类"></a>启动类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.fx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javafx.application.Application;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FxHelloApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;fx hello is running...&quot;</span>);</span><br><span class="line">        Application.launch(FxHelloLaunch.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.fx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javafx.application.Application;</span><br><span class="line"><span class="keyword">import</span> javafx.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> javafx.event.EventHandler;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.Scene;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.control.Alert;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.control.Button;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.layout.StackPane;</span><br><span class="line"><span class="keyword">import</span> javafx.stage.Stage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FxHelloLaunch</span> <span class="keyword">extends</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">(Stage primaryStage)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>();</span><br><span class="line">        btn.setText(<span class="string">&quot;Say &#x27;Hello World&#x27;&quot;</span>);</span><br><span class="line">        btn.setOnAction(<span class="keyword">new</span> <span class="title class_">EventHandler</span>&lt;ActionEvent&gt;() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handle</span><span class="params">(ActionEvent event)</span> &#123;</span><br><span class="line">                <span class="type">Alert</span> <span class="variable">alert</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Alert</span>(Alert.AlertType.INFORMATION);</span><br><span class="line">                alert.setTitle(<span class="string">&quot;Information Dialog&quot;</span>);</span><br><span class="line">                alert.setHeaderText(<span class="string">&quot;Look, an Information Dialog&quot;</span>);</span><br><span class="line">                alert.setContentText(<span class="string">&quot;I have a great message for you!&quot;</span>);</span><br><span class="line"></span><br><span class="line">                alert.showAndWait();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="type">StackPane</span> <span class="variable">root</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StackPane</span>();</span><br><span class="line">        root.getChildren().add(btn);</span><br><span class="line"></span><br><span class="line">        <span class="type">Scene</span> <span class="variable">scene</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scene</span>(root, <span class="number">300</span>, <span class="number">250</span>);</span><br><span class="line"></span><br><span class="line">        primaryStage.setTitle(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">        primaryStage.setScene(scene);</span><br><span class="line">        primaryStage.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>java</category>
        <category>javafx</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>javafx</tag>
      </tags>
  </entry>
  <entry>
    <title>centos 笔记</title>
    <url>/2024/09/15/centos-note/</url>
    <content><![CDATA[<h1 id="镜像下载"><a href="#镜像下载" class="headerlink" title="镜像下载"></a>镜像下载</h1><p><a href="https://mirrors.aliyun.com/centos-vault/7.4.1708/isos/x86_64/">https://mirrors.aliyun.com/centos-vault/7.4.1708/isos/x86_64&#x2F;</a></p>
<p><a href="https://mirrors.aliyun.com/centos-vault/7.4.1708/isos/x86_64/CentOS-7-x86_64-DVD-1708.iso">https://mirrors.aliyun.com/centos-vault/7.4.1708/isos/x86_64&#x2F;CentOS-7-x86_64-DVD-1708.iso</a></p>
<h1 id="virtual-box-安装"><a href="#virtual-box-安装" class="headerlink" title="virtual box 安装"></a>virtual box 安装</h1><h2 id="网卡配置"><a href="#网卡配置" class="headerlink" title="网卡配置"></a>网卡配置</h2><p><img src="/images/2024-09-15-centos-note/001.png"><br><img src="/images/2024-09-15-centos-note/002.png"></p>
<h2 id="联网配置"><a href="#联网配置" class="headerlink" title="联网配置"></a>联网配置</h2><p>安装时进入如下界面<br><img src="/images/2024-09-15-centos-note/003.png"><br>打开第一个网络连接即可<br><img src="/images/2024-09-15-centos-note/004.png"></p>
<h2 id="静态-IP-配置"><a href="#静态-IP-配置" class="headerlink" title="静态 IP 配置"></a>静态 IP 配置</h2><p>打开 <code>/etc/sysconfig/network-scripts/ifcfg-ens8</code>, 名字可能不一样, 按照上面的配置, 应该是后缀数字比较大的, 或者 <code>ip addr</code> 命令, 没有应该会看到 <code>enp0s3</code> 有 IP 地址, 打开没有 IP地址的那个进行配置就可以了, 配置如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line"></span><br><span class="line"># 设置为 static</span><br><span class="line">BOOTPROTO=static</span><br><span class="line"></span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=enp0s8</span><br><span class="line">UUID=dc7e2d0f-02c1-40fe-a394-a9b6bcfd009b</span><br><span class="line">DEVICE=enp0s8</span><br><span class="line"></span><br><span class="line"># 设置为开机启动</span><br><span class="line">ONBOOT=yes</span><br><span class="line"></span><br><span class="line"># 静态 IP</span><br><span class="line">IPADDR=192.168.56.103</span><br><span class="line"></span><br><span class="line"># 网管</span><br><span class="line">GATEWAY=192.168.56.1</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">DNS1=8.8.8.8</span><br></pre></td></tr></table></figure>


<p>IP 地址确认</p>
<p><img src="/images/2024-09-15-centos-note/005.png"></p>
<p><img src="/images/2024-09-15-centos-note/006.png"></p>
<p><img src="/images/2024-09-15-centos-note/007.png"></p>
<h2 id="设置-yum-源"><a href="#设置-yum-源" class="headerlink" title="设置 yum 源"></a>设置 yum 源</h2><blockquote>
<p>记得备份</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br><span class="line">yum update</span><br></pre></td></tr></table></figure>

<h1 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h1><h2 id="安装-docker"><a href="#安装-docker" class="headerlink" title="安装 docker"></a>安装 docker</h2><p><strong>卸载旧版本</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum remove docker \</span><br><span class="line">docker-client \</span><br><span class="line">docker-client-latest \</span><br><span class="line">docker-common \</span><br><span class="line">docker-latest \</span><br><span class="line">docker-latest-logrotate \</span><br><span class="line">docker-logrotate \</span><br><span class="line">docker-engine</span><br></pre></td></tr></table></figure>


<p><strong>安装依赖包</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y yum-utils</span><br></pre></td></tr></table></figure>

<p><strong>配置镜像仓库</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum-config-manager \</span><br><span class="line">--add-repo \</span><br><span class="line">https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure>

<p><strong>更新 yum 索引</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum makecache fast</span><br></pre></td></tr></table></figure>

<p><strong>安装 docker</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 红帽系列</span><br><span class="line">yum install -y yajl</span><br><span class="line"># ubuntu 系列</span><br><span class="line">apt-get install yajl-tools </span><br></pre></td></tr></table></figure>



<h2 id="docker-加速镜像"><a href="#docker-加速镜像" class="headerlink" title="docker 加速镜像"></a>docker 加速镜像</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;xxx&quot;] 切换成自己的地址</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>996.icu</category>
        <category>linux</category>
        <category>centos</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>996.icu</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>javafx 003 生命周期</title>
    <url>/2024/09/14/javafx-003-lifecycle/</url>
    <content><![CDATA[<h1 id="生命周期的三个方法"><a href="#生命周期的三个方法" class="headerlink" title="生命周期的三个方法"></a>生命周期的三个方法</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.fx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javafx.application.Application;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.Scene;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.layout.StackPane;</span><br><span class="line"><span class="keyword">import</span> javafx.stage.Stage;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FxHelloLaunch</span> <span class="keyword">extends</span> <span class="title class_">Application</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        log.info(<span class="string">&quot;init&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">(Stage primaryStage)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        log.info(<span class="string">&quot;start&quot;</span>);</span><br><span class="line">        <span class="type">StackPane</span> <span class="variable">root</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StackPane</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">Scene</span> <span class="variable">scene</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scene</span>(root, <span class="number">300</span>, <span class="number">250</span>);</span><br><span class="line"></span><br><span class="line">        primaryStage.setTitle(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">        primaryStage.setScene(scene);</span><br><span class="line">        primaryStage.show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        log.info(<span class="string">&quot;stop&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>java</category>
        <category>javafx</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>javafx</tag>
      </tags>
  </entry>
  <entry>
    <title>maven 笔记</title>
    <url>/2024/09/15/maven-note/</url>
    <content><![CDATA[<h1 id="阿里云镜像"><a href="#阿里云镜像" class="headerlink" title="阿里云镜像"></a>阿里云镜像</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="maven-基本操作"><a href="#maven-基本操作" class="headerlink" title="maven 基本操作"></a>maven 基本操作</h1><h2 id="设置-MAVEN-OPTS-环境变量"><a href="#设置-MAVEN-OPTS-环境变量" class="headerlink" title="设置 MAVEN_OPTS 环境变量"></a>设置 MAVEN_OPTS 环境变量</h2><p>通常 <code>MAVEN_OPTS</code> 用来配置运行时内存大小</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-Xms1024m -Xmx1024m</span><br></pre></td></tr></table></figure>


<p>如果不指定, 则使用本机默认的 <code>jvm</code> 配置, 例如我的电脑上默认配置如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\code\idea\maven-study\maven-study\jx-boot&gt;java -XX:+PrintFlagsFinal -version | findstr /i &quot;HeapSize PermSize ThreadStackSize&quot;</span><br><span class="line">     intx CompilerThreadStackSize                   = 0                                   &#123;pd product&#125;</span><br><span class="line">    uintx ErgoHeapSizeLimit                         = 0                                   &#123;product&#125;</span><br><span class="line">    uintx HeapSizePerGCThread                       = 87241520                            &#123;product&#125;</span><br><span class="line">    uintx InitialHeapSize                          := 1069547520                          &#123;product&#125;</span><br><span class="line">    uintx LargePageHeapSizeThreshold                = 134217728                           &#123;product&#125;</span><br><span class="line">    uintx MaxHeapSize                              := 4227858432                          &#123;product&#125;</span><br><span class="line">     intx ThreadStackSize                           = 0                                   &#123;pd product&#125;</span><br><span class="line">     intx VMThreadStackSize                         = 0                                   &#123;pd product&#125;</span><br><span class="line">java version &quot;1.8.0_151&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_151-b12)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.151-b12, mixed mode)</span><br><span class="line"></span><br><span class="line">E:\code\idea\maven-study\maven-study\jx-boot&gt;</span><br></pre></td></tr></table></figure>

<p><code>Xms</code> 配置为 1G</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uintx InitialHeapSize                          := 1069547520                          &#123;product&#125;</span><br></pre></td></tr></table></figure>

<p><code>Xmx</code> 配置为 4G</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uintx MaxHeapSize                              := 4227858432                          &#123;product&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>关于 <code>java8</code> 查看默认内存大小的方法: </p>
<p>windows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -XX:+PrintFlagsFinal -version | findstr /i &quot;HeapSize PermSize ThreadStackSize&quot;</span><br></pre></td></tr></table></figure>

<p>linux:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -XX:+PrintFlagsFinal -version | grep -iE &#x27;HeapSize|PermSize|ThreadStackSize&#x27;</span><br></pre></td></tr></table></figure>

<p>关于 <code>jvm</code> 各种内存大小的含义可参考: <a href="https://blog.csdn.net/superzyl/article/details/79077166">java -Xms -Xmx -XX:PermSize -XX:MaxPermSize-详解</a></p>
</blockquote>
<h1 id="maven-常用插件"><a href="#maven-常用插件" class="headerlink" title="maven 常用插件"></a>maven 常用插件</h1><h2 id="exec-maven-plugin"><a href="#exec-maven-plugin" class="headerlink" title="exec-maven-plugin"></a>exec-maven-plugin</h2><h3 id="命令说明"><a href="#命令说明" class="headerlink" title="命令说明"></a>命令说明</h3><p><code>exec:exec</code> : execute programs and Java programs in a separate process.<br><code>exec:java</code> : execute Java programs in the same VM.</p>
<h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><p><strong>pom.xml</strong></p>
<blockquote>
<p><strong>注意:</strong> 这是一个最小化配置</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.mojo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>exec-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executable</span>&gt;</span>java<span class="tag">&lt;/<span class="name">executable</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">arguments</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">argument</span>&gt;</span>-classpath<span class="tag">&lt;/<span class="name">argument</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">classpath</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">argument</span>&gt;</span>com.laolang.jx.JxApplication<span class="tag">&lt;/<span class="name">argument</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">arguments</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>直接执行 <code>mvn clean package exec:exec</code> 即可</p>
<blockquote>
<p><strong>注意:</strong> <code>maven-exec-plugin</code> 不会自动编译代码, 所以需要手动执行编译动作, 自动编译的方法在下面</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\code\idea\maven-study\maven-study\jx-boot&gt;mvn clean package exec:exec</span><br><span class="line">[INFO] Scanning for projects...</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] -----------------------&lt; com.laolang.jx:jx-boot &gt;-----------------------</span><br><span class="line">[INFO] Building jx-boot 1.0-SNAPSHOT</span><br><span class="line">[INFO]   from pom.xml</span><br><span class="line">[INFO] --------------------------------[ jar ]---------------------------------</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- clean:3.2.0:clean (default-clean) @ jx-boot ---</span><br><span class="line">[INFO] Deleting E:\code\idea\maven-study\maven-study\jx-boot\target</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- resources:3.3.1:resources (default-resources) @ jx-boot ---</span><br><span class="line">[WARNING] Using platform encoding (GBK actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource from src\main\resources to target\classes</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- compiler:3.13.0:compile (default-compile) @ jx-boot ---</span><br><span class="line">[INFO] Recompiling the module because of changed source code.</span><br><span class="line">[WARNING] File encoding has not been set, using platform encoding GBK, i.e. build is platform dependent!</span><br><span class="line">[INFO] Compiling 1 source file with javac [debug target 1.8] to target\classes</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- resources:3.3.1:testResources (default-testResources) @ jx-boot ---</span><br><span class="line">[WARNING] Using platform encoding (GBK actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] skip non existing resourceDirectory E:\code\idea\maven-study\maven-study\jx-boot\src\test\resources</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ jx-boot ---</span><br><span class="line">[INFO] Recompiling the module because of changed dependency.</span><br><span class="line">[WARNING] File encoding has not been set, using platform encoding GBK, i.e. build is platform dependent!</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- surefire:3.2.5:test (default-test) @ jx-boot ---</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- jar:3.4.1:jar (default-jar) @ jx-boot ---</span><br><span class="line">[INFO] Building jar: E:\code\idea\maven-study\maven-study\jx-boot\target\jx-boot-1.0-SNAPSHOT.jar</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- exec:3.4.1:exec (default-cli) @ jx-boot ---</span><br><span class="line">Hello World</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time:  1.025 s</span><br><span class="line">[INFO] Finished at: 2024-09-15T11:19:22+08:00</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">E:\code\idea\maven-study\maven-study\jx-boot&gt;</span><br></pre></td></tr></table></figure>

<h3 id="自动编译"><a href="#自动编译" class="headerlink" title="自动编译"></a>自动编译</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.mojo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>exec-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>exec<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executable</span>&gt;</span>java<span class="tag">&lt;/<span class="name">executable</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">arguments</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">argument</span>&gt;</span>-classpath<span class="tag">&lt;/<span class="name">argument</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">classpath</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">argument</span>&gt;</span>com.laolang.jx.JxApplication<span class="tag">&lt;/<span class="name">argument</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">arguments</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>直接执行 <code>mvn package</code> 即可, 效果如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\code\idea\maven-study\maven-study\jx-boot&gt;dir</span><br><span class="line"> 驱动器 E 中的卷是 新加卷</span><br><span class="line"> 卷的序列号是 FA05-F6BD</span><br><span class="line"></span><br><span class="line"> E:\code\idea\maven-study\maven-study\jx-boot 的目录</span><br><span class="line"></span><br><span class="line">2024/09/15  11:26    &lt;DIR&gt;          .</span><br><span class="line">2024/09/15  11:26    &lt;DIR&gt;          ..</span><br><span class="line">2024/09/15  11:26             2,030 pom.xml</span><br><span class="line">2024/09/15  10:26    &lt;DIR&gt;          src</span><br><span class="line">               1 个文件          2,030 字节</span><br><span class="line">               3 个目录 332,883,976,192 可用字节</span><br><span class="line"></span><br><span class="line">E:\code\idea\maven-study\maven-study\jx-boot&gt;mvn package</span><br><span class="line">[INFO] Scanning for projects...</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] -----------------------&lt; com.laolang.jx:jx-boot &gt;-----------------------</span><br><span class="line">[INFO] Building jx-boot 1.0-SNAPSHOT</span><br><span class="line">[INFO]   from pom.xml</span><br><span class="line">[INFO] --------------------------------[ jar ]---------------------------------</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- resources:3.3.1:resources (default-resources) @ jx-boot ---</span><br><span class="line">[WARNING] Using platform encoding (GBK actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource from src\main\resources to target\classes</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- compiler:3.13.0:compile (default-compile) @ jx-boot ---</span><br><span class="line">[INFO] Recompiling the module because of changed source code.</span><br><span class="line">[WARNING] File encoding has not been set, using platform encoding GBK, i.e. build is platform dependent!</span><br><span class="line">[INFO] Compiling 1 source file with javac [debug target 1.8] to target\classes</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- resources:3.3.1:testResources (default-testResources) @ jx-boot ---</span><br><span class="line">[WARNING] Using platform encoding (GBK actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] skip non existing resourceDirectory E:\code\idea\maven-study\maven-study\jx-boot\src\test\resources</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ jx-boot ---</span><br><span class="line">[INFO] Recompiling the module because of changed dependency.</span><br><span class="line">[WARNING] File encoding has not been set, using platform encoding GBK, i.e. build is platform dependent!</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- surefire:3.2.5:test (default-test) @ jx-boot ---</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- jar:3.4.1:jar (default-jar) @ jx-boot ---</span><br><span class="line">[INFO] Building jar: E:\code\idea\maven-study\maven-study\jx-boot\target\jx-boot-1.0-SNAPSHOT.jar</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- exec:3.4.1:exec (default) @ jx-boot ---</span><br><span class="line">Hello World</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time:  0.958 s</span><br><span class="line">[INFO] Finished at: 2024-09-15T11:26:28+08:00</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">E:\code\idea\maven-study\maven-study\jx-boot&gt;</span><br></pre></td></tr></table></figure>

<h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.mojo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>exec-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>install<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>exec<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">executable</span>&gt;</span>java<span class="tag">&lt;/<span class="name">executable</span>&gt;</span> <span class="comment">&lt;!-- executable指的是要执行什么样的命令 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">arguments</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">argument</span>&gt;</span>-DsystemProperty1=value1<span class="tag">&lt;/<span class="name">argument</span>&gt;</span> <span class="comment">&lt;!-- 这是一个系统属性参数 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">argument</span>&gt;</span>-DsystemProperty2=value2<span class="tag">&lt;/<span class="name">argument</span>&gt;</span> <span class="comment">&lt;!-- 这是一个系统属性参数 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">argument</span>&gt;</span>-XX:MaxPermSize=256m<span class="tag">&lt;/<span class="name">argument</span>&gt;</span> <span class="comment">&lt;!-- 这是一个JVM参数 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">argument</span>&gt;</span>-classpath<span class="tag">&lt;/<span class="name">argument</span>&gt;</span> <span class="comment">&lt;!-- 这是classpath属性，其值就是下面的&lt;classpath/&gt; --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">classpath</span>/&gt;</span> <span class="comment">&lt;!-- 这是exec插件最有价值的地方，工程的classpath并不需要手动指定，由exec自动计算得出 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">argument</span>&gt;</span>com.github.binarylei.Main<span class="tag">&lt;/<span class="name">argument</span>&gt;</span> <span class="comment">&lt;!-- 程序入口，主类名称 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">argument</span>&gt;</span>arg1<span class="tag">&lt;/<span class="name">argument</span>&gt;</span> <span class="comment">&lt;!-- 程序的第一个命令行参数 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">argument</span>&gt;</span>arg2<span class="tag">&lt;/<span class="name">argument</span>&gt;</span> <span class="comment">&lt;!-- 程序的第二个命令行参数 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">arguments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.cnblogs.com/binarylei/p/8628243.html">Maven系列（二）exec-maven-plugin</a></p>
<p><a href="https://www.mojohaus.org/exec-maven-plugin/">maven-exec-plugin 官方文档</a></p>
<h2 id="maven-jar-plugin"><a href="#maven-jar-plugin" class="headerlink" title="maven-jar-plugin"></a>maven-jar-plugin</h2><h2 id="命令说明-1"><a href="#命令说明-1" class="headerlink" title="命令说明"></a>命令说明</h2><p><code>jar:jar</code>: 为你的项目类创建一个包含资源的 jar 文件<br><code>jar:test-jar</code>: 为您的项目测试类创建一个 jar 文件</p>
<h2 id="打包可执行-jar"><a href="#打包可执行-jar" class="headerlink" title="打包可执行 jar"></a>打包可执行 jar</h2><p>一般 <code>maven</code> 打包的 <code>jar</code> 文件时不能直接执行的, 此时加入此插件即可执行</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-jar-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.laolang.jx.JxApplication<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="配置-classpath"><a href="#配置-classpath" class="headerlink" title="配置 classpath"></a>配置 classpath</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-jar-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.laolang.jx.JxApplication<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">addClasspath</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addClasspath</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">classpathPrefix</span>&gt;</span>dependency/<span class="tag">&lt;/<span class="name">classpathPrefix</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>此时打包后, 还需要执行 <code>mvn dependency:copy-dependencies</code> 命令, 将依赖的 <code>jar</code> 包下载下来, 此命令默认下载到 <code>target/dependency</code> 目录</p>
<h3 id="强制使用-SNAPSHOT-依赖"><a href="#强制使用-SNAPSHOT-依赖" class="headerlink" title="强制使用 SNAPSHOT 依赖"></a>强制使用 SNAPSHOT 依赖</h3><p>默认 <code>SNAPSHOT</code> 依赖不会被加载, 可以使用 <code>useUniqueVersions</code> 来启用</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">useUniqueVersions</span>&gt;</span>false<span class="tag">&lt;/<span class="name">useUniqueVersions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h3><p><a href="https://maven.org.cn/plugins/maven-jar-plugin/">Apache Maven JAR 中文文档</a><br><a href="https://blog.csdn.net/whq12789/article/details/106568531">java -jar maven项目打包提示.jar中没有主清单属性</a><br><a href="https://blog.csdn.net/txhlxy/article/details/136066509">maven插件maven-jar-plugin构建jar文件详细使用</a></p>
<h2 id="maven-shade-plugin"><a href="#maven-shade-plugin" class="headerlink" title="maven-shade-plugin"></a>maven-shade-plugin</h2><h2 id="基本使用-1"><a href="#基本使用-1" class="headerlink" title="基本使用"></a>基本使用</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-shade-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transformers</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transformer</span> <span class="attr">implementation</span>=<span class="string">&quot;org.apache.maven.plugins.shade.resource.ManifestResourceTransformer&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">manifestEntries</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Main-Class</span>&gt;</span>$&#123;app.main.class&#125;<span class="tag">&lt;/<span class="name">Main-Class</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">manifestEntries</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">transformer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">transformers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>shade<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>直接运行 <code>mvn package</code> 会生成两个文件<br><code>jx-boot-1.0-SNAPSHOT.jar</code> : 包含所有依赖<br><code>original-jx-boot-1.0-SNAPSHOT.jar</code>: 只包含项目代码, 不包含依赖</p>
<h3 id="参考-2"><a href="#参考-2" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/yangguosb/article/details/80619481">maven-shade-plugin介绍及使用</a><br><a href="https://www.cnblogs.com/lkxed/p/maven-plugin-shade.html">maven-plugin-shade 详解</a><br><a href="https://maven.apache.org/plugins/maven-shade-plugin/index.html">Apache Maven Shade Plugin 官网文档</a></p>
<h2 id="maven-antrun-plugin"><a href="#maven-antrun-plugin" class="headerlink" title="maven-antrun-plugin"></a>maven-antrun-plugin</h2><h2 id="maven-compiler-plugin"><a href="#maven-compiler-plugin" class="headerlink" title="maven-compiler-plugin"></a>maven-compiler-plugin</h2><h3 id="基本使用-2"><a href="#基本使用-2" class="headerlink" title="基本使用"></a>基本使用</h3><p>通常用来配置编译时的语言版本</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span>&gt;</span></span><br><span class="line">  [...]</span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">  [...]</span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.13.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;maven.compiler.source&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;maven.compiler.target&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>$&#123;project.build.sourceEncoding&#125;<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="参考-3"><a href="#参考-3" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/Java_1710/article/details/120992614">maven-compiler-plugin 插件详解</a><br><a href="https://maven.org.cn/plugins/maven-compiler-plugin/">maven-compiler-plugin 中文文档</a></p>
<h2 id="maven-resource-plugin"><a href="#maven-resource-plugin" class="headerlink" title="maven-resource-plugin"></a>maven-resource-plugin</h2><h2 id="maven-surefire-plugin"><a href="#maven-surefire-plugin" class="headerlink" title="maven-surefire-plugin"></a>maven-surefire-plugin</h2><h2 id="jacoco"><a href="#jacoco" class="headerlink" title="jacoco"></a>jacoco</h2><p><a href="https://blog.csdn.net/Fung_Daniel/article/details/90700107">Maven通过Jacoco生成单元测试覆盖率数据，无法生成jacoco.exec</a></p>
<h2 id="jetty-maven-plugin"><a href="#jetty-maven-plugin" class="headerlink" title="jetty-maven-plugin"></a>jetty-maven-plugin</h2><h1 id="参考-4"><a href="#参考-4" class="headerlink" title="参考"></a>参考</h1><p><a href="https://developer.aliyun.com/article/1469391">常用 Maven 插件大全（速度收藏）</a></p>
<p><a href="https://www.cnblogs.com/april-chen/p/10414857.html">Maven常用插件整理</a></p>
<p><a href="https://www.bilibili.com/video/BV12q4y147e4">尚硅谷Maven教程（maven入门+高深，全网无出其右！）</a></p>
<p><a href="https://www.bilibili.com/video/BV1nx4y1U755">动力节点最新Maven教程，maven从零到精通</a></p>
<p><a href="https://blog.csdn.net/txhlxy/category_12566515.html">玩转Maven</a></p>
<p><a href="https://blog.csdn.net/weixin_46228112/article/details/134196308">Maven系列</a></p>
]]></content>
      <categories>
        <category>java</category>
        <category>maven</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>php 环境搭建</title>
    <url>/2024/09/16/php-setup/</url>
    <content><![CDATA[<h1 id="下载-php"><a href="#下载-php" class="headerlink" title="下载 php"></a>下载 php</h1><p><a href="https://windows.php.net/downloads/releases/archives/">https://windows.php.net/downloads/releases/archives/</a></p>
<p>7.4.33 下载链接如下:</p>
<p><a href="https://windows.php.net/downloads/releases/archives/php-7.4.33-Win32-vc15-x64.zip">https://windows.php.net/downloads/releases/archives/php-7.4.33-Win32-vc15-x64.zip</a></p>
<h1 id="php-Hello-World-搭建"><a href="#php-Hello-World-搭建" class="headerlink" title="php Hello World 搭建"></a>php Hello World 搭建</h1><h2 id="php-配置"><a href="#php-配置" class="headerlink" title="php 配置"></a>php 配置</h2><p>解压后, 复制一份 <code>php.ini-development</code> 为 <code>php.ini</code>, 修改如下两个配置</p>
<p><strong>extension_dir</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; Directory in which the loadable extensions (modules) reside.</span><br><span class="line">; http://php.net/extension-dir</span><br><span class="line">;extension_dir = &quot;./&quot;</span><br><span class="line">; On windows:</span><br><span class="line">extension_dir = &quot;ext&quot;</span><br></pre></td></tr></table></figure>

<p><strong>cgi.fix_pathinfo</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cgi.fix_pathinfo=1</span><br></pre></td></tr></table></figure>

<h2 id="nginx-配置"><a href="#nginx-配置" class="headerlink" title="nginx 配置"></a>nginx 配置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.km-php-dev.com;</span><br><span class="line">    access_log E:/code/php/km/log/www.km-php-dev.com.access.log combined;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   E:/code/php/km/public;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123; </span><br><span class="line">        #网站根目录（跟上面那个一样）</span><br><span class="line">        root E:/code/php/km/public;</span><br><span class="line"></span><br><span class="line">        #php-cgi监听端口号（默认9000，根据实际情况自己修改）     </span><br><span class="line"></span><br><span class="line">        fastcgi_pass 127.0.0.1:9001;   </span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line"></span><br><span class="line">        #下面这里要改看清楚原本是/script$fastcgi_script_name，改成$document_root$fastcgi_script_name;  </span><br><span class="line"></span><br><span class="line">        #$document_root其实就是上面的root，可以直接改成绝对路径E:/self/www$fastcgi_script_name这样子，你喜欢</span><br><span class="line"></span><br><span class="line">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;  </span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="执行如下命令"><a href="#执行如下命令" class="headerlink" title="执行如下命令"></a>执行如下命令</h2><blockquote>
<p>此窗口不可关闭</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\program\php\php7\php-cgi.exe -b 127.0.0.1:9001 -c D:\program\php\php7\php.ini</span><br></pre></td></tr></table></figure>

<h2 id="phpinfo-php"><a href="#phpinfo-php" class="headerlink" title="phpinfo.php"></a>phpinfo.php</h2><p>在 <code>E:/code/php/km/public</code> 目录下添加一个 <code>phpinfo.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="title function_ invoke__">phpinfo</span>();</span><br></pre></td></tr></table></figure>

<h2 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h2><p>直接访问 <code>www.km-php-dev.com</code> 即可</p>
<h1 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h1><h2 id="下载-xdebug"><a href="#下载-xdebug" class="headerlink" title="下载 xdebug"></a>下载 xdebug</h2><ol>
<li><p>访问 <code>phpinfo.php</code>, 然后查看源代码, 全选并赋值</p>
</li>
<li><p>访问 <a href="https://xdebug.org/wizard">https://xdebug.org/wizard</a> , 将刚才赋值的内容直接粘贴到输入框中, 然后点击 <code>Analyse my phpinfo() output</code><br><img src="/images/2024-09-16-php-setup/001.png"></p>
</li>
<li><p>下载 xdebug<br><img src="/images/2024-09-16-php-setup/002.png"></p>
</li>
</ol>
<h2 id="php-ini"><a href="#php-ini" class="headerlink" title="php.ini"></a>php.ini</h2><p>在文件最后添加如下配置</p>
<blockquote>
<p>注意: </p>
<ol>
<li>路径一定要写正确</li>
<li>配置要用最新的, 否则 <code>debug</code> 无效</li>
<li>端口号不能用 <code>9001</code>, 因为 <code>php-cgi</code> 已经占用了</li>
</ol>
</blockquote>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">zend_extension</span> = D:/program/php/php7/ext/php_xdebug-<span class="number">3.1</span>.<span class="number">6</span>-<span class="number">7.4</span>-vc15-x<span class="number">86_64</span>.dll</span><br><span class="line"><span class="attr">xdebug.client_port</span>=<span class="number">9003</span>	<span class="comment">#本地默认9000端口冲突改成了9001</span></span><br><span class="line"><span class="attr">xdebug.client_host</span>=<span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">xdebug.mode</span>=debug</span><br><span class="line"><span class="attr">xdebug.log</span>=D:/program/php/php7/temp/debug.log	<span class="comment">#日志路径</span></span><br><span class="line"><span class="attr">xdebug.start_with_request</span>=<span class="literal">yes</span></span><br></pre></td></tr></table></figure>

<h2 id="vscode"><a href="#vscode" class="headerlink" title="vscode"></a>vscode</h2><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p><img src="/images/2024-09-16-php-setup/003.png"></p>
<h3 id="设置-php-路径"><a href="#设置-php-路径" class="headerlink" title="设置 php 路径"></a>设置 php 路径</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;php.validate.executablePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;D:/program/php/php7/php.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;php.debug.executablePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;D:/program/php/php7/php.exe&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="launch-json"><a href="#launch-json" class="headerlink" title="launch.json"></a>launch.json</h3><blockquote>
<p>注意</p>
<ol>
<li>修改端口号</li>
<li>目前只用到了第一个</li>
</ol>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// 使用 IntelliSense 了解相关属性。 </span></span><br><span class="line">    <span class="comment">// 悬停以查看现有属性的描述。</span></span><br><span class="line">    <span class="comment">// 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Listen for Xdebug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;php&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">9003</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Launch currently open script&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;php&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;file&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;fileDirname&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;runtimeArgs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-dxdebug.start_with_request=yes&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;env&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;XDEBUG_MODE&quot;</span><span class="punctuation">:</span> <span class="string">&quot;debug,develop&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;XDEBUG_CONFIG&quot;</span><span class="punctuation">:</span> <span class="string">&quot;client_port=$&#123;port&#125;&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Launch Built-in web server&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;php&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;runtimeArgs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-dxdebug.mode=debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-dxdebug.start_with_request=yes&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-S&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;localhost:0&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceRoot&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">9003</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;serverReadyAction&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;pattern&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Development Server \\(http://localhost:([0-9]+)\\) started&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;uriFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://localhost:%s&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;action&quot;</span><span class="punctuation">:</span> <span class="string">&quot;openExternally&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="/images/2024-09-16-php-setup/004.png"></p>
<h1 id="composer"><a href="#composer" class="headerlink" title="composer"></a>composer</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在 <a href="https://getcomposer.org/download/">https://getcomposer.org/download/</a> 下载二进制安装包</p>
<blockquote>
<p>注意:<br>安装时先注释 <code>xdebug.log</code> 配置, 否则无法安装</p>
</blockquote>
<p><img src="/images/2024-09-16-php-setup/005.png"></p>
<h2 id="配置阿里云镜像"><a href="#配置阿里云镜像" class="headerlink" title="配置阿里云镜像"></a>配置阿里云镜像</h2><p><strong>全局配置</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/</span><br></pre></td></tr></table></figure>

<p><strong>取消配置</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">composer config -g --unset repos.packagist</span><br></pre></td></tr></table></figure>

<p><strong>项目配置</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">composer config repo.packagist composer https://mirrors.aliyun.com/composer/</span><br></pre></td></tr></table></figure>

<p><strong>取消配置</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">composer config --unset repos.packagist</span><br></pre></td></tr></table></figure>

<h1 id="Laravel"><a href="#Laravel" class="headerlink" title="Laravel"></a>Laravel</h1><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://learnku.com/docs/laravel/8.x/">Laravel 8 中文文档</a></p>
<h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><p>在 <a href="https://packagist.org/">https://packagist.org/</a> 可搜索镜像</p>
<h3 id="安装命令"><a href="#安装命令" class="headerlink" title="安装命令"></a>安装命令</h3><blockquote>
<p><code>km</code> 为项目目录<br>此处制定了版本</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">composer -vvv create-project laravel/laravel km 8.x</span><br></pre></td></tr></table></figure>

<h3 id="问题一-扩展没有打开"><a href="#问题一-扩展没有打开" class="headerlink" title="问题一 扩展没有打开"></a>问题一 扩展没有打开</h3><p>打开 <code>extension=fileinfo</code> 即可</p>
<h3 id="问题二-卡在-Extracting-archive"><a href="#问题二-卡在-Extracting-archive" class="headerlink" title="问题二 卡在 Extracting archive"></a>问题二 卡在 Extracting archive</h3><p>添加 <code>-vvv</code> 参数之后看到卡在了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">d:\app\user\product\11.2.0\client_1\bin\unzip.EXE -qq E:\code\php\vendor\composer\tmp-848a407aefea61139a294c45b8f051c8.zip -d E:\code\php\vendor\composer\9ae58902d:\app\user\product\11.2.0\client_1\bin\unzip.EXE -qq E:\code\php\vendor\composer\tmp-848a407aefea61139a294c45b8f051c8.zip -d E:\code\php\vendor\composer\9ae58902</span><br></pre></td></tr></table></figure>

<p>上述命令使用的是 <code>oracle</code> 安装目录的 <code>unzip.exe</code>, 手动下载 <code>unzip</code>, 网址: <a href="https://gnuwin32.sourceforge.net/packages/unzip.htm">https://gnuwin32.sourceforge.net/packages/unzip.htm</a> , 并添加到环境变量, 注意要放在 <code>oracle</code> 环境变量前面</p>
<p>清除缓存</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">composer clearcache</span><br></pre></td></tr></table></figure>

<h2 id="去掉-index-php"><a href="#去掉-index-php" class="headerlink" title="去掉 index.php"></a>去掉 index.php</h2><p>关键是下面两行代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root   E:/code/php/km/public/index.php;</span><br><span class="line">try_files $uri $uri/ /index.php?$query_string;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#允许进程数量，建议设置为cpu核心数或者auto自动检测，注意Windows服务器上虽然可以启动多个processes，但是实际只会用其中一个</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    # 单个进程最大连接数（最大连接数=连接数*进程数）</span><br><span class="line">    # 根据硬件调整，和前面工作进程配合起来用，尽量大，但是别把cpu跑到100%就行。</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    # 文件扩展名与文件类型映射表(是conf目录下的一个文件)</span><br><span class="line">    include       mime.types;</span><br><span class="line">    # 默认文件类型，如果mime.types预先定义的类型没匹配上，默认使用二进制流的方式传输</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    # sendfile指令指定nginx是否调用sendfile 函数（zero copy 方式）来输出文件，对于普通应用，必须设为on。</span><br><span class="line">    # 如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络IO处理速度。</span><br><span class="line">    sendfile        on;</span><br><span class="line"></span><br><span class="line">    # 长连接超时时间，单位是秒</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    # 虚拟主机的配置</span><br><span class="line">    server &#123;</span><br><span class="line">        # 监听端口</span><br><span class="line">        listen       80;</span><br><span class="line">        # 域名，可以有多个，用空格隔开</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        # 配置根目录以及默认页面</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        # 出错页面配置</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        # /50x.html文件所在位置</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # 引用其他配置文件, 可以是相对路径或绝对路径</span><br><span class="line">    include km-php-dev/*.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.cnblogs.com/wwjchina/p/9804576.html">windows下搭建nginx+php开发环境</a><br><a href="https://zhuanlan.zhihu.com/p/417585043">Windows安装PHP调试工具Xdebug</a><br><a href="https://blog.csdn.net/yywCode/article/details/119699977">vscode调试php（解决vscode远程调试无效的问题）</a><br><a href="https://www.runoob.com/w3cnote/composer-install-and-usage.html">菜鸟教程 · Composer 安装与使用</a><br><a href="https://developer.aliyun.com/composer">阿里云 Composer 全量镜像</a><br><a href="https://learnku.com/laravel/t/8631/do-you-configure-lnmp-to-run-laravel-for-403-forbidden">自己配置 lnmp 运行 Laravel 出现了 403 Forbidden？</a><br><a href="https://learnku.com/articles/25861">浅析 Laravel 官方文档推荐的 Nginx 配置</a><br><a href="https://blog.csdn.net/sitetesty/article/details/122303333">laravel历史版本对照表、安装方法、查看版本号</a></p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx 笔记</title>
    <url>/2024/09/15/nginx-note/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>996.icu</category>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>996.icu</tag>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>webpack 笔记</title>
    <url>/2024/09/19/webpack-note/</url>
    <content><![CDATA[<h1 id="资料汇总"><a href="#资料汇总" class="headerlink" title="资料汇总"></a>资料汇总</h1><p><a href="https://www.webpackjs.com/">webpack 中文网</a></p>
<p><a href="https://www.bilibili.com/video/BV14T4y1z7sw">尚硅谷Webpack5入门到原理（面试开发一条龙）</a><br><a href="https://pan.baidu.com/s/114lJRGua2uHBdLq_iVLOOQ">https://pan.baidu.com/s/114lJRGua2uHBdLq_iVLOOQ</a> 提取码：yyds</p>
<h1 id="多页面基本使用"><a href="#多页面基本使用" class="headerlink" title="多页面基本使用"></a>多页面基本使用</h1><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><p><img src="/images/2024-09-19-webpack-note/001.png"></p>
<h2 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack-hello&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./src/main.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;npm run dev&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;npx webpack serve --config ./config/webpack.dev.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;npx webpack --config ./config/webpack.prod.js&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ISC&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;@babel/core&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.25.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;@babel/preset-env&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.25.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;babel-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^9.2.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;copy-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^12.0.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;css-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.1.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;css-minimizer-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;html-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.6.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;mini-css-extract-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.9.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;postcss&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^8.4.47&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;postcss-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^8.1.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;postcss-preset-env&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^10.0.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sass&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.79.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sass-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^16.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;style-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;webpack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.94.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;webpack-cli&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.1.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;webpack-dev-server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.1.0&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="webpack-dev-js"><a href="#webpack-dev-js" class="headerlink" title="webpack.dev.js"></a>webpack.dev.js</h2><div class="note info no-icon simple"><p>下面的代码指定了两个页面</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> modules = [<span class="string">&#x27;index&#x27;</span>, <span class="string">&#x27;article&#x27;</span>]</span><br></pre></td></tr></table></figure>
<p>例如 <code>index</code> 要求下面几个文件存在</p>
<ol>
<li><code>src/build/index.js</code></li>
<li><code>src/html/index.html</code></li>
<li><code>src/js/index.js</code></li>
<li><code>src/sass/index.scss</code></li>
</ol>
</div>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> modules = [<span class="string">&#x27;index&#x27;</span>, <span class="string">&#x27;article&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// Node.js的核心模块，专门用来处理文件路径</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">HtmlWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CopyWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;copy-webpack-plugin&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MiniCssExtractPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;mini-css-extract-plugin&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CssMinimizerPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;css-minimizer-webpack-plugin&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getStyleLoaders</span> = (<span class="params">preProcessor</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> [</span><br><span class="line">        <span class="title class_">MiniCssExtractPlugin</span>.<span class="property">loader</span>,</span><br><span class="line">        <span class="string">&#x27;css-loader&#x27;</span>,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">loader</span>: <span class="string">&#x27;postcss-loader&#x27;</span>,</span><br><span class="line">            <span class="attr">options</span>: &#123;</span><br><span class="line">                <span class="attr">postcssOptions</span>: &#123;</span><br><span class="line">                    <span class="attr">plugins</span>: [</span><br><span class="line">                        <span class="string">&#x27;postcss-preset-env&#x27;</span> <span class="comment">// 能解决大多数样式兼容性问题</span></span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        preProcessor</span><br><span class="line">    ].<span class="title function_">filter</span>(<span class="title class_">Boolean</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getModuleEntry</span> = (<span class="params">moduleName</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;../src/build/&#x27;</span> + moduleName + <span class="string">&#x27;.js&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getModuleHtml</span> = (<span class="params">moduleName</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;html/&#x27;</span> + moduleName + <span class="string">&#x27;.html&#x27;</span>,</span><br><span class="line">        <span class="attr">template</span>: <span class="string">&#x27;./src/html/&#x27;</span> + moduleName + <span class="string">&#x27;.html&#x27;</span>,</span><br><span class="line">        <span class="attr">chunks</span>: [<span class="string">&#x27;common&#x27;</span>, moduleName],</span><br><span class="line">        <span class="attr">inject</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">hash</span>: <span class="literal">true</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> moduleConfig = &#123;</span><br><span class="line">    <span class="attr">entry</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">html</span>: []</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">modules.<span class="title function_">forEach</span>(<span class="function">(<span class="params">m</span>) =&gt;</span> &#123;</span><br><span class="line">    moduleConfig.<span class="property">entry</span>[m] = <span class="title function_">getModuleEntry</span>(m)</span><br><span class="line">    moduleConfig.<span class="property">html</span>.<span class="title function_">push</span>(<span class="title function_">getModuleHtml</span>(m))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="comment">// 入口</span></span><br><span class="line">    <span class="comment">// 相对路径和绝对路径都行</span></span><br><span class="line">    <span class="attr">entry</span>: &#123;</span><br><span class="line">        <span class="attr">common</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;../src/build/common.js&#x27;</span>),</span><br><span class="line">        ...moduleConfig.<span class="property">entry</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 路径别名</span></span><br><span class="line">    <span class="attr">resolve</span>: &#123;</span><br><span class="line">        <span class="attr">alias</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;@&#x27;</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;../src&#x27;</span>),</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 输出</span></span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="comment">// path: 文件输出目录，必须是绝对路径</span></span><br><span class="line">        <span class="comment">// path.resolve()方法返回一个绝对路径</span></span><br><span class="line">        <span class="comment">// __dirname 当前文件的文件夹绝对路径</span></span><br><span class="line">        <span class="attr">path</span>: <span class="literal">undefined</span>,</span><br><span class="line">        <span class="comment">// filename: 输出文件名</span></span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;static/js/[name].js&#x27;</span>,</span><br><span class="line">        <span class="comment">// 自动将上次打包目录资源清空</span></span><br><span class="line">        <span class="attr">clean</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 加载器</span></span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [</span><br><span class="line">            <span class="comment">// css</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 用来匹配 .css 结尾的文件</span></span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,</span><br><span class="line">                <span class="comment">// use 数组里面 Loader 执行顺序是从右到左</span></span><br><span class="line">                <span class="attr">use</span>: <span class="title function_">getStyleLoaders</span>()</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// sass</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.s[ac]ss$/</span>,</span><br><span class="line">                <span class="attr">use</span>: <span class="title function_">getStyleLoaders</span>(<span class="string">&#x27;sass-loader&#x27;</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// 图片</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.(png|jpe?g|gif|webp)$/</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;asset&#x27;</span>,</span><br><span class="line">                <span class="attr">generator</span>: &#123;</span><br><span class="line">                    <span class="comment">// 将图片文件输出到 static/imgs 目录中</span></span><br><span class="line">                    <span class="comment">// 将图片文件命名 [hash:8][ext][query]</span></span><br><span class="line">                    <span class="comment">// [hash:8]: hash值取8位</span></span><br><span class="line">                    <span class="comment">// [ext]: 使用之前的文件扩展名</span></span><br><span class="line">                    <span class="comment">// [query]: 添加之前的query参数</span></span><br><span class="line">                    <span class="attr">filename</span>: <span class="string">&#x27;static/imgs/[hash:8][ext][query]&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// js</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.js$/</span>,</span><br><span class="line">                <span class="attr">include</span>: [path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;src/js&#x27;</span>), path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;src/build&#x27;</span>)],</span><br><span class="line">                <span class="attr">loader</span>: <span class="string">&#x27;babel-loader&#x27;</span>,</span><br><span class="line">                <span class="attr">options</span>: &#123;</span><br><span class="line">                    <span class="attr">cacheDirectory</span>: <span class="literal">true</span>, <span class="comment">// 开启babel编译缓存</span></span><br><span class="line">                    <span class="attr">cacheCompression</span>: <span class="literal">false</span> <span class="comment">// 缓存文件不要压缩</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 插件</span></span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">CopyWebpackPlugin</span>(&#123;</span><br><span class="line">            <span class="attr">patterns</span>: [</span><br><span class="line">                &#123; <span class="attr">from</span>: <span class="string">&#x27;./src/libs&#x27;</span>, <span class="attr">to</span>: <span class="string">&#x27;libs&#x27;</span> &#125;,</span><br><span class="line">                &#123; <span class="attr">from</span>: <span class="string">&#x27;./src/images&#x27;</span>, <span class="attr">to</span>: <span class="string">&#x27;images&#x27;</span> &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">MiniCssExtractPlugin</span>(&#123;</span><br><span class="line">            <span class="attr">filename</span>: <span class="string">&#x27;static/css/[name].css&#x27;</span></span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">CssMinimizerPlugin</span>(),</span><br><span class="line">        ...moduleConfig.<span class="property">html</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">devServer</span>: &#123;</span><br><span class="line">        <span class="attr">host</span>: <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">        <span class="attr">port</span>: <span class="string">&#x27;12016&#x27;</span>,</span><br><span class="line">        <span class="attr">open</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">hot</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 模式</span></span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&#x27;development&#x27;</span>,</span><br><span class="line">    <span class="attr">devtool</span>: <span class="string">&#x27;cheap-module-source-map&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="webpack-prod-js"><a href="#webpack-prod-js" class="headerlink" title="webpack.prod.js"></a>webpack.prod.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> modules = [<span class="string">&#x27;index&#x27;</span>, <span class="string">&#x27;article&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// Node.js的核心模块，专门用来处理文件路径</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">HtmlWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CopyWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;copy-webpack-plugin&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MiniCssExtractPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;mini-css-extract-plugin&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CssMinimizerPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;css-minimizer-webpack-plugin&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getStyleLoaders</span> = (<span class="params">preProcessor</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> [</span><br><span class="line">        <span class="title class_">MiniCssExtractPlugin</span>.<span class="property">loader</span>,</span><br><span class="line">        <span class="string">&#x27;css-loader&#x27;</span>,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">loader</span>: <span class="string">&#x27;postcss-loader&#x27;</span>,</span><br><span class="line">            <span class="attr">options</span>: &#123;</span><br><span class="line">                <span class="attr">postcssOptions</span>: &#123;</span><br><span class="line">                    <span class="attr">plugins</span>: [</span><br><span class="line">                        <span class="string">&#x27;postcss-preset-env&#x27;</span> <span class="comment">// 能解决大多数样式兼容性问题</span></span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        preProcessor</span><br><span class="line">    ].<span class="title function_">filter</span>(<span class="title class_">Boolean</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getModuleEntry</span> = (<span class="params">moduleName</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;../src/build/&#x27;</span> + moduleName + <span class="string">&#x27;.js&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getModuleHtml</span> = (<span class="params">moduleName</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;html/&#x27;</span> + moduleName + <span class="string">&#x27;.html&#x27;</span>,</span><br><span class="line">        <span class="attr">template</span>: <span class="string">&#x27;./src/html/&#x27;</span> + moduleName + <span class="string">&#x27;.html&#x27;</span>,</span><br><span class="line">        <span class="attr">chunks</span>: [<span class="string">&#x27;common&#x27;</span>, moduleName],</span><br><span class="line">        <span class="attr">inject</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">hash</span>: <span class="literal">true</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> moduleConfig = &#123;</span><br><span class="line">    <span class="attr">entry</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">html</span>: []</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">modules.<span class="title function_">forEach</span>(<span class="function">(<span class="params">m</span>) =&gt;</span> &#123;</span><br><span class="line">    moduleConfig.<span class="property">entry</span>[m] = <span class="title function_">getModuleEntry</span>(m)</span><br><span class="line">    moduleConfig.<span class="property">html</span>.<span class="title function_">push</span>(<span class="title function_">getModuleHtml</span>(m))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="comment">// 入口</span></span><br><span class="line">    <span class="comment">// 相对路径和绝对路径都行</span></span><br><span class="line">    <span class="attr">entry</span>: &#123;</span><br><span class="line">        <span class="attr">common</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;../src/build/common.js&#x27;</span>),</span><br><span class="line">        ...moduleConfig.<span class="property">entry</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 路径别名</span></span><br><span class="line">    <span class="attr">resolve</span>: &#123;</span><br><span class="line">        <span class="attr">alias</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;@&#x27;</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;../src&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 输出</span></span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="comment">// path: 文件输出目录，必须是绝对路径</span></span><br><span class="line">        <span class="comment">// path.resolve()方法返回一个绝对路径</span></span><br><span class="line">        <span class="comment">// __dirname 当前文件的文件夹绝对路径</span></span><br><span class="line">        <span class="attr">path</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;../dist&#x27;</span>),</span><br><span class="line">        <span class="comment">// filename: 输出文件名</span></span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;static/js/[name].js&#x27;</span>,</span><br><span class="line">        <span class="comment">// 自动将上次打包目录资源清空</span></span><br><span class="line">        <span class="attr">clean</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 加载器</span></span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [</span><br><span class="line">            <span class="comment">// css</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 用来匹配 .css 结尾的文件</span></span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,</span><br><span class="line">                <span class="comment">// use 数组里面 Loader 执行顺序是从右到左</span></span><br><span class="line">                <span class="attr">use</span>: <span class="title function_">getStyleLoaders</span>()</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// sass</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.s[ac]ss$/</span>,</span><br><span class="line">                <span class="attr">use</span>: <span class="title function_">getStyleLoaders</span>(<span class="string">&#x27;sass-loader&#x27;</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// 图片</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.(png|jpe?g|gif|webp)$/</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;asset&#x27;</span>,</span><br><span class="line">                <span class="attr">generator</span>: &#123;</span><br><span class="line">                    <span class="comment">// 将图片文件输出到 static/imgs 目录中</span></span><br><span class="line">                    <span class="comment">// 将图片文件命名 [hash:8][ext][query]</span></span><br><span class="line">                    <span class="comment">// [hash:8]: hash值取8位</span></span><br><span class="line">                    <span class="comment">// [ext]: 使用之前的文件扩展名</span></span><br><span class="line">                    <span class="comment">// [query]: 添加之前的query参数</span></span><br><span class="line">                    <span class="attr">filename</span>: <span class="string">&#x27;static/imgs/[hash:8][ext][query]&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// js</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.js$/</span>,</span><br><span class="line">                <span class="attr">include</span>: [path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;src/js&#x27;</span>), path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;src/build&#x27;</span>)],</span><br><span class="line">                <span class="attr">loader</span>: <span class="string">&#x27;babel-loader&#x27;</span>,</span><br><span class="line">                <span class="attr">options</span>: &#123;</span><br><span class="line">                    <span class="attr">cacheDirectory</span>: <span class="literal">true</span>, <span class="comment">// 开启babel编译缓存</span></span><br><span class="line">                    <span class="attr">cacheCompression</span>: <span class="literal">false</span> <span class="comment">// 缓存文件不要压缩</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 插件</span></span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">CopyWebpackPlugin</span>(&#123;</span><br><span class="line">            <span class="attr">patterns</span>: [</span><br><span class="line">                &#123; <span class="attr">from</span>: <span class="string">&#x27;./src/libs&#x27;</span>, <span class="attr">to</span>: <span class="string">&#x27;libs&#x27;</span> &#125;,</span><br><span class="line">                &#123; <span class="attr">from</span>: <span class="string">&#x27;./src/images&#x27;</span>, <span class="attr">to</span>: <span class="string">&#x27;images&#x27;</span> &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">MiniCssExtractPlugin</span>(&#123;</span><br><span class="line">            <span class="attr">filename</span>: <span class="string">&#x27;static/css/[name].css&#x27;</span></span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">CssMinimizerPlugin</span>(),</span><br><span class="line">        ...moduleConfig.<span class="property">html</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">devServer</span>: &#123;</span><br><span class="line">        <span class="attr">host</span>: <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">        <span class="attr">port</span>: <span class="string">&#x27;12016&#x27;</span>,</span><br><span class="line">        <span class="attr">open</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">hot</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 模式</span></span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&#x27;production&#x27;</span>,</span><br><span class="line">    <span class="attr">devtool</span>: <span class="string">&#x27;source-map&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="src-build-index-js"><a href="#src-build-index-js" class="headerlink" title="src&#x2F;build&#x2F;index.js"></a>src&#x2F;build&#x2F;index.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;../sass/index.scss&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;../js/common&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;../js/index&#x27;</span></span><br></pre></td></tr></table></figure>

<h1 id="合并配置"><a href="#合并配置" class="headerlink" title="合并配置"></a>合并配置</h1><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/weixin_57677300/article/details/130685271">webpack配置分离(详细)</a><br><a href="https://juejin.cn/post/7193535208912584760">webpack-merge的使用</a></p>
<h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install --save-dev webpack-merge</span><br></pre></td></tr></table></figure>

<h2 id="webpack-module-js"><a href="#webpack-module-js" class="headerlink" title="webpack.module.js"></a>webpack.module.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 声明页面模块列表</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 例如 index 模块, 要求如下几个文件存在</span></span><br><span class="line"><span class="comment"> * 1. src/build/index.js</span></span><br><span class="line"><span class="comment"> * 2. src/html/index.html</span></span><br><span class="line"><span class="comment"> * 3. src/js/index.js</span></span><br><span class="line"><span class="comment"> * 4. src/sass/index.scss</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> modules = [<span class="string">&#x27;index&#x27;</span>, <span class="string">&#x27;article&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">HtmlWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成 entry</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; moduleName 模块名称</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span> webpack entry</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getModuleEntry</span> = (<span class="params">moduleName</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;../src/build/&#x27;</span> + moduleName + <span class="string">&#x27;.js&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成 html 插件实例</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; moduleName 模块名称</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span> HtmlWebpackPlugin 实例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getModuleHtml</span> = (<span class="params">moduleName</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;html/&#x27;</span> + moduleName + <span class="string">&#x27;.html&#x27;</span>,</span><br><span class="line">        <span class="attr">template</span>: <span class="string">&#x27;./src/html/&#x27;</span> + moduleName + <span class="string">&#x27;.html&#x27;</span>,</span><br><span class="line">        <span class="attr">chunks</span>: [<span class="string">&#x27;common&#x27;</span>, moduleName],</span><br><span class="line">        <span class="attr">inject</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">hash</span>: <span class="literal">true</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 导出的配置对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> moduleConfig = &#123;</span><br><span class="line">    <span class="attr">entry</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">html</span>: []</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 遍历模块配置列表, 生成每个模块对应的配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">modules.<span class="title function_">forEach</span>(<span class="function">(<span class="params">m</span>) =&gt;</span> &#123;</span><br><span class="line">    moduleConfig.<span class="property">entry</span>[m] = <span class="title function_">getModuleEntry</span>(m)</span><br><span class="line">    moduleConfig.<span class="property">html</span>.<span class="title function_">push</span>(<span class="title function_">getModuleHtml</span>(m))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = moduleConfig</span><br></pre></td></tr></table></figure>

<h2 id="webpack-common-js"><a href="#webpack-common-js" class="headerlink" title="webpack.common.js"></a>webpack.common.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> moduleConfig = <span class="built_in">require</span>(<span class="string">&#x27;./webpack.module&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Node.js的核心模块，专门用来处理文件路径</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CopyWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;copy-webpack-plugin&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MiniCssExtractPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;mini-css-extract-plugin&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CssMinimizerPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;css-minimizer-webpack-plugin&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getStyleLoaders</span> = (<span class="params">preProcessor</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> [</span><br><span class="line">        <span class="title class_">MiniCssExtractPlugin</span>.<span class="property">loader</span>,</span><br><span class="line">        <span class="string">&#x27;css-loader&#x27;</span>,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">loader</span>: <span class="string">&#x27;postcss-loader&#x27;</span>,</span><br><span class="line">            <span class="attr">options</span>: &#123;</span><br><span class="line">                <span class="attr">postcssOptions</span>: &#123;</span><br><span class="line">                    <span class="attr">plugins</span>: [</span><br><span class="line">                        <span class="string">&#x27;postcss-preset-env&#x27;</span> <span class="comment">// 能解决大多数样式兼容性问题</span></span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        preProcessor</span><br><span class="line">    ].<span class="title function_">filter</span>(<span class="title class_">Boolean</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="comment">// 入口</span></span><br><span class="line">    <span class="comment">// 相对路径和绝对路径都行</span></span><br><span class="line">    <span class="attr">entry</span>: &#123;</span><br><span class="line">        <span class="attr">common</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;../src/build/common.js&#x27;</span>),</span><br><span class="line">        ...moduleConfig.<span class="property">entry</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 输出</span></span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="comment">// path: 文件输出目录，必须是绝对路径</span></span><br><span class="line">        <span class="comment">// path.resolve()方法返回一个绝对路径</span></span><br><span class="line">        <span class="comment">// __dirname 当前文件的文件夹绝对路径</span></span><br><span class="line">        <span class="attr">path</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;../dist&#x27;</span>),</span><br><span class="line">        <span class="comment">// filename: 输出文件名</span></span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;static/js/[name].js&#x27;</span>,</span><br><span class="line">        <span class="comment">// 自动将上次打包目录资源清空</span></span><br><span class="line">        <span class="attr">clean</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 加载器</span></span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [</span><br><span class="line">            <span class="comment">// css</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 用来匹配 .css 结尾的文件</span></span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,</span><br><span class="line">                <span class="comment">// use 数组里面 Loader 执行顺序是从右到左</span></span><br><span class="line">                <span class="attr">use</span>: <span class="title function_">getStyleLoaders</span>()</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// sass</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.s[ac]ss$/</span>,</span><br><span class="line">                <span class="attr">use</span>: <span class="title function_">getStyleLoaders</span>(<span class="string">&#x27;sass-loader&#x27;</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// 图片</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.(png|jpe?g|gif|webp)$/</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;asset&#x27;</span>,</span><br><span class="line">                <span class="attr">generator</span>: &#123;</span><br><span class="line">                    <span class="comment">// 将图片文件输出到 static/imgs 目录中</span></span><br><span class="line">                    <span class="comment">// 将图片文件命名 [hash:8][ext][query]</span></span><br><span class="line">                    <span class="comment">// [hash:8]: hash值取8位</span></span><br><span class="line">                    <span class="comment">// [ext]: 使用之前的文件扩展名</span></span><br><span class="line">                    <span class="comment">// [query]: 添加之前的query参数</span></span><br><span class="line">                    <span class="attr">filename</span>: <span class="string">&#x27;static/imgs/[hash:8][ext][query]&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// js</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.js$/</span>,</span><br><span class="line">                <span class="attr">include</span>: [path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;src/js&#x27;</span>), path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;src/build&#x27;</span>)],</span><br><span class="line">                <span class="attr">loader</span>: <span class="string">&#x27;babel-loader&#x27;</span>,</span><br><span class="line">                <span class="attr">options</span>: &#123;</span><br><span class="line">                    <span class="attr">cacheDirectory</span>: <span class="literal">true</span>, <span class="comment">// 开启babel编译缓存</span></span><br><span class="line">                    <span class="attr">cacheCompression</span>: <span class="literal">false</span> <span class="comment">// 缓存文件不要压缩</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 插件</span></span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">CopyWebpackPlugin</span>(&#123;</span><br><span class="line">            <span class="attr">patterns</span>: [</span><br><span class="line">                &#123; <span class="attr">from</span>: <span class="string">&#x27;./src/libs&#x27;</span>, <span class="attr">to</span>: <span class="string">&#x27;libs&#x27;</span> &#125;,</span><br><span class="line">                &#123; <span class="attr">from</span>: <span class="string">&#x27;./src/images&#x27;</span>, <span class="attr">to</span>: <span class="string">&#x27;images&#x27;</span> &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">MiniCssExtractPlugin</span>(&#123;</span><br><span class="line">            <span class="attr">filename</span>: <span class="string">&#x27;static/css/[name].css&#x27;</span></span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">CssMinimizerPlugin</span>(),</span><br><span class="line">        ...moduleConfig.<span class="property">html</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="webpack-dev-js-1"><a href="#webpack-dev-js-1" class="headerlink" title="webpack.dev.js"></a>webpack.dev.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引入webpack-merge</span></span><br><span class="line"><span class="keyword">const</span> &#123; merge &#125; = <span class="built_in">require</span>(<span class="string">&#x27;webpack-merge&#x27;</span>)</span><br><span class="line"><span class="comment">// 引入公共配置</span></span><br><span class="line"><span class="keyword">const</span> common = <span class="built_in">require</span>(<span class="string">&#x27;./webpack.common.js&#x27;</span>)</span><br><span class="line"><span class="comment">// 第一个参数是公共配置 第二个参数是环境里的配置</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">merge</span>(common, &#123;</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&#x27;development&#x27;</span>,</span><br><span class="line">    <span class="attr">devtool</span>: <span class="string">&#x27;cheap-module-source-map&#x27;</span>,</span><br><span class="line">    <span class="attr">devServer</span>: &#123;</span><br><span class="line">        <span class="attr">host</span>: <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">        <span class="attr">port</span>: <span class="string">&#x27;12016&#x27;</span>,</span><br><span class="line">        <span class="attr">open</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">hot</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="webpack-prod-js-1"><a href="#webpack-prod-js-1" class="headerlink" title="webpack.prod.js"></a>webpack.prod.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引入webpack-merge</span></span><br><span class="line"><span class="keyword">const</span> &#123; merge &#125; = <span class="built_in">require</span>(<span class="string">&#x27;webpack-merge&#x27;</span>)</span><br><span class="line"><span class="comment">// 引入公共配置</span></span><br><span class="line"><span class="keyword">const</span> common = <span class="built_in">require</span>(<span class="string">&#x27;./webpack.common.js&#x27;</span>)</span><br><span class="line"><span class="comment">// 第一个参数是公共配置 第二个参数是环境里的配置</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">merge</span>(common, &#123;</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&#x27;production&#x27;</span>,</span><br><span class="line">    <span class="attr">devtool</span>: <span class="string">&#x27;source-map&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
        <category>webpack</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>webpack</tag>
      </tags>
  </entry>
  <entry>
    <title>vue3 使用 prismjs</title>
    <url>/2024/09/21/vue3-with-prismjs/</url>
    <content><![CDATA[<h1 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># prismjs </span><br><span class="line">npm i prismjs -S</span><br><span class="line"></span><br><span class="line"># prismjs 类型</span><br><span class="line">npm i -D @types/prismjs</span><br><span class="line"></span><br><span class="line"># vite plugin</span><br><span class="line">npm install vite-plugin-prismjs -D</span><br></pre></td></tr></table></figure>

<h1 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h1><p><a href="https://github.com/PrismJS/prism-themes">https://github.com/PrismJS/prism-themes</a></p>
<p>将 <code>themes</code> 目录放到项目中</p>
<h1 id="vite-config-ts"><a href="#vite-config-ts" class="headerlink" title="vite.config.ts"></a>vite.config.ts</h1><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; fileURLToPath, <span class="variable constant_">URL</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;node:url&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig, loadEnv &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; prismjsPlugin &#125; <span class="keyword">from</span> <span class="string">&#x27;vite-plugin-prismjs&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(<span class="function">(<span class="params">&#123; mode &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> env = <span class="title function_">loadEnv</span>(mode, process.<span class="title function_">cwd</span>())</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(mode)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(env)</span><br><span class="line">    <span class="keyword">const</span> plugins = [</span><br><span class="line">        <span class="title function_">vue</span>(),</span><br><span class="line">        <span class="title function_">prismjsPlugin</span>(&#123;</span><br><span class="line">            <span class="comment">// [&#x27;json&#x27;, &#x27;css&#x27;] 按需引入，&#x27;all&#x27; 所有语言</span></span><br><span class="line">            <span class="attr">languages</span>: <span class="string">&#x27;all&#x27;</span>,</span><br><span class="line">            <span class="comment">// 配置行号插件</span></span><br><span class="line">            <span class="attr">plugins</span>: [</span><br><span class="line">                <span class="string">&#x27;line-numbers&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;copy-to-clipboard&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;show-language&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;line-highlight&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;toolbar&#x27;</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="comment">// 主题名</span></span><br><span class="line">            <span class="comment">// theme: &#x27;default&#x27;,</span></span><br><span class="line">            <span class="attr">css</span>: <span class="literal">true</span></span><br><span class="line">        &#125;)</span><br><span class="line">    ]</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">plugins</span>: plugins,</span><br><span class="line">        <span class="attr">resolve</span>: &#123;</span><br><span class="line">            <span class="attr">alias</span>: &#123;</span><br><span class="line">                <span class="string">&#x27;@&#x27;</span>: <span class="title function_">fileURLToPath</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&#x27;./src&#x27;</span>, <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="attr">server</span>: &#123;</span><br><span class="line">            <span class="attr">port</span>: <span class="number">12016</span>,</span><br><span class="line">            <span class="attr">proxy</span>: &#123;</span><br><span class="line">                <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">                    <span class="attr">target</span>: env.<span class="property">VITE_API_BASE_URL</span>,</span><br><span class="line">                    <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">rewrite</span>: <span class="function">(<span class="params">path</span>) =&gt;</span> path.<span class="title function_">replace</span>(<span class="regexp">/^\/api/</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="attr">css</span>: &#123;</span><br><span class="line">            <span class="attr">preprocessorOptions</span>: &#123;</span><br><span class="line">                <span class="attr">scss</span>: &#123;</span><br><span class="line">                    <span class="attr">additionalData</span>: <span class="string">&#x27;@import &quot;@/assets/style/global.scss&quot;;&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h1 id="main-ts-引入主题"><a href="#main-ts-引入主题" class="headerlink" title="main.ts 引入主题"></a>main.ts 引入主题</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import &#x27;@/assets/prism-theme/prism-coldark-cold.css&#x27;</span><br></pre></td></tr></table></figure>

<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span></span><br><span class="line">            hello world</span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-heart&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pre</span> <span class="attr">class</span>=<span class="string">&quot;line-numbers&quot;</span> <span class="attr">data-line</span>=<span class="string">&quot;1,13-15&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">code</span> <span class="attr">class</span>=<span class="string">&quot;language-java&quot;</span>&gt;</span>&#123;&#123; code &#125;&#125;<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">lay-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>原始按钮<span class="tag">&lt;/<span class="name">lay-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">Prism</span> <span class="keyword">from</span> <span class="string">&#x27;prismjs&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> code = <span class="string">`package com.laolang.jx;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript"></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">import java.util.concurrent.ExecutionException;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">import java.util.concurrent.FutureTask;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">import java.util.concurrent.TimeUnit;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">import lombok.extern.slf4j.Slf4j;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript"></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">@Slf4j</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">public class JucHelloApplication &#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">    public static void main(String[] args) &#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        log.info(&quot;juc hello is running...&quot;);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript"></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        FutureTask&lt;Integer&gt; futureTask = new FutureTask&lt;&gt;(new SimpleCallable());</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        Thread t1 = new Thread(futureTask, &quot;t1&quot;);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        t1.start();</span></span></span><br><span class="line"><span class="string"><span class="language-javascript"></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        int i = 0;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        while( i &lt; 5 )&#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            try &#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                TimeUnit.SECONDS.sleep(2);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &#125; catch (InterruptedException e) &#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                throw new RuntimeException(e);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &#125;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            log.info(&quot;主线程的某些任务&quot;);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            i++;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        &#125;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript"></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        try &#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            Integer ret = futureTask.get();</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            log.info(&quot;线程计算结果:&#123;&#125;&quot;,ret);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        &#125; catch (InterruptedException | ExecutionException e) &#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            throw new RuntimeException(e);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        &#125;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript"></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        i = 0;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        while( i &lt; 5 )&#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            try &#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                TimeUnit.SECONDS.sleep(2);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &#125; catch (InterruptedException e) &#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                throw new RuntimeException(e);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &#125;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            log.info(&quot;主线程的某些任务2&quot;);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            i++;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        &#125;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript"></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        log.info(&quot;程序结束&quot;);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">    &#125;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&#125;`</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title class_">Prism</span>.<span class="title function_">highlightAll</span>()</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            code</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: $baseColor;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">code</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-left-width</span>: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p><img src="/images/2024-09-21-vue3-with-prismjs/001.png"></p>
<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>如果想使用 <code>prismjs</code> 自带的主题, 则在 <code>vite.config.ts</code> 中引入, 并注释 <code>main.ts</code> 中引入的主题</p>
<p><strong>main.ts</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// import &#x27;@/assets/prism-theme/prism-coldark-cold.css&#x27;</span><br></pre></td></tr></table></figure>

<p><strong>vite.config.ts</strong></p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title function_">prismjsPlugin</span>(&#123;</span><br><span class="line">    <span class="comment">// [&#x27;json&#x27;, &#x27;css&#x27;] 按需引入，&#x27;all&#x27; 所有语言</span></span><br><span class="line">    <span class="attr">languages</span>: <span class="string">&#x27;all&#x27;</span>,</span><br><span class="line">    <span class="comment">// 配置行号插件</span></span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="string">&#x27;line-numbers&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;copy-to-clipboard&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;show-language&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;line-highlight&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;toolbar&#x27;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="comment">// 主题名</span></span><br><span class="line">    <span class="comment">// theme: &#x27;default&#x27;,</span></span><br><span class="line">    <span class="attr">css</span>: <span class="literal">true</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://juejin.cn/post/7078607581194747934">prismjs 高亮在vite中使用</a><br><a href="https://blog.csdn.net/weixin_45389633/article/details/128638368">vue3、vite，正确安装 Prismjs</a><br><a href="https://cloud.tencent.com/developer/article/2283575">Vue3(Vite) 通过 prism.js 实现代码高亮并实现Mac风格</a></p>
]]></content>
      <categories>
        <category>前端</category>
        <category>vue</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>jwt</title>
    <url>/2024/09/21/jwt/</url>
    <content><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://mp.weixin.qq.com/s/bQnoeS1ZwROoaPGIR8oCKg">SpringBoot中Token登录授权、续期和主动终止的方案(Redis+Token)</a><br><a href="https://mp.weixin.qq.com/s/vN7uc-5hVX8_343ifCGQQw">SpringBoot中基于JWT的单token授权和续期方案</a><br><a href="https://mp.weixin.qq.com/s/q7ZdtU2yjp937uD1xb258A">SpringBoot中基于JWT的双token（access_token+refresh_token）授权和续期方案</a></p>
<p><a href="https://blog.csdn.net/weixin_43721000/article/details/125042403">SpringBoot+JWT实现注册、登录、状态续签【登录保持】</a></p>
<p><a href="https://blog.csdn.net/qq_44286009/article/details/139575994">https://blog.csdn.net/qq_44286009&#x2F;article&#x2F;details&#x2F;139575994</a></p>
<p><a href="https://jwt.io/">jwt 官网</a></p>
<p><a href="https://ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html">阮一峰的网络日志 · JSON Web Token 入门教程</a></p>
<p><a href="https://developer.aliyun.com/article/1358589">还分不清 Cookie、Session、Token、JWT？看这一篇就够了</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/157533263">听说你的JWT库用起来特别扭，推荐这款贼好用的</a></p>
<p><a href="https://www.cnblogs.com/hlkawa/p/13675792.html">各类JWT库(java)的对比</a></p>
<p><a href="https://blog.csdn.net/shenyunmomie/article/details/139805325">JJWT最新版本0.12.x使用指南，实现登陆功能，JwtUtils</a><br><a href="https://blog.csdn.net/qq_50969362/article/details/134100542">2023-10 最新jsonwebtoken-jjwt 0.12.3 基本使用</a></p>
<h1 id="jwt-的结构"><a href="#jwt-的结构" class="headerlink" title="jwt 的结构"></a>jwt 的结构</h1><table>
    <thead>
        <tr>
            <th>结构</th>
            <th>字段</th>
            <th>说明</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td rowspan="2">Header</td>
            <td>alg</td>
            <td>签名的算法（algorithm），默认是 HMAC SHA256（写成 HS256）</td>
        </tr>
        <tr>
            <td>typ</td>
            <td>表示这个令牌（token）的类型（type），JWT 令牌统一写为JWT</td>
        </tr>
        <tr>
            <td rowspan="8">Payload </td>
            <td>iss</td>
            <td>(issuer)：签发人</td>
        </tr>
        <tr>
            <td>exp</td>
            <td>(expiration time)：过期时间</td>
        </tr>
        <tr>
            <td>sub</td>
            <td>(subject)：主题</td>
        </tr>
            <td>aud</td>
            <td>(audience)：受众</td>
        <tr>
            <td>nbf</td>
            <td>(Not Before)：生效时间</td>
        </tr>
        <tr>
            <td>iat</td>
            <td>(Issued At)：签发时间</td>
        </tr>
        <tr>
            <td>jti</td>
            <td>(JWT ID)：编号</td>
        </tr>
        <tr>
            <td>xxx</td>
            <td>自定义字段</td>
        </tr>
        <tr>
            <td>signature</td>
            <td></td>
            <td>
                <p>对前两部分的签名，防止数据篡改, 生成方式如下:</p>
                <p><b>HMACSHA256(  base64UrlEncode(header) + "." +  base64UrlEncode(payload),   secret)</b></p>
            </td>
        </tr>
    </tbody>
</table>


<h1 id="关于-jwt-的实现"><a href="#关于-jwt-的实现" class="headerlink" title="关于 jwt 的实现"></a>关于 jwt 的实现</h1><h2 id="jwt-的两种实现"><a href="#jwt-的两种实现" class="headerlink" title="jwt 的两种实现"></a>jwt 的两种实现</h2><p><strong>JWS</strong>: JSON Web Signature<br><strong>JWE</strong>: JSON Web Encryption</p>
<div class="note info no-icon simple"><p><code>JWS</code> 和 <code>JWE</code> 是 <code>JWT</code> 的两种实现, 平常使用的就是 <code>JWS</code></p>
</div>

<h2 id="官方认可的-java-库"><a href="#官方认可的-java-库" class="headerlink" title="官方认可的 java 库"></a>官方认可的 java 库</h2><ol>
<li>maven: com.auth0 &#x2F; java-jwt &#x2F; 3.3.0</li>
<li>maven: org.bitbucket.b_c &#x2F; jose4j &#x2F; 0.9.3</li>
<li>maven: com.nimbusds &#x2F; nimbus-jose-jwt &#x2F; 5.7</li>
<li>maven: io.jsonwebtoken &#x2F; jjwt-root &#x2F; 0.11.1</li>
<li>maven: io.fusionauth &#x2F; fusionauth-jwt &#x2F; 5.2.2</li>
<li>maven: io.vertx &#x2F; vertx-auth-jwt &#x2F; 3.5.1</li>
<li>maven: io.inverno.mod &#x2F; inverno-security-jose &#x2F; 1.5.2</li>
</ol>
<div class="note info no-icon simple"><p>平常使用最多的就是 <code>jjwt</code>, 如果需要完整的功能, 可以考虑使用 <code>nimbus-jose</code> 或者 <code>jose4j</code></p>
</div>


<h2 id="jjwt-0-12-x-基本使用"><a href="#jjwt-0-12-x-基本使用" class="headerlink" title="jjwt 0.12.x 基本使用"></a>jjwt 0.12.x 基本使用</h2><h3 id="加入依赖"><a href="#加入依赖" class="headerlink" title="加入依赖"></a>加入依赖</h3><p><strong>gradle</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">implementation(&quot;io.jsonwebtoken:jjwt:0.12.6&quot;)</span><br></pre></td></tr></table></figure>

<p><strong>maven</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.12.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.IdUtil;</span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Maps;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.Claims;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.ExpiredJwtException;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.Jws;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.JwtException;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.JwtParser;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.Jwts;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.security.Keys;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.security.SecureDigestAlgorithm;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.security.SignatureException;</span><br><span class="line"><span class="keyword">import</span> java.time.Instant;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.SecretKey;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.exception.ExceptionUtils;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JwtTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 过期时间: 1800 秒</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">ACCESS_EXPIRE</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * jwt 主题</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SUBJECT</span> <span class="operator">=</span> <span class="string">&quot;jx&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * jwt 签发人</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">JWT_ISS</span> <span class="operator">=</span> <span class="string">&quot;laolang&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * jwt 签名算法, 默认 HS256</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">JWT_HEADER_ALG</span> <span class="operator">=</span> <span class="string">&quot;HS256&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 令牌类型, jwt 令牌统一为 JWT</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">JWT_HEADER_TYPE</span> <span class="operator">=</span> <span class="string">&quot;JWT&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加密算法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> SecureDigestAlgorithm&lt;SecretKey, SecretKey&gt; ALGORITHM = Jwts.SIG.HS256;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 私钥. 不能太短, 否则会报错:</span></span><br><span class="line"><span class="comment">     * io.jsonwebtoken.security.WeakKeyException: The specified key byte array is 72 bits which is not secure enough for any JWT HMAC-SHA algorithm</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">SECRET</span> <span class="operator">=</span> <span class="string">&quot;secretKeysecretKeysecretKeysecretKeysecretKey&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 秘钥实例</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">SecretKey</span> <span class="variable">KEY</span> <span class="operator">=</span> Keys.hmacShaKeyFor(SECRET.getBytes());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String token;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">genarateToken</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// uuid</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">uuid</span> <span class="operator">=</span> IdUtil.fastSimpleUUID();</span><br><span class="line">        <span class="comment">// 过期时间</span></span><br><span class="line">        <span class="type">Date</span> <span class="variable">exprireDate</span> <span class="operator">=</span> Date.from(Instant.now().plusSeconds(ACCESS_EXPIRE));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// calim</span></span><br><span class="line">        Map&lt;String, Object&gt; calim = Maps.newHashMap();</span><br><span class="line">        calim.put(<span class="string">&quot;id&quot;</span>, <span class="number">1L</span>);</span><br><span class="line">        calim.put(<span class="string">&quot;username&quot;</span>, <span class="string">&quot;superAdmin&quot;</span>);</span><br><span class="line">        calim.put(<span class="string">&quot;nickname&quot;</span>, <span class="string">&quot;超级管理员&quot;</span>);</span><br><span class="line"></span><br><span class="line">        token = Jwts.builder()</span><br><span class="line">                .header()</span><br><span class="line">                .add(<span class="string">&quot;typ&quot;</span>, JWT_HEADER_TYPE)</span><br><span class="line">                .add(<span class="string">&quot;alg&quot;</span>, JWT_HEADER_ALG)</span><br><span class="line">                .and()</span><br><span class="line">                <span class="comment">// paload 私有声明, 如果有, 必须放在前面</span></span><br><span class="line">                .claims(calim)</span><br><span class="line">                <span class="comment">// 令牌 id</span></span><br><span class="line">                .id(uuid)</span><br><span class="line">                <span class="comment">// 过期时间</span></span><br><span class="line">                .expiration(exprireDate)</span><br><span class="line">                <span class="comment">// 主题</span></span><br><span class="line">                .subject(SUBJECT)</span><br><span class="line">                <span class="comment">// 签发人</span></span><br><span class="line">                .issuer(JWT_ISS)</span><br><span class="line">                <span class="comment">// 签名</span></span><br><span class="line">                .signWith(KEY, ALGORITHM)</span><br><span class="line">                .compact();</span><br><span class="line">        System.out.println(token);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test(dependsOnMethods = &quot;genarateToken&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">parseToken</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">JwtParser</span> <span class="variable">jwtParser</span> <span class="operator">=</span> Jwts.parser().verifyWith(KEY).build();</span><br><span class="line">            Jws&lt;Claims&gt; jws = jwtParser.parseSignedClaims(token);</span><br><span class="line">            <span class="type">Claims</span> <span class="variable">claims</span> <span class="operator">=</span> jws.getPayload();</span><br><span class="line">            System.out.println(claims.get(<span class="string">&quot;id&quot;</span>, Long.class));</span><br><span class="line">            System.out.println(claims.get(<span class="string">&quot;username&quot;</span>, String.class));</span><br><span class="line">            System.out.println(claims.get(<span class="string">&quot;nickname&quot;</span>, String.class));</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SignatureException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;jwt 解析报错, 例如 jwt 结构不正确&quot;</span>);</span><br><span class="line">            System.out.println(ExceptionUtils.getMessage(e));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ExpiredJwtException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;jwt 过期&quot;</span>);</span><br><span class="line">            System.out.println(ExceptionUtils.getMessage(e));</span><br><span class="line">        &#125;<span class="keyword">catch</span> (JwtException e)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;其他 jwt 异常&quot;</span>);</span><br><span class="line">            System.out.println(ExceptionUtils.getMessage(e));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(ExceptionUtils.getMessage(e));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="spring-boot-jwt-简单实现"><a href="#spring-boot-jwt-简单实现" class="headerlink" title="spring boot + jwt 简单实现"></a>spring boot + jwt 简单实现</h1><h1 id="spring-boot-jwt-redis"><a href="#spring-boot-jwt-redis" class="headerlink" title="spring boot + jwt + redis"></a>spring boot + jwt + redis</h1><h1 id="access-token-refresh-token"><a href="#access-token-refresh-token" class="headerlink" title="access_token + refresh_token"></a>access_token + refresh_token</h1><h1 id="spring-security-和-jwt"><a href="#spring-security-和-jwt" class="headerlink" title="spring security 和 jwt"></a>spring security 和 jwt</h1><h1 id="shiro-和-jwt"><a href="#shiro-和-jwt" class="headerlink" title="shiro 和 jwt"></a>shiro 和 jwt</h1>]]></content>
      <categories>
        <category>java</category>
        <category>认证与鉴权</category>
        <category>jwt</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>认证与鉴权</tag>
        <tag>jwt</tag>
      </tags>
  </entry>
  <entry>
    <title>dbeaver</title>
    <url>/2024/09/22/dbeaver/</url>
    <content><![CDATA[<h1 id="修改字体"><a href="#修改字体" class="headerlink" title="修改字体"></a>修改字体</h1><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/weixin_43582081/article/details/129061679">【DBeaver】常用自定义设置</a></p>
<h2 id="旧版"><a href="#旧版" class="headerlink" title="旧版"></a>旧版</h2><p><strong>编辑器字体</strong><br><img src="/images/2024-09-22-dbeaver/001.png" alt="image"><br><strong>查询结果字体</strong><br><img src="/images/2024-09-22-dbeaver/002.png" alt="image"></p>
<h2 id="新版"><a href="#新版" class="headerlink" title="新版"></a>新版</h2><p><strong>应用字体</strong><br><img src="/images/2024-09-22-dbeaver/003.png" alt="image"></p>
<p><strong>编辑器字体</strong><br><img src="/images/2024-09-22-dbeaver/004.png" alt="image"></p>
<h1 id="修改背景色"><a href="#修改背景色" class="headerlink" title="修改背景色"></a>修改背景色</h1><p><strong>编辑器背景色</strong></p>
<blockquote>
<p>注意: 此设置会同时修改查询结果背景色，但是需要重启 dbeaver</p>
</blockquote>
<p><img src="/images/2024-09-22-dbeaver/005.png" alt="image"></p>
<h1 id="格式化配置"><a href="#格式化配置" class="headerlink" title="格式化配置"></a>格式化配置</h1><h2 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/weixin_43582081/article/details/129061679">【DBeaver】常用自定义设置</a></p>
<h2 id="格式化大小写"><a href="#格式化大小写" class="headerlink" title="格式化大小写"></a>格式化大小写</h2><p><img src="/images/2024-09-22-dbeaver/006.png" alt="image"></p>
<h2 id="关闭自动插入表别名"><a href="#关闭自动插入表别名" class="headerlink" title="关闭自动插入表别名"></a>关闭自动插入表别名</h2><p><img src="/images/2024-09-22-dbeaver/007.png" alt="image"></p>
<h2 id="关于语句分隔符"><a href="#关于语句分隔符" class="headerlink" title="关于语句分隔符"></a>关于语句分隔符</h2>]]></content>
      <categories>
        <category>器</category>
      </categories>
      <tags>
        <tag>器</tag>
      </tags>
  </entry>
  <entry>
    <title>jquery 系列总览</title>
    <url>/2024/09/22/jquery-summary/</url>
    <content><![CDATA[<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><h2 id="jquery"><a href="#jquery" class="headerlink" title="jquery"></a>jquery</h2><p><a href="http://jquery3.yanzhihui.com/index.html">jquery 3.3.1 中文文档</a></p>
<p><a href="https://www.jquery123.com/">jquery 中文网</a></p>
<p><a href="https://github.com/jquery/jquery">jquery github</a><br><a href="https://jquery.com/">jquery 官网</a></p>
<p><a href="https://github.com/songjinzhong/JQuerySource">jQuery 源码解读，v3.1.1，从菜鸟到大神之路</a></p>
<p><a href="https://www.bilibili.com/video/BV1pX4y1P7d5">前端妙味jQuery · 视频教程</a><br><a href="https://www.bilibili.com/video/BV1Jv411H7Te">妙味课堂jQuery源码解读教程 · 视频教程</a></p>
<h2 id="easyui"><a href="#easyui" class="headerlink" title="easyui"></a>easyui</h2><p><a href="https://www.jeasyui.cn/">easyui 中文网</a></p>
<p><a href="https://download.csdn.net/user/richie696/?spm=1003.2020.3001.5449">easyui api 离线版</a></p>
]]></content>
      <categories>
        <category>前端</category>
        <category>jquery</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>jquery</tag>
      </tags>
  </entry>
  <entry>
    <title>java 设计模式总览</title>
    <url>/2024/09/22/java-design-patterns-summary/</url>
    <content><![CDATA[<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://blog.csdn.net/sinat_36053757/article/details/71018156">设计模式——设计模式中英文对照</a><br><a href="https://www.cnblogs.com/zmer/articles/3627480.html">23种设计模式简介（中英文对照）</a><br><a href="https://blog.csdn.net/A1342772/article/details/91349142">23 种设计模式详解（全23种）</a></p>
<h1 id="23-中设计模式说明"><a href="#23-中设计模式说明" class="headerlink" title="23 中设计模式说明"></a>23 中设计模式说明</h1><table>
    <thead>
        <tr>
            <th width="140">英文名</th>
            <th width="140">中文名</th>
            <th>说明</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td colspan="3" align="center"><b>创建型</b></td>
        </tr>
        <tr>
            <td>Singleton Pattern</td>
            <td>单例模式</td>
            <td>
                <p>Ensure a class has only one instance, and provide a global point of access to it.</p>
                <p>确保某一个类只有一个实例，而且自行实例化并向整个系统提供这个实例。</p>
            </td>
        </tr>
        <tr>
            <td>Factory Pattern</td>
            <td>工厂方法模式</td>
            <td>
                <p>Define an interface for creating an object,but let subclass decide which class to instantiate.Factory Method lets a class defer instantiation to subclass.</p>
                <p>定义一个用于创建对象的接口，让子类决定实例化哪一个类。工厂方法是一个类的实例化延迟到其子类。</p>
            </td>
        </tr>
        <tr>
            <td>Abstract Factory Pattern</td>
            <td>抽象工厂模式</td>
            <td>
                <p>Provide an interface for creating families of related or dependent objects without specifying their concrete classes.</p>
                <p>为创建一组相关或相互依赖的对象提供一个接口，而且无需指定它们的具体类。</p>
            </td>
        </tr>
        <tr>
            <td>Prototype Pattern</td>
            <td>原型模式</td>
            <td>
                <p>Specify the kinds of objects to create using a prototypical instance, and create new objects by copying this prototype.</p>
                <p>用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象。</p>
            </td>
        </tr>
        <tr>
            <td>Builder Pattern</td>
            <td>建造者模式</td>
            <td>
                <p>Separate the construction of a complex object form its representation so that the same construction process can create different representations.</p>
                <p>将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。</p>
            </td>
        </tr>
        <tr>
            <td colspan="3" align="center"><b>结构型</b></td>
        </tr>
        <tr>
            <td>Adapter Pattern</td>
            <td>适配器模式</td>
            <td>
                <p>Convert the inface of a class into another interface clients expect.Adapter lets classes work together that couldn't otherwise because of incompatible interface.</p>
                <p>将一个类的接口变换成客户端所期待的另一种接口，从而使原本因接口不匹配而无法在一起工作的两个类能够在一起工作。</p>
                <p>“系统的数据和行为都正确，单接口不符时，我们应该考虑使用适配器，目的是是控制范围之外的一个原有对象与某个接口匹配。适配器模式主要用于希望复用一些现存的类，但是接口又与复用环境不一致的情况。”（《大话设计模式》）>
            </td>
        </tr>
        <tr>
            <td>Decorator Pattern</td>
            <td>装饰模式</td>
            <td>
                <p>Attach additional responsibilities to an object dynamically keeping the same interface.Decorators provide a flexible alternative to subclassing for extending functionality.</p>
                <p>动态地给一个对象添加一些额外的职责。就增加功能来说，装饰模式相比生成子类更为灵活。</p>
            </td>
        </tr>
        <tr>
            <td>Proxy pattern</td>
            <td>代理模式</td>
            <td>
                <p>Provide a surrogate (代理) or placeholder for another object to control access to it.</p>
                <p>为其他对象提供一种代理以控制对这个对象的访问。</p>
            </td>
        </tr>
        <tr>
            <td>Facade Pattern</td>
            <td>门面模式</td>
            <td>
                <p>Provide a unified interface to a set of interface in a subsystem.Facede defines a higher-level interface that makes the subsystem easier to use.</p>
                <p>要求一个子系统的外部与其内部的通信必须通过一个统一的对象进行。门面模式提供了一个高层次的接口，使得子系统更容易使用。</p>
            </td>
        </tr>
        <tr>
            <td>Bridge Pattern</td>
            <td>桥梁模式</td>
            <td>
                <p>Decouple an abstraction from its implementation so that the two can vary independently.</p>
                <p>将抽象和实现解耦，使得两者可以独立的变化。</p>
            </td>
        </tr>
        <tr>
            <td>Composite Pattern</td>
            <td>组合模式</td>
            <td>
                <p>Compose objects into tree structure to represent part-whole hierarchies.Composite lets clients treat individual objects and compositions of objects uniformly.</p>
                <p>将对象组合成树形结构以表示“部分-整体”的层次结构，使得用户对单个对象和组合对象的使用具有一致性。</p>
            </td>
        </tr>
        <tr>
            <td>Flyweight Pattern</td>
            <td>享元模式</td>
            <td>
                <p>Use sharing to support large numbers of fine-grained objects efficiently.</p>
                <p>使用共享对象可有效地支持大量的细粒度对象。</p>
            </td>
        </tr>
        <tr>
            <td colspan="3" align="center"><b>行为型</b></td>
        </tr>
        <tr>
            <td>Template Method Pattern</td>
            <td>模板方法模式</td>
            <td>
                <p>Define the skeleton of an algorithm in an operation,deferring some steps to subclasses.Template Method lets subclass redefine certain steps of an algorithm without changing the algorithm's structure. </p>
                <p>定义一个操作中的算法框架，而将一些步骤延迟到子类中。使得子类可以不改变一个算法的结构即可以重定义该算法的某些特定步骤。</p>
            </td>
        </tr>
        <tr>
            <td>Mediator Pattern</td>
            <td>中介者模式</td>
            <td>
                <p>Define an object that encapsulates how a set of objects interact.Mediator promotes loose couping by keeping objects from referring to each other explicitly, and it lets you vary their interaction independently.</p>
                <p>用一个中介对象封装一系列的对象交互，中介者使各对象不需要显示的相互作用，从而使其耦合松散，而且可以独立的改变它们之间的交互。</p>
            </td>
        </tr>
        <tr>
            <td>Command Pattern</td>
            <td>命令模式</td>
            <td>
                <p>Encapsulate a request as an object,thereby letting you parameterize clients with different requests,queue or log requests, and support undoable operations.</p>
                <p>将一个请求封装成一个对象，从而让你使用不同的请求把客户端参数化，对请求排队或者记录请求日志，可以提供命令的撤销和恢复功能。</p>
            </td>
        </tr>
        <tr>
            <td>Chain of Responsibility Pattern</td>
            <td>责任链模式</td>
            <td>
                <p>Avoid coupling the sender of a request to its receiver by giving more than one object a chance to handle the request.Chain the receiving objects and pass the request along the chain until an object handles it.</p>
                <p>使多个对象有机会处理请求，从而避免了请求的发送者和接收者之间的耦合关系 。将这些对象连成一个链，并沿着这条链传递请求，知道有对象处理它为止。</p>
            </td>
        </tr>
        <tr>
            <td>Strategy Pattern</td>
            <td>策略模式</td>
            <td>
                <p>Define a family of algorithms, encapsulate each one, and make them interchangeable.</p>
                <p>定义一组算法，将每个算法都封装起来，并且使他们之间可以互换。</p>
            </td>
        </tr>
        <tr>
            <td>Iterator Pattern</td>
            <td>迭代器模式</td>
            <td>
                <p>Provide a way to access the elements of an aggregate object sequentially without exposing its underlying representation.</p>
                <p>它提供一种方法访问一个容器对象中各个元素，而又不需要暴露该对象的内部细节。</p>
            </td>
        </tr>
        <tr>
            <td>Observer Pattern</td>
            <td>观察者模式</td>
            <td>
                <p>Define a one-to-many dependency between objects so that when one object changes state, all its dependents are notified and updated automatically.</p>
                <p>定义对象间一种一对多的依赖关系，使得每当一个对象改变状态，则所有依赖于它的对象都会得到通知并被自动更新。</p>
            </td>
        </tr>
        <tr>
            <td>Memento Pattern</td>
            <td>备忘录模式</td>
            <td>
                <p>Without violating encapsulation， capture and externalize an object's internal state so that the object can be restored to this state later.</p>
                <p>在不破坏封装的前提下，捕获一个对象的内部状态，并在该对象之外保存这个状态，这样以后就可将该对象恢复到原来保存的状态。</p>
            </td>
        </tr>
        <tr>
            <td>Visitor Pattern</td>
            <td>访问者模式</td>
            <td>
                <p>Represent an operation to be performed on the elements of an object structure.Visitor lets you define a new operation without changing the classes of the elements on which it operates.</p>
                <p>封装一些作用于某种数据结构中的各种元素，它可以在不改变数据结构的前提下定义作用于这些元素的新的操作。</p>
            </td>
        </tr>
        <tr>
            <td>State Pattern</td>
            <td>状态模式</td>
            <td>
                <p>Allow an object to alter its behavior when its internal state changes.The object will appear to change its class.</p>
                <p>当一个对象在状态改变时允许其改变行为，这个对象看起来像改变了其类。</p>
            </td>
        </tr>
        <tr>
            <td>Interpreter Pattern</td>
            <td>解释器模式</td>
            <td>
                <p>Given a language, define a representation for its grammar along with an interpreter that uses the representation to interpret sentences int the language.</p>
                <p>给定一门语言，定义它的文法的一种表示，并定义一个解释器，该解释器使用该表示来解释语言中的句子。</p>
            </td>
        </tr>
    </tbody>
</table>]]></content>
      <categories>
        <category>java</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title>git 记录</title>
    <url>/2024/09/22/git-%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h1 id="博客-文档"><a href="#博客-文档" class="headerlink" title="博客 &amp;&amp; 文档"></a>博客 &amp;&amp; 文档</h1><p><a href="https://blog.csdn.net/hongchangfirst/category_9267035.html">三分钟教你学Git</a></p>
<h1 id="忽略"><a href="#忽略" class="headerlink" title="忽略"></a>忽略</h1><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://mengqi92.github.io/2020/07/17/hide-files-from-git/">Git 小技巧 - 忽略不想要提交的本地修改</a></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="本地忽略文件"><a href="#本地忽略文件" class="headerlink" title="本地忽略文件"></a>本地忽略文件</h3><p>某些文件需要忽略,但是不想修改 <code>.gitignore</code> ,可以在 <code>.git/info/exclude</code> 中配置,此文件与 <code>.gitignore</code> 有相同的规则</p>
<h3 id="忽略某些文件的提交"><a href="#忽略某些文件的提交" class="headerlink" title="忽略某些文件的提交"></a>忽略某些文件的提交</h3><p>某些文件在本地仓库中会修改,但是又不想提交修改, 可以使用如下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 忽略</span><br><span class="line">git update-index --skip-worktree /path/to/file</span><br><span class="line"># 查看忽略的文件</span><br><span class="line">git ls-files -v | grep ^S</span><br><span class="line"># 撤销</span><br><span class="line">git update-index --no-skip-worktree /path/to/file</span><br></pre></td></tr></table></figure>

<h3 id="忽略文件的方法"><a href="#忽略文件的方法" class="headerlink" title="忽略文件的方法"></a>忽略文件的方法</h3><ul>
<li><code>.gitignore</code></li>
<li><code>.git/info/exclue</code></li>
<li><code>git update-index --assume-unchanged</code></li>
<li><code>git update-index --skip-worktree</code></li>
</ul>
<h3 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h3><h4 id="gitignore"><a href="#gitignore" class="headerlink" title=".gitignore"></a>.gitignore</h4><p><strong>说明</strong>：显式地阻止提交文件。<br><strong>优势</strong>：.gitignore 文件本身提交至远程仓库，全组共享忽略文件配置。<br><strong>局限</strong>：如果项目已经存在远程仓库，即使被加入 <code>.gitignore</code>，仍然可以进行修改并提交。本地的修改会显示在 <code>git status</code> 结果中</p>
<h4 id="git-info-exclue"><a href="#git-info-exclue" class="headerlink" title=".git&#x2F;info&#x2F;exclue"></a>.git&#x2F;info&#x2F;exclue</h4><p><strong>说明</strong>：显式地阻止提交文件。<br><strong>优势</strong>：<code>exclude</code> 文件本身不会提交至远程仓库，因此适合放一些个人定制的 <code>gitignore</code> 项目。<br><strong>局限</strong>：和 <code>.gitignore</code> 存在同样地局限。文件若已存在远程仓库，则本地修改仍可以提交至远程仓库。本地的修改会显示在 <code>git status</code> 结果中。</p>
<h4 id="assume-unchanged"><a href="#assume-unchanged" class="headerlink" title="assume-unchanged"></a>assume-unchanged</h4><p><strong>说明</strong>：声明本地远程都不会修改这个文件。<br><strong>优势</strong>：git 直接跳过这些文件的处理以提升性能。文件不会出现在 <code>git status</code>。<br><strong>局限</strong>：不适合本地或远程需要修改的文件。本地会忽略掉之后远程文件的修改。</p>
<h4 id="skip-worktree"><a href="#skip-worktree" class="headerlink" title="skip-worktree"></a>skip-worktree</h4><p><strong>说明</strong>：声明忽略文件的本地修改。<br><strong>优势</strong>：本地可以对文件做一些个人定制。文件不会出现在 <code>git status</code>。<br><strong>局限</strong>：拉取远程文件更新，或切换分支时有可能出现冲突，需要撤销忽略后手动解决冲突。</p>
<h1 id="多用户配置"><a href="#多用户配置" class="headerlink" title="多用户配置"></a>多用户配置</h1><h2 id="删除全局用户信息"><a href="#删除全局用户信息" class="headerlink" title="删除全局用户信息"></a>删除全局用户信息</h2><blockquote>
<p>多用户情况下，尽量不要设置全局用户信息</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 添加全局用户信息</span><br><span class="line">git config --global user.name &quot;用户名&quot;</span><br><span class="line">git config --global user.email &quot;邮箱&quot;</span><br><span class="line">#删除全局用户信息</span><br><span class="line">git config --global --unset user.name</span><br><span class="line">git config --global --unset user.email</span><br></pre></td></tr></table></figure>

<h2 id="生成-key"><a href="#生成-key" class="headerlink" title="生成 key"></a>生成 key</h2><blockquote>
<p>注意保存路径</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;github@qq.com&quot;</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/c/Users/Administrator/.ssh/id_rsa): id_rsa_github</span><br><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved in id_rsa_github.</span><br><span class="line">Your public key has been saved in id_rsa_github.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:K8ZzHA4rrhgHlv7qyP+dAmvpQIq+jPUpbMdjXZncAnE github@qq.com</span><br><span class="line">The key&#x27;s randomart image is:</span><br><span class="line">+---[RSA 2048]----+</span><br><span class="line">|                 |</span><br><span class="line">|      . E        |</span><br><span class="line">|       o         |</span><br><span class="line">|  .   .          |</span><br><span class="line">|.+    .oS+       |</span><br><span class="line">|*. . . =*o.      |</span><br><span class="line">|++o.=.*.=.       |</span><br><span class="line">|*=**==o+.        |</span><br><span class="line">|=OBO=o.o         |</span><br><span class="line">+----[SHA256]-----+</span><br></pre></td></tr></table></figure>

<h2 id="将-key-添加至响应的网站"><a href="#将-key-添加至响应的网站" class="headerlink" title="将 key 添加至响应的网站"></a>将 key 添加至响应的网站</h2><h2 id="配置-config"><a href="#配置-config" class="headerlink" title="配置 config"></a>配置 config</h2><blockquote>
<p>文件位置 ~&#x2F;.ssh&#x2F;config<br><strong>不可有注释</strong></p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">    User github</span><br><span class="line">    Hostname github.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa_github</span><br><span class="line">Host 192.168.12.5</span><br><span class="line">    User gitlab</span><br><span class="line">    Hostname 192.168.12.5</span><br><span class="line">    Port 122 # 如果不是22则添加次行</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa_gitlab</span><br></pre></td></tr></table></figure>

<h2 id="将密码加入密匙管理器"><a href="#将密码加入密匙管理器" class="headerlink" title="将密码加入密匙管理器"></a>将密码加入密匙管理器</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ssh-agent bash</span><br><span class="line">$ ssh-add ~/.ssh/id_rsa_github</span><br><span class="line">Enter passphrase for /c/Users/Administrator/.ssh/id_rsa_github:</span><br><span class="line">Identity added: /c/Users/Administrator/.ssh/id_rsa_github (/c/Users/Administrator/.ssh/id_rsa_github)</span><br><span class="line"> </span><br><span class="line">$ ssh-add ~/.ssh/id_rsa_gitlab</span><br><span class="line">Enter passphrase for /c/Users/Administrator/.ssh/id_rsa_gitlab:</span><br></pre></td></tr></table></figure>


<h1 id="TortoiseGit-结合-bcompare"><a href="#TortoiseGit-结合-bcompare" class="headerlink" title="TortoiseGit 结合 bcompare"></a>TortoiseGit 结合 bcompare</h1><h2 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/xishuai/p/TortoiseGit-BeyondCompare-DiffMerge.html">TortoiseGit 文件比对工具使用 Beyond Compare 和 DiffMerge</a></p>
<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>diff: <code>C:\Program Files (x86)\Beyond Compare 3\BComp.exe %base %mine /title1=%bname /title2=%yname /leftreadonly</code><br>merge: <code>C:\Program Files (x86)\Beyond Compare 3\BComp.exe” %mine %theirs %base %merged /title1=%yname /title2=%tname /title3=%bname /title4=%mname</code></p>
<h1 id="修改-commit-信息"><a href="#修改-commit-信息" class="headerlink" title="修改 commit 信息"></a>修改 commit 信息</h1><h2 id="参考-2"><a href="#参考-2" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/appleex/p/git-xiu-gai-yi-ti-jiaocommit.html">如何修改已提交commit信息</a></p>
<p><a href="https://segmentfault.com/a/1190000044766977">无痕修复：优雅修改本地及远程Commit信息，保持项目历史整洁</a></p>
<h2 id="修改最近一次的提交"><a href="#修改最近一次的提交" class="headerlink" title="修改最近一次的提交"></a>修改最近一次的提交</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git commit --amend</span><br></pre></td></tr></table></figure>

<h2 id="修改多次"><a href="#修改多次" class="headerlink" title="修改多次"></a>修改多次</h2><blockquote>
<p>n 为次数</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 第一步</span><br><span class="line">git rebase -i HEAD~n</span><br><span class="line"># 第二步</span><br><span class="line">修改 pick 为 edit,然后 wq 退出</span><br><span class="line"># 第三步</span><br><span class="line">git commit --amend 修改提交信息</span><br><span class="line">git rebase --continue</span><br><span class="line"># 重复第三部,直到编辑完毕</span><br></pre></td></tr></table></figure>

<p>例如如下 commit</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git log --oneline</span><br><span class="line">fd2b105 (HEAD -&gt; master) commit 002</span><br><span class="line">0e82138 commit 001</span><br><span class="line">5659187 (origin/master, origin/HEAD) 解决编译报错</span><br><span class="line">80c5b7c 导入源码</span><br><span class="line">7fe7020 Initial commit</span><br></pre></td></tr></table></figure>

<p>修改 <code>commit 001</code> 和 <code>commit 002</code> 可以使用 <code>git rebase -i HEAD~2</code>,操作结果如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@DESKTOP-O12ME4M MINGW64 /e/gitee/bzrj/acwj (master)</span><br><span class="line">$ git rebase -i HEAD~2</span><br><span class="line">Stopped at 0e82138...  commit 001</span><br><span class="line">You can amend the commit now, with</span><br><span class="line"></span><br><span class="line">  git commit --amend</span><br><span class="line"></span><br><span class="line">Once you are satisfied with your changes, run</span><br><span class="line"></span><br><span class="line">  git rebase --continue</span><br><span class="line"></span><br><span class="line">laolang@DESKTOP-O12ME4M MINGW64 /e/gitee/bzrj/acwj (master|REBASE 1/2)</span><br><span class="line">$ git commit --amend</span><br><span class="line">[detached HEAD 0dd2c0e] commit 001-001</span><br><span class="line"> Date: Fri Jun 28 07:36:28 2024 +0800</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"> create mode 100644 one.txt</span><br><span class="line"></span><br><span class="line">laolang@DESKTOP-O12ME4M MINGW64 /e/gitee/bzrj/acwj (master|REBASE 1/2)</span><br><span class="line">$ git rebase --continue</span><br><span class="line">Stopped at fd2b105...  commit 002</span><br><span class="line">You can amend the commit now, with</span><br><span class="line"></span><br><span class="line">  git commit --amend</span><br><span class="line"></span><br><span class="line">Once you are satisfied with your changes, run</span><br><span class="line"></span><br><span class="line">  git rebase --continue</span><br><span class="line"></span><br><span class="line">laolang@DESKTOP-O12ME4M MINGW64 /e/gitee/bzrj/acwj (master|REBASE 2/2)</span><br><span class="line">$ git commit --amend</span><br><span class="line">[detached HEAD 604ff01] commit 002-002</span><br><span class="line"> Date: Fri Jun 28 07:38:57 2024 +0800</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"></span><br><span class="line">laolang@DESKTOP-O12ME4M MINGW64 /e/gitee/bzrj/acwj (master|REBASE 2/2)</span><br><span class="line">$ git rebase --continue</span><br><span class="line">Successfully rebased and updated refs/heads/master.</span><br><span class="line"></span><br><span class="line">laolang@DESKTOP-O12ME4M MINGW64 /e/gitee/bzrj/acwj (master)</span><br><span class="line">$ git log --oneline</span><br><span class="line">604ff01 (HEAD -&gt; master) commit 002-002</span><br><span class="line">0dd2c0e commit 001-001</span><br><span class="line">5659187 (origin/master, origin/HEAD) 解决编译报错</span><br><span class="line">80c5b7c 导入源码</span><br><span class="line">7fe7020 Initial commit</span><br><span class="line"></span><br><span class="line">laolang@DESKTOP-O12ME4M MINGW64 /e/gitee/bzrj/acwj (master)</span><br><span class="line">$</span><br></pre></td></tr></table></figure>

<h2 id="推送远程"><a href="#推送远程" class="headerlink" title="推送远程"></a>推送远程</h2><blockquote>
<p><code>--force-with-lease</code> 提供了一种更安全的强制推送方式。它会在推送前检查远程分支的状态是否与你预期的一致。如果远程分支在你上次拉取后有其他人的新提交，推送会失败，从而避免意外覆盖他人的工作。在多人协作的环境中，<code>--force-with-lease</code> 是一个更好的选择</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git push --force-with-lease origin &lt;your_branch_name&gt;</span><br></pre></td></tr></table></figure>


<h1 id="关于-git-log"><a href="#关于-git-log" class="headerlink" title="关于 git log"></a>关于 git log</h1><h2 id="参考-3"><a href="#参考-3" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/m0_37996629/article/details/129796377">Git log 进阶用法（含格式化、以及数据过滤）</a><br><a href="https://www.cnblogs.com/wutou/p/17490984.html">git log 单行、多行 详细显示结果、提交的文件名【汇总参数演示】</a></p>
<h1 id="gitea"><a href="#gitea" class="headerlink" title="gitea"></a>gitea</h1><p><a href="https://www.cnblogs.com/Gitea/p/windows.html">手把手教你玩转 Gitea｜在 Windows 系统上安装 Gitea</a></p>
<p><code>clone</code> 时使用 <code>http</code> 的方式, 然后直接 <code>push</code> , 此时会弹出一个页面, 点接受即可</p>
<h1 id="同时推送两个仓库"><a href="#同时推送两个仓库" class="headerlink" title="同时推送两个仓库"></a>同时推送两个仓库</h1><p><a href="https://www.cnblogs.com/zbcn/p/18337190">本地同时配置github 和gitee 远程仓库</a></p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql 基础</title>
    <url>/2024/09/22/mysql-base/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>数据库</category>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>mybatis 源码环境搭建</title>
    <url>/2024/09/22/mybatis-%E6%BA%90%E7%A0%81%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://cloud.tencent.com/developer/article/1815147">从头到尾手把手教你搭建阅读Mybatis源码的环境(程序员必备技能)</a><br><a href="https://blog.csdn.net/weixin_45056780/article/details/113449245">Cannot enable lazy loading because Javassist is not available. Add Javassist to your classpath.</a></p>
<h1 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h1><p><a href="https://github.com/mybatis/mybatis-3/">https://github.com/mybatis/mybatis-3/</a></p>
<p><a href="https://github.com/mybatis/parent/tree/mybatis-parent-32">https://github.com/mybatis/parent/tree/mybatis-parent-32</a><br><a href="https://github.com/mybatis/mybatis-3/tree/mybatis-3.5.6">https://github.com/mybatis/mybatis-3/tree/mybatis-3.5.6</a></p>
<h1 id="新建一个maven-项目"><a href="#新建一个maven-项目" class="headerlink" title="新建一个maven 项目"></a>新建一个maven 项目</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.laolang.bzrj.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-3-source<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="mybatis-parent"><a href="#mybatis-parent" class="headerlink" title="mybatis-parent"></a>mybatis-parent</h1><p>下载代码: <a href="https://github.com/mybatis/parent/tree/mybatis-parent-32">https://github.com/mybatis/parent/tree/mybatis-parent-32</a> , 复制到项目目录,并重命名为: <code>mybatis-parent</code></p>
<p>修改 <code>mybatis-parent/pom.xml</code>,主要是修改了版本号,用来和本地 <code>mybatis</code> 区别开来</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>32-laolang<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="mybatis"><a href="#mybatis" class="headerlink" title="mybatis"></a>mybatis</h1><p>下载代码: <a href="https://github.com/mybatis/mybatis-3/tree/mybatis-3.5.6">https://github.com/mybatis/mybatis-3/tree/mybatis-3.5.6</a> , 复制到项目目录,并重命名为: <code>mybatis</code></p>
<p>修改 <code>mybatis/pom.xml</code>,主要是修改了版本号,用来和本地 <code>mybatis</code> 区别开来</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>32-laolang<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../mybatis-parent/pom.xml<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.6-laolang<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="添加-module"><a href="#添加-module" class="headerlink" title="添加 module"></a>添加 module</h1><h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.laolang.bzrj.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-3-source<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-source<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven-compiler-plugin.version</span>&gt;</span>3.11.0<span class="tag">&lt;/<span class="name">maven-compiler-plugin.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">testng.version</span>&gt;</span>6.14.3<span class="tag">&lt;/<span class="name">testng.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">mybatis.version</span>&gt;</span>3.5.6-laolang<span class="tag">&lt;/<span class="name">mybatis.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pagehelper.version</span>&gt;</span>5.3.2<span class="tag">&lt;/<span class="name">pagehelper.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mysql-connector-java.version</span>&gt;</span>8.0.22<span class="tag">&lt;/<span class="name">mysql-connector-java.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">logback.version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">logback.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">hutool.version</span>&gt;</span>5.8.11<span class="tag">&lt;/<span class="name">hutool.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">vavr.version</span>&gt;</span>0.10.4<span class="tag">&lt;/<span class="name">vavr.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapstruct.version</span>&gt;</span>1.4.2.Final<span class="tag">&lt;/<span class="name">mapstruct.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">guava.version</span>&gt;</span>23.0<span class="tag">&lt;/<span class="name">guava.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">lombok.versino</span>&gt;</span>1.18.16<span class="tag">&lt;/<span class="name">lombok.versino</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commons-lang3.version</span>&gt;</span>3.14.0<span class="tag">&lt;/<span class="name">commons-lang3.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.testng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>testng<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;testng.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">			下面这两个依赖必须添加,否则会报错: </span></span><br><span class="line"><span class="comment">			Cannot enable lazy loading because Javassist is not available. Add Javassist to your classpath.</span></span><br><span class="line"><span class="comment">			参考: https://blog.csdn.net/weixin_45056780/article/details/113449245</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ognl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ognl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.javassist<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javassist<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.27.0-GA<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;pagehelper.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql-connector-java.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;logback.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;hutool.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.vavr<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>vavr<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;vavr.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mapstruct<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapstruct<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mapstruct.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mapstruct<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapstruct-jdk8<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mapstruct.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mapstruct<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapstruct-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mapstruct.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.guava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guava<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;guava.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;lombok.versino&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-lang3.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">testResources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">testResource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;project.build.testSourceDirectory&#125;<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/*.java<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">testResource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">testResources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-compiler-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;maven.compiler.source&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;maven.compiler.target&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>$&#123;project.build.sourceEncoding&#125;<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="db-properties"><a href="#db-properties" class="headerlink" title="db.properties"></a>db.properties</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">jdbc.driver</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">jdbc.url</span>=<span class="string">jdbc:mysql://localhost:3306/mybatis_source?serverTimezone=UTC</span></span><br><span class="line"><span class="attr">jdbc.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">jdbc.password</span>=<span class="string">root</span></span><br></pre></td></tr></table></figure>

<h2 id="logback-xml"><a href="#logback-xml" class="headerlink" title="logback.xml"></a>logback.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。</span></span><br><span class="line"><span class="comment">    scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。</span></span><br><span class="line"><span class="comment">    de<span class="doctag">bug:</span> 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">scan</span>=<span class="string">&quot;true&quot;</span> <span class="attr">scanPeriod</span>=<span class="string">&quot;60 seconds&quot;</span> <span class="attr">debug</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 输出到控制台 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;console&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;50&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 输出到滚动文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;rolling-file&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>../logs/mybatis-base/app.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;50&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>../logs/mybatis-base/%d&#123;yyyy-MM-dd&#125;/app-%d&#123;yyyy-MM-dd&#125;.%i.log<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">timeBasedFileNamingAndTriggeringPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>10MB<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">timeBasedFileNamingAndTriggeringPolicy</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 日志文件保留天数 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>150<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;DEBUG&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;org.apache.ibatis&quot;</span> <span class="attr">level</span>=<span class="string">&quot;DEBUG&quot;</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;console&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;rolling-file&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;com.laolang&quot;</span> <span class="attr">level</span>=<span class="string">&quot;DEBUG&quot;</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;console&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;rolling-file&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.bzrj.mybatis.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.ReflectUtil;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.StrUtil;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.parameter.ParameterHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.statement.StatementHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.BoundSql;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.MappedStatement;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ParameterMapping;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.ParameterMode;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.plugin.Interceptor;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.plugin.Intercepts;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.plugin.Invocation;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.plugin.Plugin;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.plugin.Signature;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.MetaObject;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.SystemMetaObject;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.ResultHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.type.TypeHandlerRegistry;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Intercepts(&#123;</span></span><br><span class="line"><span class="meta">        @Signature(type = StatementHandler.class, method = &quot;query&quot;, args = &#123;Statement.class,</span></span><br><span class="line"><span class="meta">                ResultHandler.class&#125;),</span></span><br><span class="line"><span class="meta">        @Signature(type = StatementHandler.class, method = &quot;update&quot;, args = &#123;Statement.class&#125;),</span></span><br><span class="line"><span class="meta">        @Signature(type = StatementHandler.class, method = &quot;batch&quot;, args = &#123;Statement.class&#125;)</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPrintSqlInterceptor</span> <span class="keyword">implements</span> <span class="title class_">Interceptor</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * mybatis 配置对象.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Configuration</span> <span class="variable">configuration</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 时间格式化.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ThreadLocal&lt;SimpleDateFormat&gt; DATE_FORMAT_THREAD_LOCAL = ThreadLocal.withInitial(</span><br><span class="line">            () -&gt; <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss.SSS&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 拦截器主方法.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> invocation invocation</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> sql 执行结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Throwable Throwable</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">intercept</span><span class="params">(Invocation invocation)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">target</span> <span class="operator">=</span> invocation.getTarget();</span><br><span class="line">        <span class="type">long</span> <span class="variable">startTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        <span class="type">Object</span> <span class="variable">result</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            result = invocation.proceed();</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">long</span> <span class="variable">endTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">                <span class="type">long</span> <span class="variable">sqlCost</span> <span class="operator">=</span> endTime - startTime;</span><br><span class="line">                <span class="type">StatementHandler</span> <span class="variable">statementHandler</span> <span class="operator">=</span> (StatementHandler) target;</span><br><span class="line">                <span class="type">BoundSql</span> <span class="variable">boundSql</span> <span class="operator">=</span> statementHandler.getBoundSql();</span><br><span class="line">                <span class="keyword">if</span> (configuration == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="comment">// final DefaultParameterHandler parameterHandler = (DefaultParameterHandler) statementHandler.getParameterHandler();</span></span><br><span class="line">                    <span class="keyword">final</span> <span class="type">ParameterHandler</span> <span class="variable">parameterHandler</span> <span class="operator">=</span> statementHandler.getParameterHandler();</span><br><span class="line">                    <span class="comment">// Field configurationField = ReflectionUtils.findField(</span></span><br><span class="line">                    <span class="comment">//         parameterHandler.getClass(), &quot;configuration&quot;);</span></span><br><span class="line">                    <span class="comment">// ReflectionUtils.makeAccessible(configurationField);</span></span><br><span class="line">                    <span class="type">Field</span> <span class="variable">configurationField</span> <span class="operator">=</span> ReflectUtil.getField(parameterHandler.getClass(), <span class="string">&quot;configuration&quot;</span>);</span><br><span class="line">                    ReflectUtil.setAccessible(configurationField);</span><br><span class="line">                    <span class="built_in">this</span>.configuration = (Configuration) configurationField.get(parameterHandler);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 输出 mapper id</span></span><br><span class="line">                <span class="type">MetaObject</span> <span class="variable">metaObject</span> <span class="operator">=</span> SystemMetaObject.forObject(target);</span><br><span class="line">                <span class="type">MappedStatement</span> <span class="variable">ms</span> <span class="operator">=</span> (MappedStatement) metaObject.getValue(</span><br><span class="line">                        <span class="string">&quot;delegate.mappedStatement&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> ms.getId();</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 替换参数格式化Sql语句，去除换行符</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> formatSql(boundSql, configuration).concat(<span class="string">&quot;;&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">warning</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">                <span class="comment">// CHECKSTYLE:OFF</span></span><br><span class="line">                <span class="keyword">if</span> (sqlCost &gt; <span class="number">2000</span>) &#123;</span><br><span class="line">                    warning = <span class="string">&quot;[耗时过长]&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// CHECKSTYLE:ON</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">// 开始输出 sql</span></span><br><span class="line">                log.info(<span class="string">&quot;map-id: &#123;&#125;&quot;</span>, id);</span><br><span class="line">                log.info(<span class="string">&quot;[ &#123;&#125; ] [ &#123;&#125; ] ms &#123;&#125;&quot;</span>, sql, sqlCost, warning);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (result <span class="keyword">instanceof</span> List) &#123;</span><br><span class="line">                    log.info(<span class="string">&quot;Total: &#123;&#125;&quot;</span>, ((List) result).size());</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    log.info(<span class="string">&quot;Updates: &#123;&#125;&quot;</span>, result);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                log.error(<span class="string">&quot;==&gt; 打印sql 日志异常 &#123;0&#125;&quot;</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * plugin.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> target target</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Object</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">plugin</span><span class="params">(Object target)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Plugin.wrap(target, <span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * setProperties.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> properties properties</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setProperties</span><span class="params">(Properties properties)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取完整的sql实体的信息.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> boundSql      boundSql</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> configuration configuration</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 格式化后的 sql</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">formatSql</span><span class="params">(BoundSql boundSql, Configuration configuration)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> boundSql.getSql();</span><br><span class="line"></span><br><span class="line">        <span class="type">Object</span> <span class="variable">parameterObject</span> <span class="operator">=</span> boundSql.getParameterObject();</span><br><span class="line">        <span class="comment">// 输入sql字符串空判断</span></span><br><span class="line">        <span class="keyword">if</span> (StrUtil.isBlank(sql)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (configuration == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">TypeHandlerRegistry</span> <span class="variable">typeHandlerRegistry</span> <span class="operator">=</span> configuration.getTypeHandlerRegistry();</span><br><span class="line">        sql = beautifySql(sql);</span><br><span class="line">        List&lt;ParameterMapping&gt; parameterMappings = boundSql.getParameterMappings();</span><br><span class="line">        <span class="comment">// 参考mybatis 源码 DefaultParameterHandler</span></span><br><span class="line">        <span class="keyword">if</span> (parameterMappings != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (ParameterMapping parameterMapping : parameterMappings) &#123;</span><br><span class="line">                <span class="keyword">if</span> (parameterMapping.getMode() != ParameterMode.OUT) &#123;</span><br><span class="line">                    Object value;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">propertyName</span> <span class="operator">=</span> parameterMapping.getProperty();</span><br><span class="line">                    <span class="keyword">if</span> (boundSql.hasAdditionalParameter(propertyName)) &#123;</span><br><span class="line">                        value = boundSql.getAdditionalParameter(propertyName);</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (parameterObject == <span class="literal">null</span>) &#123;</span><br><span class="line">                        value = <span class="literal">null</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) &#123;</span><br><span class="line">                        value = parameterObject;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">MetaObject</span> <span class="variable">metaObject</span> <span class="operator">=</span> configuration.newMetaObject(parameterObject);</span><br><span class="line">                        value = metaObject.getValue(propertyName);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">paramValueStr</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    <span class="keyword">if</span> (value <span class="keyword">instanceof</span> String) &#123;</span><br><span class="line">                        paramValueStr = <span class="string">&quot;&#x27;&quot;</span> + value + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (value <span class="keyword">instanceof</span> Date) &#123;</span><br><span class="line">                        paramValueStr = <span class="string">&quot;&#x27;&quot;</span> + DATE_FORMAT_THREAD_LOCAL.get().format(value) + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        paramValueStr = value + <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    sql = sql.replaceFirst(<span class="string">&quot;\\?&quot;</span>, paramValueStr);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sql;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 美化 sql.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql sql</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> sql</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">beautifySql</span><span class="params">(String sql)</span> &#123;</span><br><span class="line">        sql = sql.replaceAll(<span class="string">&quot;[\\s\n ]+&quot;</span>, <span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> sql;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.bzrj.mybatis.hello;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysDictType</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String createBy;</span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line">    <span class="keyword">private</span> String updateBy;</span><br><span class="line">    <span class="keyword">private</span> LocalDateTime updateTime;</span><br><span class="line">    <span class="keyword">private</span> String remark;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String type;</span><br><span class="line">    <span class="keyword">private</span> String groupCode;</span><br><span class="line">    <span class="keyword">private</span> String status;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="mapper"><a href="#mapper" class="headerlink" title="mapper"></a>mapper</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.bzrj.mybatis.hello;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">SysDictTypeMapper</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    SysDictType <span class="title function_">selectById</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> Long id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="mapper-xml"><a href="#mapper-xml" class="headerlink" title="mapper.xml"></a>mapper.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.laolang.bzrj.mybatis.hello.SysDictTypeMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;SysDictTypeBaseMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.laolang.bzrj.mybatis.hello.SysDictType&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;java.lang.Long&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;BIGINT&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;createBy&quot;</span> <span class="attr">column</span>=<span class="string">&quot;create_by&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;createTime&quot;</span> <span class="attr">column</span>=<span class="string">&quot;create_time&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;java.time.LocalDateTime&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;TIMESTAMP&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;updateBy&quot;</span> <span class="attr">column</span>=<span class="string">&quot;update_by&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;updateTime&quot;</span> <span class="attr">column</span>=<span class="string">&quot;update_time&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;java.time.LocalDateTime&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;TIMESTAMP&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;remark&quot;</span> <span class="attr">column</span>=<span class="string">&quot;remark&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;type&quot;</span> <span class="attr">column</span>=<span class="string">&quot;type&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;groupCode&quot;</span> <span class="attr">column</span>=<span class="string">&quot;group_code&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;status&quot;</span> <span class="attr">column</span>=<span class="string">&quot;status&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectById&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;SysDictTypeBaseMap&quot;</span>&gt;</span></span><br><span class="line">        select * from sys_dict_type where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="mybatis-config-xml"><a href="#mybatis-config-xml" class="headerlink" title="mybatis-config.xml"></a>mybatis-config.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;db.properties&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;SLF4J&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">&quot;com.laolang.bzrj.mybatis.interceptor.MybatisPrintSqlInterceptor&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">&quot;com.github.pagehelper.PageInterceptor&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/laolang/bzrj/mybatis/hello/SysDictTypeMapper.xml&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.bzrj.mybatis.hello;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.json.JSONUtil;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.Reader;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.BeforeClass;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BeforeClass</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeClass</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> (<span class="type">Reader</span> <span class="variable">reader</span> <span class="operator">=</span> Resources.getResourceAsReader(<span class="string">&quot;com/laolang/bzrj/mybatis/hello/mybatis-config.xml&quot;</span>)) &#123;</span><br><span class="line">            sqlSessionFactory = <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(reader);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testOne</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> (<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession()) &#123;</span><br><span class="line">            <span class="type">SysDictTypeMapper</span> <span class="variable">sysDictTypeMapper</span> <span class="operator">=</span> sqlSession.getMapper(SysDictTypeMapper.class);</span><br><span class="line">            <span class="type">SysDictType</span> <span class="variable">dictType</span> <span class="operator">=</span> sysDictTypeMapper.selectById(<span class="number">1L</span>);</span><br><span class="line">            log.info(<span class="string">&quot;dictType:&#123;&#125;&quot;</span>, JSONUtil.toJsonStr(dictType));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>在<code>org.apache.ibatis.session.SqlSessionFactoryBuilder</code> 49 行左右打一个断点,然后 debug 测试类</p>
<p><img src="/images/2024-09-22-mybatis-%E6%BA%90%E7%A0%81%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/001.png" alt="image"></p>
]]></content>
      <categories>
        <category>java</category>
        <category>mybatis</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>mybatis</tag>
      </tags>
  </entry>
  <entry>
    <title>extjs 4.x 基本使用</title>
    <url>/2024/09/22/extjs-4-x-base/</url>
    <content><![CDATA[<h1 id="Hello-World-搭建"><a href="#Hello-World-搭建" class="headerlink" title="Hello World 搭建"></a>Hello World 搭建</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><ul>
<li>Extjs 5 beta 版下载链接：<a href="http://cdn.sencha.com/ext/beta/ext-5.0.0.736.zip">http://cdn.sencha.com/ext/beta/ext-5.0.0.736.zip</a></li>
<li>Extjs 4.2.1 下载链接：<a href="http://cdn.sencha.com/ext/gpl/ext-4.2.1-gpl.zip">http://cdn.sencha.com/ext/gpl/ext-4.2.1-gpl.zip</a></li>
<li>Extjs 4.0.7 下载链接：<a href="http://cdn.sencha.io/ext-4.0.7-gpl.zip">http://cdn.sencha.io/ext-4.0.7-gpl.zip</a></li>
<li>Extjs 3.4.0 下载链接：<a href="http://cdn.sencha.com/ext/gpl/ext-3.4.1.1-gpl.zip">http://cdn.sencha.com/ext/gpl/ext-3.4.1.1-gpl.zip</a></li>
<li>Extjs 2.3.0 下载链接：<a href="http://dev.sencha.com/deploy/ext-2.3.0.zip">http://dev.sencha.com/deploy/ext-2.3.0.zip</a></li>
</ul>
<p>本文使用 <code>4.2.1-gpl</code></p>
<h2 id="引入文件"><a href="#引入文件" class="headerlink" title="引入文件"></a>引入文件</h2><p>下载后并解压, 将如下几个文件复制到项目目录</p>
<ol>
<li><code>resources</code> : 全部引入</li>
<li><code>local</code> : 只需要包含 <code>ext-lang-zh_CN.js</code> 即可</li>
<li><code>ext-all.js</code>: 发布时引入</li>
<li><code>ext-all-debug.js</code> : 开发时引入</li>
</ol>
<h2 id="html"><a href="#html" class="headerlink" title="html"></a>html</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- extjs 样式文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../libs/extjs/resources/css/ext-all.css&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>index<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- extjs --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../libs/extjs/ext-all-debug.js&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- extjs 国际化文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../libs/extjs/locale/ext-lang-zh_CN.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="js"><a href="#js" class="headerlink" title="js"></a>js</h2><p><strong>khl.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> khl = &#123;</span><br><span class="line">    <span class="attr">buttonText</span>: &#123;</span><br><span class="line">        <span class="attr">ok</span>: <span class="string">&#x27;ok&#x27;</span>,</span><br><span class="line">        <span class="attr">yes</span>: <span class="string">&#x27;yes&#x27;</span>,</span><br><span class="line">        <span class="attr">no</span>: <span class="string">&#x27;no&#x27;</span>,</span><br><span class="line">        <span class="attr">cancel</span>: <span class="string">&#x27;cancel&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>index.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; khl &#125; <span class="keyword">from</span> <span class="string">&#x27;@/js/khl&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Ext</span>.<span class="title function_">onReady</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title class_">Ext</span>.<span class="property">Msg</span>.<span class="title function_">show</span>(&#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;地址&#x27;</span>,</span><br><span class="line">        <span class="attr">msg</span>: <span class="string">&#x27;请输入你的地址:&#x27;</span>,</span><br><span class="line">        <span class="attr">width</span>: <span class="number">300</span>,</span><br><span class="line">        <span class="attr">buttons</span>: <span class="title class_">Ext</span>.<span class="property">Msg</span>.<span class="property">OKCANCEL</span>,</span><br><span class="line">        <span class="attr">multiline</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">fn</span>: <span class="keyword">function</span>(<span class="params">op, text</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (op === khl.<span class="property">buttonText</span>.<span class="property">ok</span>) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;点击了确定&#x27;</span>)</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`输入内容:<span class="subst">$&#123;text&#125;</span>`</span>)</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op === khl.<span class="property">buttonText</span>.<span class="property">cancel</span>) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;点击了取消&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">animateTarget</span>: <span class="string">&#x27;addAddressBtn&#x27;</span>,</span><br><span class="line">        <span class="attr">icon</span>: <span class="title class_">Ext</span>.<span class="property">MessageBox</span>.<span class="property">INFO</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="/images/2024-09-22-extjs-4-x-base/001.gif"></p>
<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>如果使用 <code>webpack</code> 构建, 最好将 <code>CssMinimizerPlugin</code> 禁用, 否则会报错:<br><strong>Missed semicolon [libs&#x2F;extjs&#x2F;resources&#x2F;ext-theme-neptune&#x2F;ext-theme-neptune-all-rtl.css:1,105970]</strong></p>
<h2 id="解读"><a href="#解读" class="headerlink" title="解读"></a>解读</h2><p><code>Ext.onReady</code> 个方法是 <code>Ext</code> 的准备函数，也就是Ext相关的代码都会在这个函数里书写，它比较类似于window的onload方法，但是注意其执行时机是在页面的DOM对象加载完毕之后立即执行。<br>而 <code>window.onload</code> 是在所哟资源都加载完毕才会执行</p>
]]></content>
      <categories>
        <category>前端</category>
        <category>extjs</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>extjs</tag>
      </tags>
  </entry>
  <entry>
    <title>extjs 总览</title>
    <url>/2024/09/22/extjs-summary/</url>
    <content><![CDATA[<h1 id="4-x-参考资料"><a href="#4-x-参考资料" class="headerlink" title="4.x 参考资料"></a>4.x 参考资料</h1><p><a href="https://www.bilibili.com/video/BV1h74112752">【前端】【Extjs】【尚学堂】Extjs基础架构 · 视频教程</a><br><a href="https://www.bilibili.com/video/BV1FJ411X7FV">extjs4.0 全套视频教程(完整版) · 视频教程</a></p>
<p><a href="https://extjs-doc-cn.github.io/ext4api/">脚本娃娃 (Ext4.1.0 Doc中文版 V1.0.0 Beta)</a></p>
<p><a href="https://blog.csdn.net/penghao_1/article/details/93628244">Extjs各版本的下载链接，包含ext3.4源码示例</a></p>
<p><a href="https://docs.sencha.com/extjs/4.2.1/#">extjs 4.2.1 官方文档</a></p>
<h1 id="7-参考资料"><a href="#7-参考资料" class="headerlink" title="7 参考资料"></a>7 参考资料</h1><p><a href="https://www.cnblogs.com/cqpanda/p/16328016.html">ExtJS 教程汇总（最新）（ExtJS 7）</a></p>
]]></content>
      <categories>
        <category>前端</category>
        <category>extjs</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>extjs</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql 总览</title>
    <url>/2024/09/22/mysql-summary/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>数据库</category>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>docker 启动 spring boot</title>
    <url>/2024/09/22/run-spring-boot-with-docker/</url>
    <content><![CDATA[<h1 id="准备一个项目"><a href="#准备一个项目" class="headerlink" title="准备一个项目"></a>准备一个项目</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-pc:~$ curl http://localhost:8092/system/menu/list</span><br><span class="line">&#123;&quot;profile&quot;:&quot;dev&quot;,&quot;id&quot;:1001,&quot;time&quot;:&quot;2024-07-13 07:59:02&quot;,&quot;title&quot;:&quot;菜单管理&quot;&#125;</span><br></pre></td></tr></table></figure>

<h1 id="项目基本配置"><a href="#项目基本配置" class="headerlink" title="项目基本配置"></a>项目基本配置</h1><h2 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h2><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">$&#123;spring.profiles.active&#125;</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">thresh-boot</span></span><br></pre></td></tr></table></figure>
<h2 id="application-dev-yml"><a href="#application-dev-yml" class="headerlink" title="application-dev.yml"></a>application-dev.yml</h2><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8092</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">context-path:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">config:</span> <span class="string">classpath:log4j2-dev.xml</span></span><br></pre></td></tr></table></figure>

<h2 id="application-prod-yml"><a href="#application-prod-yml" class="headerlink" title="application-prod.yml"></a>application-prod.yml</h2><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">context-path:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">config:</span> <span class="string">/usr/local/thresh-boot/conf/log4j2-prod.xml</span></span><br></pre></td></tr></table></figure>

<h2 id="log4j2-dev-xml"><a href="#log4j2-dev-xml" class="headerlink" title="log4j2-dev.xml"></a>log4j2-dev.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Configuration</span> <span class="attr">status</span>=<span class="string">&quot;WARN&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;LOG_HOME&quot;</span>&gt;</span>../logs/thresh-boot<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;FILE_NAME&quot;</span>&gt;</span>app<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;thresh.level&quot;</span>&gt;</span>debug<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Appenders</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">&quot;Console&quot;</span> <span class="attr">target</span>=<span class="string">&quot;SYSTEM_OUT&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;%d&#123;HH:mm:ss.SSS&#125; [%25t] %-5level %l - %msg%n&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">RollingRandomAccessFile</span> <span class="attr">name</span>=<span class="string">&quot;RollingRandomAccessFile&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;$&#123;LOG_HOME&#125;/$&#123;FILE_NAME&#125;.log&quot;</span></span></span><br><span class="line"><span class="tag">                                 <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;LOG_HOME&#125;/$&#123;date:yyyy-MM-dd&#125;/$&#123;FILE_NAME&#125;-%d&#123;yyyy-MM-dd&#125;-%i.log&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;%d&#123;HH:mm:ss.SSS&#125; [%25t] %-5level %l - %msg%n&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span> <span class="attr">interval</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">&quot;10 MB&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span> <span class="attr">max</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RollingRandomAccessFile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Appenders</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Loggers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">&quot;$&#123;thresh.level&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;Console&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;RollingRandomAccessFile&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;com.laolang&quot;</span> <span class="attr">level</span>=<span class="string">&quot;$&#123;thresh.level&#125;&quot;</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;Console&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;RollingRandomAccessFile&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="log4j2-prod-xml"><a href="#log4j2-prod-xml" class="headerlink" title="log4j2-prod.xml"></a>log4j2-prod.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Configuration</span> <span class="attr">status</span>=<span class="string">&quot;WARN&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 这里用全路径 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;LOG_HOME&quot;</span>&gt;</span>/usr/local/thresh-boot/log/<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;FILE_NAME&quot;</span>&gt;</span>app<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 改为 info 级别 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;thresh.level&quot;</span>&gt;</span>info<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Appenders</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">&quot;Console&quot;</span> <span class="attr">target</span>=<span class="string">&quot;SYSTEM_OUT&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;%d&#123;HH:mm:ss.SSS&#125; [%t] %-5level %l - %msg%n&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">RollingRandomAccessFile</span> <span class="attr">name</span>=<span class="string">&quot;RollingRandomAccessFile&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;$&#123;LOG_HOME&#125;/$&#123;FILE_NAME&#125;.log&quot;</span></span></span><br><span class="line"><span class="tag">                                 <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;LOG_HOME&#125;/$&#123;date:yyyy-MM-dd&#125;/$&#123;FILE_NAME&#125;-%d&#123;yyyy-MM-dd&#125;-%i.log&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;%d&#123;HH:mm:ss.SSS&#125; [%t] %-5level %l - %msg%n&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span> <span class="attr">interval</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">&quot;10 MB&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span> <span class="attr">max</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RollingRandomAccessFile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Appenders</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Loggers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">&quot;$&#123;thresh.level&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;Console&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;RollingRandomAccessFile&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;com.laolang&quot;</span> <span class="attr">level</span>=<span class="string">&quot;$&#123;thresh.level&#125;&quot;</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;Console&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;RollingRandomAccessFile&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>


<h1 id="maven-打包"><a href="#maven-打包" class="headerlink" title="maven 打包"></a>maven 打包</h1><h2 id="maven-打包命令"><a href="#maven-打包命令" class="headerlink" title="maven 打包命令"></a>maven 打包命令</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mvn clean package -Dmaven.test.skip=true</span><br></pre></td></tr></table></figure>

<h2 id="maven-打包注意事项"><a href="#maven-打包注意事项" class="headerlink" title="maven 打包注意事项"></a>maven 打包注意事项</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.laolang.thresh<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thresh-boot<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">profiles.active</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">profiles.active</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>prod<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">profiles.active</span>&gt;</span>prod<span class="tag">&lt;/<span class="name">profiles.active</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources/<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-compiler-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;maven.compiler.source&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;maven.compiler.target&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>$&#123;project.build.sourceEncoding&#125;<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;springboot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">goal</span>&gt;</span> <span class="comment">&lt;!-- 将引入的 jar 打入其中 --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="docker-打包"><a href="#docker-打包" class="headerlink" title="docker 打包"></a>docker 打包</h1><h2 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h2><figure class="highlight docker"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 基础镜像使用 java8</span></span><br><span class="line"><span class="keyword">FROM</span> java:<span class="number">8</span></span><br><span class="line"><span class="comment"># 作者</span></span><br><span class="line"><span class="keyword">MAINTAINER</span> khl &lt;xiaodaima2016@<span class="number">163</span>.com&gt;</span><br><span class="line"><span class="comment"># 修正时区问题</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> bash -c <span class="string">&#x27;echo &quot;Asia/Shanghai&quot; &gt; /etc/timezone&#x27;</span></span></span><br><span class="line"><span class="comment"># 端口</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8080</span></span><br><span class="line"><span class="comment"># 挂载目录</span></span><br><span class="line"><span class="keyword">VOLUME</span><span class="language-bash"> /usr/local/thresh-boot/conf</span></span><br><span class="line"><span class="keyword">VOLUME</span><span class="language-bash"> /usr/local/thresh-boot/log</span></span><br><span class="line"><span class="comment"># 添加配置文件</span></span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> src/main/resources/application.yml /usr/local/thresh-boot/conf/application.yml</span></span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> src/main/resources/application-prod.yml /usr/local/thresh-boot/conf/application-prod.yml</span></span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> src/main/resources/log4j2-prod.xml /usr/local/thresh-boot/conf/log4j2-prod.xml</span></span><br><span class="line"><span class="comment"># 将jar包添加到容器中并更名为app.jar</span></span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> target/thresh-boot.jar /usr/local/thresh-boot/app/app.jar</span></span><br><span class="line"><span class="comment"># 运行jar包</span></span><br><span class="line"><span class="comment"># -Dspring.config.location 的值可以是文件名也可是路径， 如果是路径，需要以 / 结尾</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [ <span class="string">&quot;java&quot;</span>, \</span></span><br><span class="line"><span class="language-bash">    <span class="string">&quot;-Djava.security.egd=file:/dev/./urandom&quot;</span>, \</span></span><br><span class="line"><span class="language-bash">    <span class="string">&quot;-Dspring.config.location=/usr/local/thresh-boot/conf/&quot;</span>, \</span></span><br><span class="line"><span class="language-bash">    <span class="string">&quot;-Dspring.profiles.active=prod&quot;</span>, \</span></span><br><span class="line"><span class="language-bash">    <span class="string">&quot;-jar&quot;</span>, \</span></span><br><span class="line"><span class="language-bash">    <span class="string">&quot;/usr/local/thresh-boot/app/app.jar&quot;</span> \</span></span><br><span class="line"><span class="language-bash">]</span></span><br></pre></td></tr></table></figure>

<h2 id="打包命令"><a href="#打包命令" class="headerlink" title="打包命令"></a>打包命令</h2><blockquote>
<p>注意: 修改镜像时，如果不需要修改版本号，最好将本地镜像删除</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker build -t khl/thresh-boot:0.1 .</span><br></pre></td></tr></table></figure>

<h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><blockquote>
<p>配置文件从工程复制即可</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-pc:thresh-boot$ tree</span><br><span class="line">.</span><br><span class="line">├── conf</span><br><span class="line">│   ├── application-prod.yml</span><br><span class="line">│   ├── application.yml</span><br><span class="line">│   └── log4j2-prod.xml</span><br><span class="line">└── log</span><br><span class="line">    └── app.log</span><br><span class="line"></span><br><span class="line">3 directories, 4 files</span><br><span class="line">laolang@laolang-pc:thresh-boot$ </span><br></pre></td></tr></table></figure>

<h2 id="启动命令"><a href="#启动命令" class="headerlink" title="启动命令"></a>启动命令</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run --name thresh-boot-dev -d -p 10201:8080 \</span><br><span class="line">-v /home/laolang/app/thresh-boot/conf:/usr/local/thresh-boot/conf \</span><br><span class="line">-v /home/laolang/app/thresh-boot/log:/usr/local/thresh-boot/log \</span><br><span class="line">khl/thresh-boot:0.1</span><br></pre></td></tr></table></figure>

<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="/images/2024-09-22-run-spring-boot-with-docker/001.png" alt="image"></p>
]]></content>
      <categories>
        <category>java</category>
        <category>spring boot</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>spring boot</tag>
      </tags>
  </entry>
  <entry>
    <title>quartz 基础</title>
    <url>/2024/09/22/quartz-base/</url>
    <content><![CDATA[<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.bilibili.com/video/BV19t41127de">java教程之精品详解Quartz，企业中热门实用的技能【黑马程序员】</a><br><a href="https://xuzongbao.gitbooks.io/quartz/content/">中文文档</a></p>
<p><a href="https://www.bootwiki.com/quartz/quartz-intro.html">Quartz快速入门指南</a></p>
<p><a href="https://cron.ciding.cc/">Cron在线表达式生成器</a></p>
<p><a href="https://blog.csdn.net/yaomingyang/article/details/108348891">springboot2.x+quartz+mysql持久化集成</a></p>
<h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h1><h2 id="pom"><a href="#pom" class="headerlink" title="pom"></a>pom</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.laolang.jx<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz-hello<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- test --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">testng.version</span>&gt;</span>6.14.3<span class="tag">&lt;/<span class="name">testng.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- logback --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">logback.version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">logback.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">quartz.version</span>&gt;</span>2.3.0<span class="tag">&lt;/<span class="name">quartz.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- tool --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hutool.version</span>&gt;</span>5.8.11<span class="tag">&lt;/<span class="name">hutool.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">lombok.version</span>&gt;</span>1.18.16<span class="tag">&lt;/<span class="name">lombok.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- testng --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.testng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>testng<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;testng.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- logback --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;logback.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- quartz --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;quartz.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz-jobs<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;quartz.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- tool --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;hutool.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;lombok.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="job"><a href="#job" class="headerlink" title="job"></a>job</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.laolang.jx.job;</span><br><span class="line"></span><br><span class="line">import cn.hutool.core.date.DatePattern;</span><br><span class="line">import cn.hutool.core.date.DateUtil;</span><br><span class="line">import java.util.Date;</span><br><span class="line">import lombok.extern.slf4j.Slf4j;</span><br><span class="line">import org.quartz.Job;</span><br><span class="line">import org.quartz.JobExecutionContext;</span><br><span class="line">import org.quartz.JobExecutionException;</span><br><span class="line"></span><br><span class="line">@Slf4j</span><br><span class="line">public class HelloJob implements Job &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public HelloJob() &#123;</span><br><span class="line">        log.info(&quot;初始化 job&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void execute(JobExecutionContext jobExecutionContext) throws JobExecutionException &#123;</span><br><span class="line">        log.info(&quot;job 过程:&#123;&#125;&quot;, DateUtil.format(new Date(), DatePattern.NORM_DATETIME_PATTERN));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="启动类"><a href="#启动类" class="headerlink" title="启动类"></a>启动类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.job.HelloJob;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.quartz.CronScheduleBuilder;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobBuilder;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobDetail;</span><br><span class="line"><span class="keyword">import</span> org.quartz.Scheduler;</span><br><span class="line"><span class="keyword">import</span> org.quartz.SchedulerException;</span><br><span class="line"><span class="keyword">import</span> org.quartz.Trigger;</span><br><span class="line"><span class="keyword">import</span> org.quartz.TriggerBuilder;</span><br><span class="line"><span class="keyword">import</span> org.quartz.impl.StdSchedulerFactory;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">QuartzHelloApp</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SchedulerException &#123;</span><br><span class="line">        <span class="comment">// 调度器</span></span><br><span class="line">        <span class="type">Scheduler</span> <span class="variable">scheduler</span> <span class="operator">=</span> StdSchedulerFactory.getDefaultScheduler();</span><br><span class="line">        <span class="comment">// 任务实例</span></span><br><span class="line">        <span class="comment">// 加载任务类, 要求 HelloJob 实现 Job 接口</span></span><br><span class="line">        <span class="comment">// 每次调度执行 job 时, 都会创建一个新的 job 实例, 调用完成后 job 实例释放, 被垃圾回收机制回收</span></span><br><span class="line">        <span class="type">JobDetail</span> <span class="variable">jobDetail</span> <span class="operator">=</span> JobBuilder.newJob(HelloJob.class)</span><br><span class="line">                <span class="comment">// 任务名称(唯一), 组名称</span></span><br><span class="line">                .withIdentity(<span class="string">&quot;job-hello&quot;</span>, <span class="string">&quot;job-group-hello&quot;</span>)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="comment">// 触发器</span></span><br><span class="line">        <span class="type">Trigger</span> <span class="variable">trigger</span> <span class="operator">=</span> TriggerBuilder.newTrigger()</span><br><span class="line">                .withIdentity(<span class="string">&quot;trigger-hello&quot;</span>, <span class="string">&quot;trigger-group-hello&quot;</span>)</span><br><span class="line">                .startNow()</span><br><span class="line">                .withSchedule(CronScheduleBuilder.cronSchedule(<span class="string">&quot;0/5 * * * * ?&quot;</span>))</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        scheduler.scheduleJob(jobDetail, trigger);</span><br><span class="line">        scheduler.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\program\java\jdk8\jdk\bin\java.exe &quot;-javaagent:D:\program\java\idea\IntelliJ IDEA Community Edition 2024.1.4\lib\idea_rt.jar=14248:D:\program\java\idea\IntelliJ IDEA Community Edition 2024.1.4\bin&quot; -Dfile.encoding=UTF-8 -classpath D:\program\java\jdk8\jdk\jre\lib\charsets.jar;D:\program\java\jdk8\jdk\jre\lib\deploy.jar;D:\program\java\jdk8\jdk\jre\lib\ext\access-bridge-64.jar;D:\program\java\jdk8\jdk\jre\lib\ext\cldrdata.jar;D:\program\java\jdk8\jdk\jre\lib\ext\dnsns.jar;D:\program\java\jdk8\jdk\jre\lib\ext\jaccess.jar;D:\program\java\jdk8\jdk\jre\lib\ext\jfxrt.jar;D:\program\java\jdk8\jdk\jre\lib\ext\localedata.jar;D:\program\java\jdk8\jdk\jre\lib\ext\nashorn.jar;D:\program\java\jdk8\jdk\jre\lib\ext\sunec.jar;D:\program\java\jdk8\jdk\jre\lib\ext\sunjce_provider.jar;D:\program\java\jdk8\jdk\jre\lib\ext\sunmscapi.jar;D:\program\java\jdk8\jdk\jre\lib\ext\sunpkcs11.jar;D:\program\java\jdk8\jdk\jre\lib\ext\zipfs.jar;D:\program\java\jdk8\jdk\jre\lib\javaws.jar;D:\program\java\jdk8\jdk\jre\lib\jce.jar;D:\program\java\jdk8\jdk\jre\lib\jfr.jar;D:\program\java\jdk8\jdk\jre\lib\jfxswt.jar;D:\program\java\jdk8\jdk\jre\lib\jsse.jar;D:\program\java\jdk8\jdk\jre\lib\management-agent.jar;D:\program\java\jdk8\jdk\jre\lib\plugin.jar;D:\program\java\jdk8\jdk\jre\lib\resources.jar;D:\program\java\jdk8\jdk\jre\lib\rt.jar;E:\code\idea\quartz-study\quartz-hello\target\classes;D:\program\java\repo\org\testng\testng\6.14.3\testng-6.14.3.jar;D:\program\java\repo\com\beust\jcommander\1.72\jcommander-1.72.jar;D:\program\java\repo\org\apache-extras\beanshell\bsh\2.0b6\bsh-2.0b6.jar;D:\program\java\repo\ch\qos\logback\logback-classic\1.2.12\logback-classic-1.2.12.jar;D:\program\java\repo\ch\qos\logback\logback-core\1.2.12\logback-core-1.2.12.jar;D:\program\java\repo\org\slf4j\slf4j-api\1.7.32\slf4j-api-1.7.32.jar;D:\program\java\repo\org\quartz-scheduler\quartz\2.3.0\quartz-2.3.0.jar;D:\program\java\repo\com\mchange\c3p0\0.9.5.2\c3p0-0.9.5.2.jar;D:\program\java\repo\com\mchange\mchange-commons-java\0.2.11\mchange-commons-java-0.2.11.jar;D:\program\java\repo\com\zaxxer\HikariCP-java6\2.3.13\HikariCP-java6-2.3.13.jar;D:\program\java\repo\org\quartz-scheduler\quartz-jobs\2.3.0\quartz-jobs-2.3.0.jar;D:\program\java\repo\cn\hutool\hutool-all\5.8.11\hutool-all-5.8.11.jar;D:\program\java\repo\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar com.laolang.jx.QuartzHelloApp</span><br><span class="line">04:23:05.236 [main] INFO org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor</span><br><span class="line">04:23:05.239 [main] INFO org.quartz.simpl.SimpleThreadPool - Job execution threads will use class loader of thread: main</span><br><span class="line">04:23:05.246 [main] INFO org.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl</span><br><span class="line">04:23:05.246 [main] INFO org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.</span><br><span class="line">04:23:05.246 [main] INFO org.quartz.simpl.RAMJobStore - RAMJobStore initialized.</span><br><span class="line">04:23:05.246 [main] INFO org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) &#x27;DefaultQuartzScheduler&#x27; with instanceId &#x27;NON_CLUSTERED&#x27;</span><br><span class="line">  Scheduler class: &#x27;org.quartz.core.QuartzScheduler&#x27; - running locally.</span><br><span class="line">  NOT STARTED.</span><br><span class="line">  Currently in standby mode.</span><br><span class="line">  Number of jobs executed: 0</span><br><span class="line">  Using thread pool &#x27;org.quartz.simpl.SimpleThreadPool&#x27; - with 10 threads.</span><br><span class="line">  Using job-store &#x27;org.quartz.simpl.RAMJobStore&#x27; - which does not support persistence. and is not clustered.</span><br><span class="line"></span><br><span class="line">04:23:05.246 [main] INFO org.quartz.impl.StdSchedulerFactory - Quartz scheduler &#x27;DefaultQuartzScheduler&#x27; initialized from default resource file in Quartz package: &#x27;quartz.properties&#x27;</span><br><span class="line">04:23:05.246 [main] INFO org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0</span><br><span class="line">04:23:05.252 [main] INFO org.quartz.core.QuartzScheduler - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.</span><br><span class="line">04:23:05.252 [DefaultQuartzScheduler_QuartzSchedulerThread] DEBUG org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers</span><br><span class="line">04:23:05.254 [DefaultQuartzScheduler_QuartzSchedulerThread] DEBUG org.quartz.simpl.PropertySettingJobFactory - Producing instance of Job &#x27;job-group-hello.job-hello&#x27;, class=com.laolang.jx.job.HelloJob</span><br><span class="line">04:23:05.254 [DefaultQuartzScheduler_QuartzSchedulerThread] INFO com.laolang.jx.job.HelloJob - 初始化 job</span><br><span class="line">04:23:05.256 [DefaultQuartzScheduler_QuartzSchedulerThread] DEBUG org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers</span><br><span class="line">04:23:05.256 [DefaultQuartzScheduler_Worker-1] DEBUG org.quartz.core.JobRunShell - Calling execute on job job-group-hello.job-hello</span><br><span class="line">04:23:05.286 [DefaultQuartzScheduler_Worker-1] INFO com.laolang.jx.job.HelloJob - job 过程:2024-08-17 04:23:05</span><br><span class="line">04:23:10.011 [DefaultQuartzScheduler_QuartzSchedulerThread] DEBUG org.quartz.simpl.PropertySettingJobFactory - Producing instance of Job &#x27;job-group-hello.job-hello&#x27;, class=com.laolang.jx.job.HelloJob</span><br><span class="line">04:23:10.011 [DefaultQuartzScheduler_QuartzSchedulerThread] INFO com.laolang.jx.job.HelloJob - 初始化 job</span><br><span class="line">04:23:10.011 [DefaultQuartzScheduler_Worker-2] DEBUG org.quartz.core.JobRunShell - Calling execute on job job-group-hello.job-hello</span><br><span class="line">04:23:10.012 [DefaultQuartzScheduler_QuartzSchedulerThread] DEBUG org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers</span><br><span class="line">04:23:10.012 [DefaultQuartzScheduler_Worker-2] INFO com.laolang.jx.job.HelloJob - job 过程:2024-08-17 04:23:10</span><br><span class="line">04:23:15.016 [DefaultQuartzScheduler_QuartzSchedulerThread] DEBUG org.quartz.simpl.PropertySettingJobFactory - Producing instance of Job &#x27;job-group-hello.job-hello&#x27;, class=com.laolang.jx.job.HelloJob</span><br><span class="line">04:23:15.016 [DefaultQuartzScheduler_QuartzSchedulerThread] INFO com.laolang.jx.job.HelloJob - 初始化 job</span><br><span class="line">04:23:15.016 [DefaultQuartzScheduler_Worker-3] DEBUG org.quartz.core.JobRunShell - Calling execute on job job-group-hello.job-hello</span><br><span class="line">04:23:15.016 [DefaultQuartzScheduler_QuartzSchedulerThread] DEBUG org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers</span><br><span class="line">04:23:15.017 [DefaultQuartzScheduler_Worker-3] INFO com.laolang.jx.job.HelloJob - job 过程:2024-08-17 04:23:15</span><br><span class="line">04:23:20.016 [DefaultQuartzScheduler_QuartzSchedulerThread] DEBUG org.quartz.simpl.PropertySettingJobFactory - Producing instance of Job &#x27;job-group-hello.job-hello&#x27;, class=com.laolang.jx.job.HelloJob</span><br><span class="line">04:23:20.016 [DefaultQuartzScheduler_QuartzSchedulerThread] INFO com.laolang.jx.job.HelloJob - 初始化 job</span><br><span class="line">04:23:20.016 [DefaultQuartzScheduler_Worker-4] DEBUG org.quartz.core.JobRunShell - Calling execute on job job-group-hello.job-hello</span><br><span class="line">04:23:20.016 [DefaultQuartzScheduler_QuartzSchedulerThread] DEBUG org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers</span><br><span class="line">04:23:20.016 [DefaultQuartzScheduler_Worker-4] INFO com.laolang.jx.job.HelloJob - job 过程:2024-08-17 04:23:20</span><br><span class="line"></span><br><span class="line">Process finished with exit code 130</span><br></pre></td></tr></table></figure>

<h1 id="jobDetail"><a href="#jobDetail" class="headerlink" title="jobDetail"></a>jobDetail</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">log.info(<span class="string">&quot;jobDetail 信息:名称:&#123;&#125;&quot;</span>,jobDetail.getKey().getName());</span><br><span class="line">log.info(<span class="string">&quot;jobDetail 信息:组名称:&#123;&#125;&quot;</span>,jobDetail.getKey().getGroup()); <span class="comment">// 没有指定, 则为 DEFAULT</span></span><br><span class="line">log.info(<span class="string">&quot;jobDetail 信息:任务类&#123;&#125;&quot;</span>,jobDetail.getJobClass().getName());</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">04:27:14.131 [main] INFO com.laolang.jx.QuartzHelloApp - jobDetail 信息:名称:job-hello</span><br><span class="line">04:27:14.132 [main] INFO com.laolang.jx.QuartzHelloApp - jobDetail 信息:组名称:job-group-hello</span><br><span class="line">04:27:14.132 [main] INFO com.laolang.jx.QuartzHelloApp - jobDetail 信息:任务类com.laolang.jx.job.HelloJob</span><br></pre></td></tr></table></figure>

<h1 id="JobExecutionContext"><a href="#JobExecutionContext" class="headerlink" title="JobExecutionContext"></a>JobExecutionContext</h1><blockquote>
<ul>
<li>当 <code>Scheduler</code> 调用一个 <code>Job</code> , 就会将 <code>JobExecutionContext</code> 传递给 <code>Job</code> 的 <code>execute()</code> 方法</li>
<li><code>Job</code> 能通过 <code>JobExecutionContext</code> 对象访问到 <code>Quartz</code> 运行时的环境以及 <code>Job</code> 本身的明细数据</li>
</ul>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">execute</span><span class="params">(JobExecutionContext context)</span> <span class="keyword">throws</span> JobExecutionException &#123;</span><br><span class="line">    <span class="comment">// 获取 JobDetail 内容</span></span><br><span class="line">    <span class="type">JobKey</span> <span class="variable">jobKey</span> <span class="operator">=</span> context.getJobDetail().getKey();</span><br><span class="line">    log.info(<span class="string">&quot;jobDetail 信息:名称:&#123;&#125;&quot;</span>,jobKey.getName());</span><br><span class="line">    log.info(<span class="string">&quot;jobDetail 信息:组名称:&#123;&#125;&quot;</span>,jobKey.getGroup()); <span class="comment">// 没有指定, 则为 DEFAULT</span></span><br><span class="line">    log.info(<span class="string">&quot;jobDetail 信息:任务类&#123;&#125;&quot;</span>,context.getJobDetail().getJobClass().getName());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取 Trigger 内容</span></span><br><span class="line">    <span class="type">Trigger</span> <span class="variable">trigger</span> <span class="operator">=</span> context.getTrigger();</span><br><span class="line"></span><br><span class="line">    log.info(<span class="string">&quot;job 过程:&#123;&#125;&quot;</span>, DateUtil.format(<span class="keyword">new</span> <span class="title class_">Date</span>(), DatePattern.NORM_DATETIME_PATTERN));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="JobDataMap"><a href="#JobDataMap" class="headerlink" title="JobDataMap"></a>JobDataMap</h1><blockquote>
<ul>
<li>在进行任务调度时, <code>JobDataMap</code> 存储在 <code>JobExecutionContext</code> 中</li>
<li><code>JobDataMap</code> 可以用来装载任何可序列化的数据对象, 当 <code>Job</code> 实例对象被在执行时这些参数对象会传递给它</li>
<li><code>JobDataMap</code> 实现了 JDK 的 Map 接口, 并且添加了获取基本数据类型的方法</li>
<li>同名的 <code>key</code> , <code>Trigger</code> 会覆盖 <code>JobDetail</code></li>
</ul>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.job.HelloJob;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.job.HelloJobData;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.quartz.CronScheduleBuilder;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobBuilder;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobDataMap;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobDetail;</span><br><span class="line"><span class="keyword">import</span> org.quartz.Scheduler;</span><br><span class="line"><span class="keyword">import</span> org.quartz.SchedulerException;</span><br><span class="line"><span class="keyword">import</span> org.quartz.Trigger;</span><br><span class="line"><span class="keyword">import</span> org.quartz.TriggerBuilder;</span><br><span class="line"><span class="keyword">import</span> org.quartz.impl.StdSchedulerFactory;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">QuartzHelloApp</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SchedulerException &#123;</span><br><span class="line">        <span class="type">Scheduler</span> <span class="variable">scheduler</span> <span class="operator">=</span> StdSchedulerFactory.getDefaultScheduler();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 任务参数</span></span><br><span class="line">        <span class="type">JobDataMap</span> <span class="variable">jobDataMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JobDataMap</span>();</span><br><span class="line">        jobDataMap.put(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;hello job&quot;</span>);</span><br><span class="line">        jobDataMap.put(<span class="string">&quot;data&quot;</span>, HelloJobData.builder().username(<span class="string">&quot;laolang&quot;</span>).role(<span class="string">&quot;admin&quot;</span>).build());</span><br><span class="line"></span><br><span class="line">        <span class="type">JobDetail</span> <span class="variable">jobDetail</span> <span class="operator">=</span> JobBuilder.newJob(HelloJob.class)</span><br><span class="line">                <span class="comment">// 任务参数</span></span><br><span class="line">                .usingJobData(jobDataMap)</span><br><span class="line">                .withIdentity(<span class="string">&quot;job-hello&quot;</span>, <span class="string">&quot;job-group-hello&quot;</span>)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="type">Trigger</span> <span class="variable">trigger</span> <span class="operator">=</span> TriggerBuilder.newTrigger()</span><br><span class="line">                .withIdentity(<span class="string">&quot;trigger-hello&quot;</span>, <span class="string">&quot;trigger-group-hello&quot;</span>)</span><br><span class="line">                .startNow()</span><br><span class="line">                .withSchedule(CronScheduleBuilder.cronSchedule(<span class="string">&quot;0/5 * * * * ?&quot;</span>))</span><br><span class="line">                <span class="comment">// 任务参数</span></span><br><span class="line">                .usingJobData(jobDataMap)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        scheduler.scheduleJob(jobDetail, trigger);</span><br><span class="line">        scheduler.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.job;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Builder;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloJobData</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">5204237110609663577L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String role;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.job;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.date.DatePattern;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.date.DateUtil;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.json.JSONUtil;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.quartz.Job;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobDataMap;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobDetail;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionContext;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionException;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobKey;</span><br><span class="line"><span class="keyword">import</span> org.quartz.TriggerKey;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloJob</span> <span class="keyword">implements</span> <span class="title class_">Job</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">HelloJob</span><span class="params">()</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;初始化 job&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">execute</span><span class="params">(JobExecutionContext context)</span> <span class="keyword">throws</span> JobExecutionException &#123;</span><br><span class="line">        <span class="type">JobDetail</span> <span class="variable">jobDetail</span> <span class="operator">=</span> context.getJobDetail();</span><br><span class="line">        <span class="comment">// 获取 JobDetail 内容</span></span><br><span class="line">        <span class="type">JobKey</span> <span class="variable">jobKey</span> <span class="operator">=</span> jobDetail.getKey();</span><br><span class="line">        log.info(<span class="string">&quot;jobDetail info start&quot;</span>);</span><br><span class="line">        log.info(<span class="string">&quot;jobDetail 信息:名称:&#123;&#125;&quot;</span>, jobKey.getName());</span><br><span class="line">        log.info(<span class="string">&quot;jobDetail 信息:组名称:&#123;&#125;&quot;</span>, jobKey.getGroup()); <span class="comment">// 没有指定, 则为 DEFAULT</span></span><br><span class="line">        log.info(<span class="string">&quot;jobDetail 信息:任务类&#123;&#125;&quot;</span>, jobDetail.getJobClass().getName());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// JobDataMap</span></span><br><span class="line">        printJobDataMap(jobDetail.getJobDataMap());</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;jobDetail info end\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取 Trigger 内容</span></span><br><span class="line">        log.info(<span class="string">&quot;trigger info start&quot;</span>);</span><br><span class="line">        <span class="type">TriggerKey</span> <span class="variable">triggerKey</span> <span class="operator">=</span> context.getTrigger().getKey();</span><br><span class="line">        log.info(<span class="string">&quot;trigger name:&#123;&#125;&quot;</span>, triggerKey.getName());</span><br><span class="line">        log.info(<span class="string">&quot;trigger group:&#123;&#125;&quot;</span>, triggerKey.getGroup());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// JobDataMap</span></span><br><span class="line">        printJobDataMap(context.getTrigger().getJobDataMap());</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;trigger info end\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 其他内容</span></span><br><span class="line">        log.info(<span class="string">&quot;other info start&quot;</span>);</span><br><span class="line">        log.info(<span class="string">&quot;当前任务执行时间:&#123;&#125;&quot;</span>, DateUtil.format(context.getFireTime(), DatePattern.NORM_DATETIME_PATTERN));</span><br><span class="line">        log.info(<span class="string">&quot;下一次任务执行时间:&#123;&#125;&quot;</span>, DateUtil.format(context.getNextFireTime(), DatePattern.NORM_DATETIME_PATTERN));</span><br><span class="line">        log.info(<span class="string">&quot;other info end\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;job 过程:&#123;&#125;&quot;</span>, DateUtil.format(<span class="keyword">new</span> <span class="title class_">Date</span>(), DatePattern.NORM_DATETIME_PATTERN));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">printJobDataMap</span><span class="params">(JobDataMap jobDataMap)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;JobData=&gt;msg:&#123;&#125;&quot;</span>, jobDataMap.getString(<span class="string">&quot;msg&quot;</span>));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">data</span> <span class="operator">=</span> jobDataMap.get(<span class="string">&quot;data&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (Objects.nonNull(data) &amp;&amp; data <span class="keyword">instanceof</span> HelloJobData) &#123;</span><br><span class="line">            <span class="type">HelloJobData</span> <span class="variable">jobData</span> <span class="operator">=</span> (HelloJobData) data;</span><br><span class="line">            log.info(<span class="string">&quot;JobData=&gt;data:&#123;&#125;&quot;</span>, JSONUtil.toJsonStr(jobData));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">05:00:20.002 [DefaultQuartzScheduler_QuartzSchedulerThread] INFO com.laolang.jx.job.HelloJob - 初始化 job</span><br><span class="line">05:00:20.003 [DefaultQuartzScheduler_Worker-2] DEBUG org.quartz.core.JobRunShell - Calling execute on job job-group-hello.job-hello</span><br><span class="line">05:00:20.003 [DefaultQuartzScheduler_QuartzSchedulerThread] DEBUG org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers</span><br><span class="line">05:00:20.003 [DefaultQuartzScheduler_Worker-2] INFO com.laolang.jx.job.HelloJob - jobDetail info start</span><br><span class="line">05:00:20.003 [DefaultQuartzScheduler_Worker-2] INFO com.laolang.jx.job.HelloJob - jobDetail 信息:名称:job-hello</span><br><span class="line">05:00:20.003 [DefaultQuartzScheduler_Worker-2] INFO com.laolang.jx.job.HelloJob - jobDetail 信息:组名称:job-group-hello</span><br><span class="line">05:00:20.003 [DefaultQuartzScheduler_Worker-2] INFO com.laolang.jx.job.HelloJob - jobDetail 信息:任务类com.laolang.jx.job.HelloJob</span><br><span class="line">05:00:20.003 [DefaultQuartzScheduler_Worker-2] INFO com.laolang.jx.job.HelloJob - JobData=&gt;msg:hello job</span><br><span class="line">05:00:20.003 [DefaultQuartzScheduler_Worker-2] INFO com.laolang.jx.job.HelloJob - JobData=&gt;data:&#123;&quot;username&quot;:&quot;laolang&quot;,&quot;role&quot;:&quot;admin&quot;&#125;</span><br><span class="line">05:00:20.003 [DefaultQuartzScheduler_Worker-2] INFO com.laolang.jx.job.HelloJob - jobDetail info end</span><br><span class="line"></span><br><span class="line">05:00:20.003 [DefaultQuartzScheduler_Worker-2] INFO com.laolang.jx.job.HelloJob - trigger info start</span><br><span class="line">05:00:20.003 [DefaultQuartzScheduler_Worker-2] INFO com.laolang.jx.job.HelloJob - trigger name:trigger-hello</span><br><span class="line">05:00:20.003 [DefaultQuartzScheduler_Worker-2] INFO com.laolang.jx.job.HelloJob - trigger group:trigger-group-hello</span><br><span class="line">05:00:20.003 [DefaultQuartzScheduler_Worker-2] INFO com.laolang.jx.job.HelloJob - JobData=&gt;msg:hello job</span><br><span class="line">05:00:20.003 [DefaultQuartzScheduler_Worker-2] INFO com.laolang.jx.job.HelloJob - JobData=&gt;data:&#123;&quot;username&quot;:&quot;laolang&quot;,&quot;role&quot;:&quot;admin&quot;&#125;</span><br><span class="line">05:00:20.003 [DefaultQuartzScheduler_Worker-2] INFO com.laolang.jx.job.HelloJob - trigger info end</span><br><span class="line"></span><br><span class="line">05:00:20.003 [DefaultQuartzScheduler_Worker-2] INFO com.laolang.jx.job.HelloJob - other info start</span><br><span class="line">05:00:20.003 [DefaultQuartzScheduler_Worker-2] INFO com.laolang.jx.job.HelloJob - 当前任务执行时间:2024-08-17 05:00:20</span><br><span class="line">05:00:20.004 [DefaultQuartzScheduler_Worker-2] INFO com.laolang.jx.job.HelloJob - 下一次任务执行时间:2024-08-17 05:00:25</span><br><span class="line">05:00:20.004 [DefaultQuartzScheduler_Worker-2] INFO com.laolang.jx.job.HelloJob - other info end</span><br><span class="line"></span><br><span class="line">05:00:20.004 [DefaultQuartzScheduler_Worker-2] INFO com.laolang.jx.job.HelloJob - job 过程:2024-08-17 05:00:20</span><br></pre></td></tr></table></figure>

<h1 id="Job-状态"><a href="#Job-状态" class="headerlink" title="Job 状态"></a>Job 状态</h1><p>有状态的 Job 可以理解为多次 Job 调用期间, 可以持有一些状态信息, 这些状态信息村粗在 <code>JobDataMap</code> 中, 有状态的 Job 可以添加 <code>@PersistJobDataAfterExecution</code> 注解<br>默认 Job 无状态, 每次调用都会创建一个新的 <code>JobDataMap</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.job.HelloJob;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.job.HelloJobData;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.quartz.CronScheduleBuilder;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobBuilder;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobDataMap;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobDetail;</span><br><span class="line"><span class="keyword">import</span> org.quartz.Scheduler;</span><br><span class="line"><span class="keyword">import</span> org.quartz.SchedulerException;</span><br><span class="line"><span class="keyword">import</span> org.quartz.Trigger;</span><br><span class="line"><span class="keyword">import</span> org.quartz.TriggerBuilder;</span><br><span class="line"><span class="keyword">import</span> org.quartz.impl.StdSchedulerFactory;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">QuartzHelloApp</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SchedulerException &#123;</span><br><span class="line">        <span class="type">Scheduler</span> <span class="variable">scheduler</span> <span class="operator">=</span> StdSchedulerFactory.getDefaultScheduler();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 任务参数</span></span><br><span class="line">        <span class="type">JobDataMap</span> <span class="variable">jobDataMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JobDataMap</span>();</span><br><span class="line">        jobDataMap.put(<span class="string">&quot;count&quot;</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">JobDetail</span> <span class="variable">jobDetail</span> <span class="operator">=</span> JobBuilder.newJob(HelloJob.class)</span><br><span class="line">                <span class="comment">// 任务参数</span></span><br><span class="line">                .usingJobData(jobDataMap)</span><br><span class="line">                .withIdentity(<span class="string">&quot;job-hello&quot;</span>, <span class="string">&quot;job-group-hello&quot;</span>)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="type">Trigger</span> <span class="variable">trigger</span> <span class="operator">=</span> TriggerBuilder.newTrigger()</span><br><span class="line">                .withIdentity(<span class="string">&quot;trigger-hello&quot;</span>, <span class="string">&quot;trigger-group-hello&quot;</span>)</span><br><span class="line">                .startNow()</span><br><span class="line">                .withSchedule(CronScheduleBuilder.cronSchedule(<span class="string">&quot;0/5 * * * * ?&quot;</span>))</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        scheduler.scheduleJob(jobDetail, trigger);</span><br><span class="line">        scheduler.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.job;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.date.DatePattern;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.date.DateUtil;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.quartz.Job;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobDataMap;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobDetail;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionContext;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionException;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobKey;</span><br><span class="line"><span class="keyword">import</span> org.quartz.PersistJobDataAfterExecution;</span><br><span class="line"></span><br><span class="line"><span class="meta">@PersistJobDataAfterExecution</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloJob</span> <span class="keyword">implements</span> <span class="title class_">Job</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">HelloJob</span><span class="params">()</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;初始化 job&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">execute</span><span class="params">(JobExecutionContext context)</span> <span class="keyword">throws</span> JobExecutionException &#123;</span><br><span class="line">        <span class="type">JobDetail</span> <span class="variable">jobDetail</span> <span class="operator">=</span> context.getJobDetail();</span><br><span class="line">        <span class="comment">// JobDataMap</span></span><br><span class="line">        <span class="type">JobDataMap</span> <span class="variable">jobDataMap</span> <span class="operator">=</span> jobDetail.getJobDataMap();</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> jobDataMap.getInt(<span class="string">&quot;count&quot;</span>);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;jobDetail info end\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;job 过程:&#123;&#125;&quot;</span>, DateUtil.format(<span class="keyword">new</span> <span class="title class_">Date</span>(), DatePattern.NORM_DATETIME_PATTERN));</span><br><span class="line">        log.info(<span class="string">&quot;job count:&#123;&#125;&quot;</span>, count);</span><br><span class="line"></span><br><span class="line">        jobDataMap.put(<span class="string">&quot;count&quot;</span>, count + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">05:10:10.070 [DefaultQuartzScheduler_Worker-1] INFO com.laolang.jx.job.HelloJob - job 过程:2024-08-17 05:10:10</span><br><span class="line">05:10:10.070 [DefaultQuartzScheduler_Worker-1] INFO com.laolang.jx.job.HelloJob - job count:0</span><br><span class="line">05:10:15.012 [DefaultQuartzScheduler_QuartzSchedulerThread] DEBUG org.quartz.simpl.PropertySettingJobFactory - Producing instance of Job &#x27;job-group-hello.job-hello&#x27;, class=com.laolang.jx.job.HelloJob</span><br><span class="line">05:10:15.012 [DefaultQuartzScheduler_QuartzSchedulerThread] INFO com.laolang.jx.job.HelloJob - 初始化 job</span><br><span class="line">05:10:15.012 [DefaultQuartzScheduler_Worker-2] DEBUG org.quartz.core.JobRunShell - Calling execute on job job-group-hello.job-hello</span><br><span class="line">05:10:15.012 [DefaultQuartzScheduler_Worker-2] INFO com.laolang.jx.job.HelloJob - jobDetail info end</span><br><span class="line"></span><br><span class="line">05:10:15.012 [DefaultQuartzScheduler_QuartzSchedulerThread] DEBUG org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers</span><br><span class="line">05:10:15.013 [DefaultQuartzScheduler_Worker-2] INFO com.laolang.jx.job.HelloJob - job 过程:2024-08-17 05:10:15</span><br><span class="line">05:10:15.013 [DefaultQuartzScheduler_Worker-2] INFO com.laolang.jx.job.HelloJob - job count:1</span><br><span class="line">05:10:20.014 [DefaultQuartzScheduler_QuartzSchedulerThread] DEBUG org.quartz.simpl.PropertySettingJobFactory - Producing instance of Job &#x27;job-group-hello.job-hello&#x27;, class=com.laolang.jx.job.HelloJob</span><br><span class="line">05:10:20.014 [DefaultQuartzScheduler_QuartzSchedulerThread] INFO com.laolang.jx.job.HelloJob - 初始化 job</span><br><span class="line">05:10:20.014 [DefaultQuartzScheduler_Worker-3] DEBUG org.quartz.core.JobRunShell - Calling execute on job job-group-hello.job-hello</span><br><span class="line">05:10:20.014 [DefaultQuartzScheduler_Worker-3] INFO com.laolang.jx.job.HelloJob - jobDetail info end</span><br><span class="line"></span><br><span class="line">05:10:20.015 [DefaultQuartzScheduler_QuartzSchedulerThread] DEBUG org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers</span><br><span class="line">05:10:20.015 [DefaultQuartzScheduler_Worker-3] INFO com.laolang.jx.job.HelloJob - job 过程:2024-08-17 05:10:20</span><br><span class="line">05:10:20.015 [DefaultQuartzScheduler_Worker-3] INFO com.laolang.jx.job.HelloJob - job count:2</span><br></pre></td></tr></table></figure>

<h1 id="trigger"><a href="#trigger" class="headerlink" title="trigger"></a>trigger</h1><p><img src="/images/2024-09-22-quartz-base/001.png"></p>
<h1 id="cron-表达式"><a href="#cron-表达式" class="headerlink" title="cron 表达式"></a>cron 表达式</h1><h2 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h2><ol>
<li>秒 </li>
<li>分钟 </li>
<li>小时 </li>
<li>月中的天 </li>
<li>月</li>
<li>周中的天</li>
<li>年</li>
</ol>
<h2 id="各部分取值范围"><a href="#各部分取值范围" class="headerlink" title="各部分取值范围"></a>各部分取值范围</h2><table>
<thead>
<tr>
<th>字段</th>
<th>是否必填</th>
<th>允许值</th>
<th>运行的特殊字符</th>
</tr>
</thead>
<tbody><tr>
<td>秒</td>
<td>是</td>
<td>0-59</td>
<td><code>,</code> <code>-</code> <code>*</code>  <code>/</code></td>
</tr>
<tr>
<td>分</td>
<td>是</td>
<td>0-59</td>
<td><code>,</code> <code>-</code> <code>*</code>  <code>/</code></td>
</tr>
<tr>
<td>小时</td>
<td>是</td>
<td>0-23</td>
<td><code>,</code> <code>-</code> <code>*</code>  <code>/</code></td>
</tr>
<tr>
<td>日</td>
<td>是</td>
<td>1-31</td>
<td><code>,</code> <code>-</code> <code>*</code>  <code>/</code> <code>?</code> <code>L</code> <code>W</code> <code>C</code></td>
</tr>
<tr>
<td>月</td>
<td>是</td>
<td>1-12或者 JAN-DEC</td>
<td><code>,</code> <code>*</code>  <code>/</code></td>
</tr>
<tr>
<td>周</td>
<td>是</td>
<td>1-7或者 SUN-SAT</td>
<td><code>,</code> <code>-</code> <code>*</code>  <code>/</code> <code>L</code> <code>#</code> <code>C</code></td>
</tr>
<tr>
<td>年</td>
<td>否</td>
<td>不写或者 1970-2099</td>
<td><code>,</code> <code>-</code> <code>*</code> <code>/</code></td>
</tr>
</tbody></table>
<h2 id="特殊符号含义"><a href="#特殊符号含义" class="headerlink" title="特殊符号含义"></a>特殊符号含义</h2><table>
<thead>
<tr>
<th align="center">特殊符号</th>
<th align="center">含义</th>
<th align="center">解释说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">*</td>
<td align="center">表示匹配该域的任意值</td>
<td align="center">如果在 Minutes 域使用 * , 则表示每分钟都会触发事件。</td>
</tr>
<tr>
<td align="center">,</td>
<td align="center">表示列出枚举值</td>
<td align="center">如果在Hours 域中使用 9,10 则表示上午9点和10点会出发事件。</td>
</tr>
<tr>
<td align="center">-</td>
<td align="center">表示范围</td>
<td align="center">如果在 Seconds 域中使用 5-8 ，则表示 5秒、6秒、7秒、8秒 时间点会触发事件</td>
</tr>
<tr>
<td align="center">&#x2F;</td>
<td align="center">表示起始时间开始触发，然后每隔固定时间触发一次</td>
<td align="center">如果在 Seconds 域中使用 6&#x2F;10 ，则表示从06秒开始，每10秒执行一次，即：会在 06,16,26,36,56时间点触发事件，也就是说：在 Seconds 域中配置 6&#x2F;10 和 配置 06,16,26,36,56 效果一样</td>
</tr>
<tr>
<td align="center">?</td>
<td align="center">只能用在DayofMonth和DayofWeek两个域。它也匹配域的任意值，但实际不会。因为DayofMonth和DayofWeek会相互影响。（可以理解成是 * 的第二种特殊写法）</td>
<td align="center">例如：15 30 12 9 * ? ，表示的是每月9号的中午12:30:15发工资，此时 DayofWeek 这个域就要用 ? 而不能用 *（表示每周每天，而我们只要9号一天）</td>
</tr>
<tr>
<td align="center">L</td>
<td align="center">表示最后Last，只能出现在 DayofWeek 和 DayofMonth 域。</td>
<td align="center">① 用在DayofMonth 域中（直接写L），可以指定一个月的最后一天；② 用在 DayofWeek 域中指定当月最后一个星期X（比如：2L指本月最后一个星期二）</td>
</tr>
<tr>
<td align="center">W</td>
<td align="center">表示有效工作日(周一到周五),只能出现在DayofMonth域，系统将在离指定日期的最近的有效工作日触发事件</td>
<td align="center">例如：在 DayofMonth 使用5W，如果5日是星期六，则将在最近的工作日：星期五，即4日触发。如果5日是星期天，则在6日(周一)触发；如果5日在星期一到星期五中的一天，则就在5日触发。另外一点，W的最近寻找不会跨过月份 。</td>
</tr>
<tr>
<td align="center">LW</td>
<td align="center">这两个字符可以连用，表示在某个月最后一个工作日，即当月最后一个星期五。</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">C</td>
<td align="center">代表“Calendar”的意思。但是没发现加C和不加C的区别。</td>
<td align="center">例如：15 30 12 9 * ?，用9和9C的效果一样。</td>
</tr>
<tr>
<td align="center">#</td>
<td align="center">用于确定每个月第几个星期几，只能出现在DayofWeek域。</td>
<td align="center">比如，4#2，表示某月的第二个星期三（4代表星期三，2代表第几个）。例如：15 30 12 ? * 4#2表示：每月第二个星期三的12:30:15秒执行</td>
</tr>
</tbody></table>
<h1 id="quartz-properties"><a href="#quartz-properties" class="headerlink" title="quartz.properties"></a>quartz.properties</h1><h2 id="默认配置"><a href="#默认配置" class="headerlink" title="默认配置"></a>默认配置</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment">#============================================================================</span></span><br><span class="line"><span class="comment"># Configure Main Scheduler Properties 调度器属性</span></span><br><span class="line"><span class="comment">#============================================================================</span></span><br><span class="line"><span class="comment"># 在集群中每个实例都必须有一个唯一的instanceId，但是应该有一个相同的instanceName【非必须】</span></span><br><span class="line"><span class="attr">org.quartz.scheduler.instanceName</span>: <span class="string">DefaultQuartzScheduler</span></span><br><span class="line"><span class="comment"># Scheduler实例ID，全局唯一，【默认值NON_CLUSTERED】，或者可以使用“SYS_PROP”通过系统属性设置id。【非必须】</span></span><br><span class="line"><span class="attr">org.quartz.scheduler.instanceId</span> = <span class="string">AUTO</span></span><br><span class="line"></span><br><span class="line"><span class="attr">org.quartz.scheduler.rmi.export</span>: <span class="string">false</span></span><br><span class="line"><span class="attr">org.quartz.scheduler.rmi.proxy</span>: <span class="string">false</span></span><br><span class="line"><span class="attr">org.quartz.scheduler.wrapJobExecutionInUserTransaction</span>: <span class="string">false</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#============================================================================</span></span><br><span class="line"><span class="comment"># 线程池属性</span></span><br><span class="line"><span class="comment">#============================================================================</span></span><br><span class="line"><span class="comment"># 自带的线程池</span></span><br><span class="line"><span class="attr">org.quartz.threadPool.class</span>: <span class="string">org.quartz.simpl.SimpleThreadPool</span></span><br><span class="line"><span class="comment"># 处理 job 线程的个数</span></span><br><span class="line"><span class="attr">org.quartz.threadPool.threadCount</span>: <span class="string">10</span></span><br><span class="line"><span class="comment"># 线程优先级</span></span><br><span class="line"><span class="attr">org.quartz.threadPool.threadPriority</span>: <span class="string">5</span></span><br><span class="line"><span class="attr">org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread</span>: <span class="string">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">org.quartz.jobStore.misfireThreshold</span>: <span class="string">60000</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 作业存储设置</span></span><br><span class="line"><span class="attr">org.quartz.jobStore.class</span>: <span class="string">org.quartz.simpl.RAMJobStore</span></span><br></pre></td></tr></table></figure>

<h2 id="一个示例"><a href="#一个示例" class="headerlink" title="一个示例"></a>一个示例</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Default Properties file for use by StdSchedulerFactory</span></span><br><span class="line"><span class="comment"># to create a Quartz Scheduler Instance, if a different</span></span><br><span class="line"><span class="comment"># properties file is not explicitly specified.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># ===========================================================================</span></span><br><span class="line"><span class="comment"># Configure Main Scheduler Properties 调度器属性</span></span><br><span class="line"><span class="comment"># ===========================================================================</span></span><br><span class="line"><span class="attr">org.quartz.scheduler.instanceName</span>: <span class="string">DefaultQuartzScheduler</span></span><br><span class="line"><span class="comment">#org.quartz.scheduler.instanceid:AUTO</span></span><br><span class="line"><span class="attr">org.quartz.scheduler.rmi.export</span>: <span class="string">false</span></span><br><span class="line"><span class="attr">org.quartz.scheduler.rmi.proxy</span>: <span class="string">false</span></span><br><span class="line"><span class="attr">org.quartz.scheduler.wrapJobExecutionInUserTransaction</span>: <span class="string">false</span></span><br><span class="line"><span class="comment"># ===========================================================================  </span></span><br><span class="line"><span class="comment"># Configure ThreadPool 线程池属性  </span></span><br><span class="line"><span class="comment"># ===========================================================================</span></span><br><span class="line"><span class="comment">#线程池的实现类（一般使用SimpleThreadPool即可满足几乎所有用户的需求）</span></span><br><span class="line"><span class="attr">org.quartz.threadPool.class</span>: <span class="string">org.quartz.simpl.SimpleThreadPool</span></span><br><span class="line"><span class="comment">#指定线程数，至少为1（无默认值）(一般设置为1-100直接的整数合适)</span></span><br><span class="line"><span class="attr">org.quartz.threadPool.threadCount</span>: <span class="string">10</span></span><br><span class="line"><span class="comment">#设置线程的优先级（最大为java.lang.Thread.MAX_PRIORITY 10，最小为Thread.MIN_PRIORITY 1，默认为5）</span></span><br><span class="line"><span class="attr">org.quartz.threadPool.threadPriority</span>: <span class="string">5</span></span><br><span class="line"><span class="comment">#设置SimpleThreadPool的一些属性</span></span><br><span class="line"><span class="comment">#设置是否为守护线程</span></span><br><span class="line"><span class="comment">#org.quartz.threadpool.makethreadsdaemons = false</span></span><br><span class="line"><span class="comment">#org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread: true</span></span><br><span class="line"><span class="comment">#org.quartz.threadpool.threadsinheritgroupofinitializingthread=false</span></span><br><span class="line"><span class="comment">#线程前缀默认值是：[Scheduler Name]_Worker</span></span><br><span class="line"><span class="comment">#org.quartz.threadpool.threadnameprefix=swhJobThead;</span></span><br><span class="line"><span class="comment"># 配置全局监听(TriggerListener,JobListener) 则应用程序可以接收和执行 预定的事件通知</span></span><br><span class="line"><span class="comment"># ===========================================================================</span></span><br><span class="line"><span class="comment"># Configuring a Global TriggerListener 配置全局的Trigger监听器</span></span><br><span class="line"><span class="comment"># MyTriggerListenerClass 类必须有一个无参数的构造函数，和 属性的set方法，目前2.2.x只支持原始数据类型的值（包括字符串）</span></span><br><span class="line"><span class="comment"># ===========================================================================</span></span><br><span class="line"><span class="comment">#org.quartz.triggerListener.NAME.class = com.swh.MyTriggerListenerClass</span></span><br><span class="line"><span class="comment">#org.quartz.triggerListener.NAME.propName = propValue</span></span><br><span class="line"><span class="comment">#org.quartz.triggerListener.NAME.prop2Name = prop2Value</span></span><br><span class="line"><span class="comment"># ===========================================================================</span></span><br><span class="line"><span class="comment"># Configuring a Global JobListener 配置全局的Job监听器</span></span><br><span class="line"><span class="comment"># MyJobListenerClass 类必须有一个无参数的构造函数，和 属性的set方法，目前2.2.x只支持原始数据类型的值（包括字符串）</span></span><br><span class="line"><span class="comment"># ===========================================================================</span></span><br><span class="line"><span class="comment">#org.quartz.jobListener.NAME.class = com.swh.MyJobListenerClass</span></span><br><span class="line"><span class="comment">#org.quartz.jobListener.NAME.propName = propValue</span></span><br><span class="line"><span class="comment">#org.quartz.jobListener.NAME.prop2Name = prop2Value</span></span><br><span class="line"><span class="comment"># ===========================================================================  </span></span><br><span class="line"><span class="comment"># Configure JobStore 存储调度信息（工作，触发器和日历等）</span></span><br><span class="line"><span class="comment"># ===========================================================================</span></span><br><span class="line"><span class="comment"># 信息保存时间 默认值60秒</span></span><br><span class="line"><span class="attr">org.quartz.jobStore.misfireThreshold</span>: <span class="string">60000</span></span><br><span class="line"><span class="comment">#保存job和Trigger的状态信息到内存中的类</span></span><br><span class="line"><span class="attr">org.quartz.jobStore.class</span>: <span class="string">org.quartz.simpl.RAMJobStore</span></span><br><span class="line"><span class="comment"># ===========================================================================  </span></span><br><span class="line"><span class="comment"># Configure SchedulerPlugins 插件属性 配置</span></span><br><span class="line"><span class="comment"># ===========================================================================</span></span><br><span class="line"><span class="comment"># 自定义插件  </span></span><br><span class="line"><span class="comment">#org.quartz.plugin.NAME.class = com.swh.MyPluginClass</span></span><br><span class="line"><span class="comment">#org.quartz.plugin.NAME.propName = propValue</span></span><br><span class="line"><span class="comment">#org.quartz.plugin.NAME.prop2Name = prop2Value</span></span><br><span class="line"><span class="comment">#配置trigger执行历史日志（可以看到类的文档和参数列表）</span></span><br><span class="line"><span class="attr">org.quartz.plugin.triggHistory.class</span> = <span class="string">org.quartz.plugins.history.LoggingTriggerHistoryPlugin  </span></span><br><span class="line"><span class="attr">org.quartz.plugin.triggHistory.triggerFiredMessage</span> = <span class="string">Trigger &#123;1&#125;.&#123;0&#125; fired job &#123;6&#125;.&#123;5&#125; at: &#123;4, date, HH:mm:ss MM/dd/yyyy&#125;  </span></span><br><span class="line"><span class="attr">org.quartz.plugin.triggHistory.triggerCompleteMessage</span> = <span class="string">Trigger &#123;1&#125;.&#123;0&#125; completed firing job &#123;6&#125;.&#123;5&#125; at &#123;4, date, HH:mm:ss MM/dd/yyyy&#125; with resulting trigger instruction code: &#123;9&#125;  </span></span><br><span class="line"><span class="comment">#配置job调度插件  quartz_jobs(jobs and triggers内容)的XML文档  </span></span><br><span class="line"><span class="comment">#加载 Job 和 Trigger 信息的类   （1.8之前用：org.quartz.plugins.xml.JobInitializationPlugin）</span></span><br><span class="line"><span class="attr">org.quartz.plugin.jobInitializer.class</span> = <span class="string">org.quartz.plugins.xml.XMLSchedulingDataProcessorPlugin</span></span><br><span class="line"><span class="comment">#指定存放调度器(Job 和 Trigger)信息的xml文件，默认是classpath下quartz_jobs.xml</span></span><br><span class="line"><span class="attr">org.quartz.plugin.jobInitializer.fileNames</span> = <span class="string">my_quartz_job2.xml  </span></span><br><span class="line"><span class="comment">#org.quartz.plugin.jobInitializer.overWriteExistingJobs = false  </span></span><br><span class="line"><span class="attr">org.quartz.plugin.jobInitializer.failOnFileNotFound</span> = <span class="string">true  </span></span><br><span class="line"><span class="comment">#自动扫描任务单并发现改动的时间间隔,单位为秒</span></span><br><span class="line"><span class="attr">org.quartz.plugin.jobInitializer.scanInterval</span> = <span class="string">10</span></span><br><span class="line"><span class="comment">#覆盖任务调度器中同名的jobDetail,避免只修改了CronExpression所造成的不能重新生效情况</span></span><br><span class="line"><span class="attr">org.quartz.plugin.jobInitializer.wrapInUserTransaction</span> = <span class="string">false</span></span><br><span class="line"><span class="comment"># ===========================================================================  </span></span><br><span class="line"><span class="comment"># Sample configuration of ShutdownHookPlugin  ShutdownHookPlugin插件的配置样例</span></span><br><span class="line"><span class="comment"># ===========================================================================</span></span><br><span class="line"><span class="comment">#org.quartz.plugin.shutdownhook.class = \org.quartz.plugins.management.ShutdownHookPlugin</span></span><br><span class="line"><span class="comment">#org.quartz.plugin.shutdownhook.cleanShutdown = true</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Configure RMI Settings 远程服务调用配置</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#如果你想quartz-scheduler出口本身通过RMI作为服务器，然后设置“出口”标志true(默认值为false)。</span></span><br><span class="line"><span class="comment">#org.quartz.scheduler.rmi.export = false</span></span><br><span class="line"><span class="comment">#主机上rmi注册表(默认值localhost)</span></span><br><span class="line"><span class="comment">#org.quartz.scheduler.rmi.registryhost = localhost</span></span><br><span class="line"><span class="comment">#注册监听端口号（默认值1099）</span></span><br><span class="line"><span class="comment">#org.quartz.scheduler.rmi.registryport = 1099</span></span><br><span class="line"><span class="comment">#创建rmi注册，false/never：如果你已经有一个在运行或不想进行创建注册</span></span><br><span class="line"><span class="comment"># true/as_needed:第一次尝试使用现有的注册，然后再回来进行创建</span></span><br><span class="line"><span class="comment"># always:先进行创建一个注册，然后再使用回来使用注册</span></span><br><span class="line"><span class="comment">#org.quartz.scheduler.rmi.createregistry = never</span></span><br><span class="line"><span class="comment">#Quartz Scheduler服务端端口，默认是随机分配RMI注册表</span></span><br><span class="line"><span class="comment">#org.quartz.scheduler.rmi.serverport = 1098</span></span><br><span class="line"><span class="comment">#true:链接远程服务调度(客户端),这个也要指定registryhost和registryport，默认为false</span></span><br><span class="line"><span class="comment"># 如果export和proxy同时指定为true，则export的设置将被忽略</span></span><br><span class="line"><span class="comment">#org.quartz.scheduler.rmi.proxy = false</span></span><br></pre></td></tr></table></figure>


<h1 id="监听器"><a href="#监听器" class="headerlink" title="监听器"></a>监听器</h1><p>全局监听器与非全局监听器的区别: 全局监听器能否接受所有的 job&#x2F;trigger 的事件通知, 非全局监听器只能接受到在其上注册的 job 或 trigger 事件</p>
<h2 id="JobListener"><a href="#JobListener" class="headerlink" title="JobListener"></a>JobListener</h2><h3 id="接口含义"><a href="#接口含义" class="headerlink" title="接口含义"></a>接口含义</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionContext;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">JobListener</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取该 JobListener 名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    String <span class="title function_">getName</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Scheduler 在 JobDetail 将要被执行时调用这个方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">jobToBeExecuted</span><span class="params">(JobExecutionContext context)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Scheduler在 JobDetail 即将被执行, 但又被 TriggerListener 否决时调用该方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">jobExecutionVetoed</span><span class="params">(JobExecutionContext context)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Scheduler 在 JobDetail 被执行后调用这个方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">jobWasExecuted</span><span class="params">(JobExecutionContext context,</span></span><br><span class="line"><span class="params">                        JobExecutionException jobException)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><h4 id="JobListener-1"><a href="#JobListener-1" class="headerlink" title="JobListener"></a>JobListener</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.job;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionContext;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionException;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobListener;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloJobListener</span> <span class="keyword">implements</span> <span class="title class_">JobListener</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;HelloJobListener&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">jobToBeExecuted</span><span class="params">(JobExecutionContext context)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;HelloJobListener jobToBeExecuted&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">jobExecutionVetoed</span><span class="params">(JobExecutionContext context)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;HelloJobListener jobExecutionVetoed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">jobWasExecuted</span><span class="params">(JobExecutionContext context, JobExecutionException jobException)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;HelloJobListener jobWasExecuted&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="定义-job"><a href="#定义-job" class="headerlink" title="定义 job"></a>定义 job</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.job.HelloJob;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.job.HelloJobListener;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.quartz.CronScheduleBuilder;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobBuilder;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobDataMap;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobDetail;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobKey;</span><br><span class="line"><span class="keyword">import</span> org.quartz.Scheduler;</span><br><span class="line"><span class="keyword">import</span> org.quartz.SchedulerException;</span><br><span class="line"><span class="keyword">import</span> org.quartz.Trigger;</span><br><span class="line"><span class="keyword">import</span> org.quartz.TriggerBuilder;</span><br><span class="line"><span class="keyword">import</span> org.quartz.impl.StdSchedulerFactory;</span><br><span class="line"><span class="keyword">import</span> org.quartz.impl.matchers.KeyMatcher;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">QuartzHelloApp</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SchedulerException &#123;</span><br><span class="line">        <span class="type">Scheduler</span> <span class="variable">scheduler</span> <span class="operator">=</span> StdSchedulerFactory.getDefaultScheduler();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 任务参数</span></span><br><span class="line">        <span class="type">JobDataMap</span> <span class="variable">jobDataMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JobDataMap</span>();</span><br><span class="line">        jobDataMap.put(<span class="string">&quot;count&quot;</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">JobDetail</span> <span class="variable">jobDetail</span> <span class="operator">=</span> JobBuilder.newJob(HelloJob.class)</span><br><span class="line">                <span class="comment">// 任务参数</span></span><br><span class="line">                .usingJobData(jobDataMap)</span><br><span class="line">                .withIdentity(<span class="string">&quot;job-hello&quot;</span>, <span class="string">&quot;job-group-hello&quot;</span>)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="type">Trigger</span> <span class="variable">trigger</span> <span class="operator">=</span> TriggerBuilder.newTrigger()</span><br><span class="line">                .withIdentity(<span class="string">&quot;trigger-hello&quot;</span>, <span class="string">&quot;trigger-group-hello&quot;</span>)</span><br><span class="line">                .startNow()</span><br><span class="line">                .withSchedule(CronScheduleBuilder.cronSchedule(<span class="string">&quot;0/5 * * * * ?&quot;</span>))</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        scheduler.scheduleJob(jobDetail, trigger);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 全局监听</span></span><br><span class="line">        <span class="comment">// scheduler.getListenerManager().addJobListener(new HelloJobListener(), EverythingMatcher.allJobs());</span></span><br><span class="line">        scheduler.getListenerManager().addJobListener(<span class="keyword">new</span> <span class="title class_">HelloJobListener</span>(), KeyMatcher.keyEquals(JobKey.jobKey(<span class="string">&quot;job-hello&quot;</span>, <span class="string">&quot;job-group-hello&quot;</span>)));</span><br><span class="line"></span><br><span class="line">        scheduler.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="运行效果-1"><a href="#运行效果-1" class="headerlink" title="运行效果"></a>运行效果</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">07:35:05.007 [DefaultQuartzScheduler_QuartzSchedulerThread] INFO com.laolang.jx.job.HelloJob - 初始化 job</span><br><span class="line">07:35:05.007 [DefaultQuartzScheduler_Worker-3] INFO com.laolang.jx.job.HelloJobListener - HelloJobListener jobToBeExecuted</span><br><span class="line">07:35:05.008 [DefaultQuartzScheduler_Worker-3] DEBUG org.quartz.core.JobRunShell - Calling execute on job job-group-hello.job-hello</span><br><span class="line">07:35:05.008 [DefaultQuartzScheduler_Worker-3] INFO com.laolang.jx.job.HelloJob - jobDetail info end</span><br><span class="line"></span><br><span class="line">07:35:05.008 [DefaultQuartzScheduler_QuartzSchedulerThread] DEBUG org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers</span><br><span class="line">07:35:05.008 [DefaultQuartzScheduler_Worker-3] INFO com.laolang.jx.job.HelloJob - job 过程:2024-08-17 07:35:05</span><br><span class="line">07:35:05.008 [DefaultQuartzScheduler_Worker-3] INFO com.laolang.jx.job.HelloJob - job count:2</span><br><span class="line">07:35:05.008 [DefaultQuartzScheduler_Worker-3] INFO com.laolang.jx.job.HelloJobListener - HelloJobListener jobWasExecuted</span><br></pre></td></tr></table></figure>

<h2 id="TriggerListener"><a href="#TriggerListener" class="headerlink" title="TriggerListener"></a>TriggerListener</h2><h3 id="接口含义-1"><a href="#接口含义-1" class="headerlink" title="接口含义"></a>接口含义</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.job;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.quartz.Trigger.CompletedExecutionInstruction;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">TriggerListener</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取触发器的名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    String <span class="title function_">getName</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当与监听器相关联的Trigger被触发，Job上的execute()方法将被执行时，Scheduler就调用该方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">triggerFired</span><span class="params">(Trigger trigger, JobExecutionContext context)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在 Trigger 触发后，Job 将要被执行时由 Scheduler 调用这个方法。</span></span><br><span class="line"><span class="comment">     * TriggerListener 给了一个选择去否决 Job 的执行。假如这个方法返回 true，</span></span><br><span class="line"><span class="comment">     * 这个 Job 将不会为此次 Trigger 触发而得到执行</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">vetoJobExecution</span><span class="params">(Trigger trigger, JobExecutionContext context)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Scheduler 调用这个方法是在 Trigger 错过触发时。</span></span><br><span class="line"><span class="comment">     * 你应该关注此方法中持续时间长的逻辑：</span></span><br><span class="line"><span class="comment">     * 在出现许多错过触发的 Trigger 时，长逻辑会导致骨牌效应。你应当保持这上方法尽量的小</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">triggerMisfired</span><span class="params">(Trigger trigger)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Trigger 被触发并且完成了 Job 的执行时，Scheduler 调用这个方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">triggerComplete</span><span class="params">(Trigger trigger, JobExecutionContext context,</span></span><br><span class="line"><span class="params">                         CompletedExecutionInstruction triggerInstructionCode)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="SchedulerListener"><a href="#SchedulerListener" class="headerlink" title="SchedulerListener"></a>SchedulerListener</h2><h3 id="接口含义-2"><a href="#接口含义-2" class="headerlink" title="接口含义"></a>接口含义</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.job;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">SchedulerListener</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用于部署JobDetail时调用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">jobScheduled</span><span class="params">(Trigger trigger)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用于卸载JobDetail时调用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">jobUnscheduled</span><span class="params">(TriggerKey triggerKey)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当一个 Trigger 来到了再也不会触发的状态时调用这个方法。</span></span><br><span class="line"><span class="comment">     * 除非这个 Job 已设置成了持久性，否则它就会从 Scheduler 中移除。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">triggerFinalized</span><span class="params">(Trigger trigger)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Scheduler 调用这个方法是发生在一个 Trigger 或 Trigger 组被暂停时。</span></span><br><span class="line"><span class="comment">     * 假如是 Trigger 组的话，triggerName 参数将为 null。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">triggerPaused</span><span class="params">(TriggerKey triggerKey)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">triggersPaused</span><span class="params">(String triggerGroup)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Scheduler 调用这个方法是发生成一个 Trigger 或 Trigger 组从暂停中恢复时。</span></span><br><span class="line"><span class="comment">     * 假如是 Trigger 组的话，假如是 Trigger 组的话，triggerName 参数将为 null。参数将为 null。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">triggerResumed</span><span class="params">(TriggerKey triggerKey)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">triggersResumed</span><span class="params">(String triggerGroup)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">jobAdded</span><span class="params">(JobDetail jobDetail)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">jobDeleted</span><span class="params">(JobKey jobKey)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当一个或一组 JobDetail 暂停时调用这个方法。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">jobPaused</span><span class="params">(JobKey jobKey)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">jobsPaused</span><span class="params">(String jobGroup)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当一个或一组 Job 从暂停上恢复时调用这个方法。假如是一个 Job 组，jobName 参数将为 null。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">jobResumed</span><span class="params">(JobKey jobKey)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">jobsResumed</span><span class="params">(String jobGroup)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在 Scheduler 的正常运行期间产生一个严重错误时调用这个方法。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">schedulerError</span><span class="params">(String msg, SchedulerException cause)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当Scheduler处于StandBy模式时，调用该方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">schedulerInStandbyMode</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当Scheduler 开启时，调用该方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">schedulerStarted</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">schedulerStarting</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当Scheduler停止时，调用该方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">schedulerShutdown</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">schedulerShuttingdown</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当Scheduler中的数据被清除时，调用该方法。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">schedulingDataCleared</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="spring-boot-整合-quartz"><a href="#spring-boot-整合-quartz" class="headerlink" title="spring boot 整合 quartz"></a>spring boot 整合 quartz</h1><h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h2><h3 id="job-1"><a href="#job-1" class="headerlink" title="job"></a>job</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.modules.system.job;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.date.DatePattern;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.date.DateUtil;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.modules.system.logic.SysDictLogic;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionContext;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.quartz.QuartzJobBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SystemJob</span> <span class="keyword">extends</span> <span class="title class_">QuartzJobBean</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> SysDictLogic sysDictLogic;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">JOB_NAME</span> <span class="operator">=</span> <span class="string">&quot;quartz_jobdetail_system&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">JOB_GROUP</span> <span class="operator">=</span> <span class="string">&quot;quartz_jobdetail_system_group&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">executeInternal</span><span class="params">(JobExecutionContext context)</span> <span class="keyword">throws</span> JobExecutionException &#123;</span><br><span class="line">        log.info(<span class="string">&quot;job 过程:&#123;&#125;&quot;</span>, DateUtil.format(<span class="keyword">new</span> <span class="title class_">Date</span>(), DatePattern.NORM_DATETIME_PATTERN));</span><br><span class="line">        sysDictLogic.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="quartz-配置"><a href="#quartz-配置" class="headerlink" title="quartz 配置"></a>quartz 配置</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.config.quartz;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.modules.system.job.SystemJob;</span><br><span class="line"><span class="keyword">import</span> org.quartz.CronScheduleBuilder;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobBuilder;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobDetail;</span><br><span class="line"><span class="keyword">import</span> org.quartz.Trigger;</span><br><span class="line"><span class="keyword">import</span> org.quartz.TriggerBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JxQuartzConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> JobDetail <span class="title function_">systemJobDetail</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> JobBuilder.newJob(SystemJob.class)</span><br><span class="line">                .withIdentity(SystemJob.JOB_NAME, SystemJob.JOB_GROUP)</span><br><span class="line">                .storeDurably()</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Trigger <span class="title function_">systemJobTrigger</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> TriggerBuilder.newTrigger().forJob(systemJobDetail())</span><br><span class="line">                .withIdentity(<span class="string">&quot;quartz_jobdetail_system_trigger&quot;</span>)</span><br><span class="line">                .withSchedule(CronScheduleBuilder.cronSchedule(<span class="string">&quot;0/5 * * * * ?&quot;</span>))</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="运行效果-2"><a href="#运行效果-2" class="headerlink" title="运行效果"></a>运行效果</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12:29:40.009 [ quartzScheduler_Worker-2] INFO  com.laolang.jx.modules.system.job.SystemJob.executeInternal(SystemJob.java:26) - job 过程:2024-08-17 12:29:40</span><br><span class="line">12:29:40.011 [ quartzScheduler_Worker-2] INFO  com.laolang.jx.modules.system.logic.SysDictLogic.save(SysDictLogic.java:11) - sysdict save</span><br><span class="line">12:29:45.008 [ quartzScheduler_Worker-3] INFO  com.laolang.jx.modules.system.job.SystemJob.executeInternal(SystemJob.java:26) - job 过程:2024-08-17 12:29:45</span><br><span class="line">12:29:45.008 [ quartzScheduler_Worker-3] INFO  com.laolang.jx.modules.system.logic.SysDictLogic.save(SysDictLogic.java:11) - sysdict save</span><br><span class="line">12:29:50.018 [ quartzScheduler_Worker-4] INFO  com.laolang.jx.modules.system.job.SystemJob.executeInternal(SystemJob.java:26) - job 过程:2024-08-17 12:29:50</span><br><span class="line">12:29:50.018 [ quartzScheduler_Worker-4] INFO  com.laolang.jx.modules.system.logic.SysDictLogic.save(SysDictLogic.java:11) - sysdict save</span><br></pre></td></tr></table></figure>


<h2 id="数据库持久化"><a href="#数据库持久化" class="headerlink" title="数据库持久化"></a>数据库持久化</h2><h3 id="数据库脚本"><a href="#数据库脚本" class="headerlink" title="数据库脚本"></a>数据库脚本</h3><p>查看 <code>quartz</code> 版本,我的版本是 <code>2.3.2</code></p>
<p><img src="/images/2024-09-22-quartz-base/002.png"></p>
<p>可以在 jar 包中获取脚本: org&#x2F;quartz&#x2F;impl&#x2F;jdbcjobstore&#x2F;tables_mysql_innodb.sql</p>
<h3 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8092</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">context-path:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">jx-boot</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driverClassName:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/quartz_study?useUnicode=true&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=true&amp;serverTimezone=GMT%2B8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="comment"># 初始连接数</span></span><br><span class="line">    <span class="attr">initialSize:</span> <span class="number">5</span></span><br><span class="line">    <span class="comment"># 最小连接池数量</span></span><br><span class="line">    <span class="attr">minIdle:</span> <span class="number">10</span></span><br><span class="line">    <span class="comment"># 最大连接池数量</span></span><br><span class="line">    <span class="attr">maxActive:</span> <span class="number">20</span></span><br><span class="line">    <span class="comment"># 配置获取连接等待超时的时间</span></span><br><span class="line">    <span class="attr">maxWait:</span> <span class="number">60000</span></span><br><span class="line">    <span class="comment"># 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒</span></span><br><span class="line">    <span class="attr">timeBetweenEvictionRunsMillis:</span> <span class="number">60000</span></span><br><span class="line">    <span class="comment"># 配置一个连接在池中最小生存的时间，单位是毫秒</span></span><br><span class="line">    <span class="attr">minEvictableIdleTimeMillis:</span> <span class="number">300000</span></span><br><span class="line">    <span class="comment"># 配置一个连接在池中最大生存的时间，单位是毫秒</span></span><br><span class="line">    <span class="attr">maxEvictableIdleTimeMillis:</span> <span class="number">900000</span></span><br><span class="line">    <span class="comment"># 配置检测连接是否有效</span></span><br><span class="line">    <span class="attr">validationQuery:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">    <span class="attr">testWhileIdle:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">testOnBorrow:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">testOnReturn:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">webStatFilter:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">statViewServlet:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="comment"># 设置白名单，不填则允许所有访问</span></span><br><span class="line">      <span class="attr">allow:</span></span><br><span class="line">      <span class="attr">url-pattern:</span> <span class="string">/druid/*</span></span><br><span class="line">      <span class="comment"># 控制台管理用户名和密码</span></span><br><span class="line">      <span class="attr">login-username:</span> <span class="string">ruoyi</span></span><br><span class="line">      <span class="attr">login-password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">filter:</span></span><br><span class="line">      <span class="attr">stat:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="comment"># 慢SQL记录</span></span><br><span class="line">        <span class="attr">log-slow-sql:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">slow-sql-millis:</span> <span class="number">1000</span></span><br><span class="line">        <span class="attr">merge-sql:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">wall:</span></span><br><span class="line">        <span class="attr">config:</span></span><br><span class="line">          <span class="attr">multi-statement-allow:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#属性配置文档 https://github.com/quartz-scheduler/quartz/blob/master/docs/configuration.adoc</span></span><br><span class="line">  <span class="attr">quartz:</span></span><br><span class="line">    <span class="comment">#持久化到数据库方式, 另一种是 memory, 即内存</span></span><br><span class="line">    <span class="attr">job-store-type:</span> <span class="string">jdbc</span></span><br><span class="line">    <span class="comment">#quartz调度程序属性</span></span><br><span class="line">    <span class="attr">properties:</span></span><br><span class="line">      <span class="attr">org:</span></span><br><span class="line">        <span class="attr">quartz:</span></span><br><span class="line">          <span class="attr">scheduler:</span></span><br><span class="line">            <span class="comment">#调度任务实例名称，如果是集群则每个实例必须是相同的名字</span></span><br><span class="line">            <span class="attr">instanceName:</span> <span class="string">SmallGrainScheduler</span></span><br><span class="line">            <span class="comment">#实例ID，对于集群中工作的所有调度器必须是唯一的，如果值是AUTO则会自动生成，如果希望值来自系统属性则设置为SYS_PROP</span></span><br><span class="line">            <span class="attr">instanceId:</span> <span class="string">AUTO</span></span><br><span class="line">          <span class="attr">jobStore:</span></span><br><span class="line">            <span class="comment">#job、traggers、calendars持久化实现类，默认：org.quartz.simpl.RAMJobStore</span></span><br><span class="line">            <span class="attr">class:</span> <span class="string">org.quartz.impl.jdbcjobstore.JobStoreTX</span></span><br><span class="line">            <span class="comment">#调度程序下次触发时间的毫秒数，默认是60000（60 seconds）</span></span><br><span class="line">            <span class="attr">misfireThreshold:</span> <span class="number">60000</span></span><br><span class="line">            <span class="comment">#驱动程序代理类</span></span><br><span class="line">            <span class="attr">driverDelegateClass:</span> <span class="string">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</span></span><br><span class="line">            <span class="comment">#表名前缀，默认：QRTZ_</span></span><br><span class="line">            <span class="attr">tablePrefix:</span> <span class="string">qrtz_</span></span><br><span class="line">            <span class="comment">#默认：false，设置JDBCJobStore的JobDataMaps中存储的是字符串类型的key-value,否则为 true</span></span><br><span class="line">            <span class="attr">useProperties:</span> <span class="literal">false</span></span><br><span class="line">            <span class="comment">#设置为true以启用集群功能，如果Quartz的多个实例使用同一组数据库表，则必须将此属性设置为true,否则将遇到严重的破话，默认：false</span></span><br><span class="line">            <span class="attr">isClustered:</span> <span class="literal">true</span></span><br><span class="line">            <span class="comment">#设置此实例与集群的其它实例&quot;checks-in&quot;的频率（毫秒），影响实例的检测失败速率，默认：15000</span></span><br><span class="line">            <span class="attr">clusterCheckinInterval:</span> <span class="number">10000</span></span><br><span class="line">          <span class="comment">#配置线程池</span></span><br><span class="line">          <span class="attr">threadPool:</span></span><br><span class="line">            <span class="comment">#要使用的线程池实心名称，与Quartz自带的线程池应该可以满足几乎每个用户的需求，它的行为非常简单，而且已经过很好的测试，它提供了一个固定大小的线程池，这些线程在调度程序的生存期内&quot;生存&quot;</span></span><br><span class="line">            <span class="attr">class:</span> <span class="string">org.quartz.simpl.SimpleThreadPool</span></span><br><span class="line">            <span class="comment">#线程数</span></span><br><span class="line">            <span class="attr">threadCount:</span> <span class="number">10</span></span><br><span class="line">            <span class="comment">#线程优先级，可以是Thread.MIN_PRIORITY（1）和Thread.MAX_PRIORITY（10）之间的数据，默认是：Thread.NORM_PRIORITY (5)</span></span><br><span class="line">            <span class="attr">threadPriority:</span> <span class="number">5</span></span><br><span class="line">            <span class="comment">#可以设置为true以将线程池中的线程创建为守护程序线程。默认：false</span></span><br><span class="line">            <span class="attr">makeThreadsDaemons:</span> <span class="literal">false</span></span><br><span class="line">            <span class="comment">#线程池中线程名的前缀,默认：MyScheduler_Worker</span></span><br><span class="line">            <span class="attr">threadNamePrefix:</span> <span class="string">MyScheduler_Worker</span></span><br><span class="line">            <span class="comment">#默认true</span></span><br><span class="line">            <span class="attr">threadsInheritGroupOfInitializingThread:</span> <span class="literal">true</span></span><br><span class="line">            <span class="comment">#默认true</span></span><br><span class="line">            <span class="attr">threadsInheritContextClassLoaderOfInitializingThread:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">jdbc:</span></span><br><span class="line">      <span class="comment"># always 会清空数据并重新建表</span></span><br><span class="line">      <span class="attr">initialize-schema:</span> <span class="string">never</span></span><br><span class="line">      <span class="comment">#初始化数据库脚本路径，默认使用classpath:org/quartz/impl/jdbcjobstore/tables_@@platform@@.sql路径下的脚本</span></span><br><span class="line">      <span class="comment"># schema: classpath:tables_mysql.sql</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">config:</span> <span class="string">classpath:log4j2.xml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath*:mapping/**/*Mapper.xml</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.laolang.jx.**.entity</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span></span><br><span class="line">      <span class="attr">select-strategy:</span> <span class="string">not_empty</span></span><br><span class="line">      <span class="attr">insert-strategy:</span> <span class="string">not_empty</span></span><br><span class="line">      <span class="attr">update-strategy:</span> <span class="string">not_empty</span></span><br><span class="line">      <span class="attr">refresh-mapper:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">db-type:</span> <span class="string">mysql</span></span><br><span class="line">      <span class="attr">logic-delete-field:</span> <span class="string">deleted</span></span><br><span class="line">      <span class="attr">logic-delete-value:</span> <span class="number">1</span> <span class="comment"># 逻辑已删除值(默认为 1)</span></span><br><span class="line">      <span class="attr">logic-not-delete-value:</span> <span class="number">0</span> <span class="comment"># 逻辑未删除值(默认为 0)</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">cache-enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure>

<h3 id="job-配置"><a href="#job-配置" class="headerlink" title="job 配置"></a>job 配置</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.config.quartz;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.modules.system.job.SystemJob;</span><br><span class="line"><span class="keyword">import</span> org.quartz.CronScheduleBuilder;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobBuilder;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobDetail;</span><br><span class="line"><span class="keyword">import</span> org.quartz.Trigger;</span><br><span class="line"><span class="keyword">import</span> org.quartz.TriggerBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JxQuartzConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> JobDetail <span class="title function_">systemJobDetail</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> JobBuilder.newJob(SystemJob.class)</span><br><span class="line">                <span class="comment">// 任务名称和任务分组, 组成任务唯一标识</span></span><br><span class="line">                .withIdentity(SystemJob.JOB_NAME, SystemJob.JOB_GROUP)</span><br><span class="line">                <span class="comment">// 是否持久化</span></span><br><span class="line">                .storeDurably()</span><br><span class="line">                <span class="comment">// 任务描述</span></span><br><span class="line">                .withDescription(<span class="string">&quot;一个测试任务&quot;</span>)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Trigger <span class="title function_">systemJobTrigger</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> TriggerBuilder.newTrigger().forJob(systemJobDetail())</span><br><span class="line">                .withIdentity(<span class="string">&quot;quartz_jobdetail_system_trigger&quot;</span>)</span><br><span class="line">                .withSchedule(CronScheduleBuilder.cronSchedule(<span class="string">&quot;0/5 * * * * ?&quot;</span>))</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="数据库内容"><a href="#数据库内容" class="headerlink" title="数据库内容"></a>数据库内容</h3><p><img src="/images/2024-09-22-quartz-base/003.png"><br><img src="/images/2024-09-22-quartz-base/004.png"><br><img src="/images/2024-09-22-quartz-base/005.png"></p>
]]></content>
      <categories>
        <category>java</category>
        <category>任务调度</category>
        <category>quartz</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>任务调度</tag>
        <tag>quartz</tag>
      </tags>
  </entry>
  <entry>
    <title>spring boot 在 linux 下的启动</title>
    <url>/2024/09/22/run-spring-boot-with-linux/</url>
    <content><![CDATA[<h1 id="准备一个项目"><a href="#准备一个项目" class="headerlink" title="准备一个项目"></a>准备一个项目</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-pc:sbin$ curl http://localhost:8092/system/menu/list</span><br><span class="line">&#123;&quot;profile&quot;:&quot;dev&quot;,&quot;id&quot;:1001,&quot;title&quot;:&quot;菜单管理&quot;&#125;</span><br></pre></td></tr></table></figure>

<h1 id="项目基本配置"><a href="#项目基本配置" class="headerlink" title="项目基本配置"></a>项目基本配置</h1><h2 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h2><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">thresh-boot</span></span><br></pre></td></tr></table></figure>
<h2 id="application-dev-yml"><a href="#application-dev-yml" class="headerlink" title="application-dev.yml"></a>application-dev.yml</h2><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8092</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">context-path:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">config:</span> <span class="string">classpath:log4j2-dev.xml</span></span><br></pre></td></tr></table></figure>

<h2 id="application-prod-yml"><a href="#application-prod-yml" class="headerlink" title="application-prod.yml"></a>application-prod.yml</h2><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8094</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">context-path:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">config:</span> <span class="string">classpath:log4j2-prod.xml</span></span><br></pre></td></tr></table></figure>

<h2 id="log4j2-dev-xml"><a href="#log4j2-dev-xml" class="headerlink" title="log4j2-dev.xml"></a>log4j2-dev.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Configuration</span> <span class="attr">status</span>=<span class="string">&quot;WARN&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;LOG_HOME&quot;</span>&gt;</span>../logs/thresh-boot<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;FILE_NAME&quot;</span>&gt;</span>app<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;thresh.level&quot;</span>&gt;</span>debug<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Appenders</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">&quot;Console&quot;</span> <span class="attr">target</span>=<span class="string">&quot;SYSTEM_OUT&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;%d&#123;HH:mm:ss.SSS&#125; [%25t] %-5level %l - %msg%n&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">RollingRandomAccessFile</span> <span class="attr">name</span>=<span class="string">&quot;RollingRandomAccessFile&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;$&#123;LOG_HOME&#125;/$&#123;FILE_NAME&#125;.log&quot;</span></span></span><br><span class="line"><span class="tag">                                 <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;LOG_HOME&#125;/$&#123;date:yyyy-MM-dd&#125;/$&#123;FILE_NAME&#125;-%d&#123;yyyy-MM-dd&#125;-%i.log&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;%d&#123;HH:mm:ss.SSS&#125; [%25t] %-5level %l - %msg%n&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span> <span class="attr">interval</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">&quot;10 MB&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span> <span class="attr">max</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RollingRandomAccessFile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Appenders</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Loggers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">&quot;$&#123;thresh.level&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;Console&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;RollingRandomAccessFile&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;com.laolang&quot;</span> <span class="attr">level</span>=<span class="string">&quot;$&#123;thresh.level&#125;&quot;</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;Console&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;RollingRandomAccessFile&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="log4j2-prod-xml"><a href="#log4j2-prod-xml" class="headerlink" title="log4j2-prod.xml"></a>log4j2-prod.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Configuration</span> <span class="attr">status</span>=<span class="string">&quot;WARN&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 这里用全路径 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;LOG_HOME&quot;</span>&gt;</span>/home/laolang/tmp/thresh-boot/logs/thresh-boot/<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;FILE_NAME&quot;</span>&gt;</span>app<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 改为 info 级别 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;thresh.level&quot;</span>&gt;</span>info<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Appenders</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">&quot;Console&quot;</span> <span class="attr">target</span>=<span class="string">&quot;SYSTEM_OUT&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;%d&#123;HH:mm:ss.SSS&#125; [%t] %-5level %l - %msg%n&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">RollingRandomAccessFile</span> <span class="attr">name</span>=<span class="string">&quot;RollingRandomAccessFile&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;$&#123;LOG_HOME&#125;/$&#123;FILE_NAME&#125;.log&quot;</span></span></span><br><span class="line"><span class="tag">                                 <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;LOG_HOME&#125;/$&#123;date:yyyy-MM-dd&#125;/$&#123;FILE_NAME&#125;-%d&#123;yyyy-MM-dd&#125;-%i.log&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;%d&#123;HH:mm:ss.SSS&#125; [%t] %-5level %l - %msg%n&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span> <span class="attr">interval</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">&quot;10 MB&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span> <span class="attr">max</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RollingRandomAccessFile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Appenders</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Loggers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">&quot;$&#123;thresh.level&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;Console&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;RollingRandomAccessFile&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">&quot;com.laolang&quot;</span> <span class="attr">level</span>=<span class="string">&quot;$&#123;thresh.level&#125;&quot;</span> <span class="attr">additivity</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;Console&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;RollingRandomAccessFile&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>


<h1 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h1><h2 id="打包命令"><a href="#打包命令" class="headerlink" title="打包命令"></a>打包命令</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mvn clean package -Dmaven.test.skip=true</span><br></pre></td></tr></table></figure>

<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.laolang.thresh<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thresh-boot<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">profiles.active</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">profiles.active</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>prod<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">profiles.active</span>&gt;</span>prod<span class="tag">&lt;/<span class="name">profiles.active</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources/<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-compiler-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;maven.compiler.source&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;maven.compiler.target&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>$&#123;project.build.sourceEncoding&#125;<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;springboot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">goal</span>&gt;</span> <span class="comment">&lt;!-- 将引入的 jar 打入其中 --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="打包后本地启动"><a href="#打包后本地启动" class="headerlink" title="打包后本地启动"></a>打包后本地启动</h1><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-pc:thresh-boot$ tree</span><br><span class="line">.</span><br><span class="line">├── conf</span><br><span class="line">│   ├── application-prod.yml</span><br><span class="line">│   ├── application.yml</span><br><span class="line">│   └── log4j2-prod.xml</span><br><span class="line">├── sbin</span><br><span class="line">│   └── thresh.sh</span><br><span class="line">└── thresh-boot.jar</span><br><span class="line"></span><br><span class="line">3 directories, 5 files</span><br><span class="line">laolang@laolang-pc:thresh-boot$ </span><br></pre></td></tr></table></figure>

<h2 id="thresh-sh"><a href="#thresh-sh" class="headerlink" title="thresh.sh"></a>thresh.sh</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">不添加此行，远程执行脚本环境变量不生效</span></span><br><span class="line">source /etc/profile</span><br><span class="line">source /home/laolang/.bashrc</span><br><span class="line">APP_NAME=thresh-boot.jar</span><br><span class="line">OPTIONS=&quot;-Dspring.profiles.active=prod \</span><br><span class="line">        -Dspring.config.additional-location=file:///home/laolang/tmp/thresh-boot/conf/application.yml,file:///home/laolang/tmp/thresh-boot/conf/application-prod.yml \</span><br><span class="line">		-Dlogging.config=file:///home/laolang/tmp/thresh-boot/conf/log4j2-prod.xml&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用说明</span></span><br><span class="line">usage() &#123;</span><br><span class="line">	echo &quot;Usage: sh 执行脚本.sh [start|stop|restart|status]&quot;</span><br><span class="line">	exit 1</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查程序是否在运行</span></span><br><span class="line">is_exist()&#123;</span><br><span class="line">	pid=$(pgrep -f $APP_NAME)</span><br><span class="line"><span class="meta prompt_">	# </span><span class="language-bash">如果不存在返回1，存在返回0</span></span><br><span class="line">	if [ -z &quot;$&#123;pid&#125;&quot; ]; then</span><br><span class="line">		return 1</span><br><span class="line">	else</span><br><span class="line">		return 0</span><br><span class="line">	fi</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动方法</span></span><br><span class="line">start()&#123;</span><br><span class="line">	is_exist</span><br><span class="line">	if [ $? -eq &quot;0&quot; ]; then</span><br><span class="line">		echo &quot;$&#123;APP_NAME&#125; is already running. pid=$&#123;pid&#125;. &quot;</span><br><span class="line">	else</span><br><span class="line">		nohup java -jar $OPTIONS  ../$APP_NAME &gt; /dev/null 2&gt;&amp;1 &amp;</span><br><span class="line">		echo &quot;$&#123;APP_NAME&#125; is running...&quot;</span><br><span class="line">	fi</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">停止方法</span></span><br><span class="line">stop()&#123;</span><br><span class="line">	is_exist</span><br><span class="line">	if [ $? -eq &quot;0&quot; ]; then</span><br><span class="line">		kill -9 $pid</span><br><span class="line">		echo &quot;$&#123;APP_NAME&#125; is stoped&quot;</span><br><span class="line">	else</span><br><span class="line">		echo &quot;$&#123;APP_NAME&#125; is not running&quot;</span><br><span class="line">	fi</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">输出运行状态</span></span><br><span class="line">status()&#123;</span><br><span class="line">	is_exist</span><br><span class="line">	if [ $? -eq &quot;0&quot; ]; then</span><br><span class="line">		echo &quot;$&#123;APP_NAME&#125; is running. Pid is $&#123;pid&#125;&quot;</span><br><span class="line">	else</span><br><span class="line">		echo &quot;$&#123;APP_NAME&#125; is not running&quot;</span><br><span class="line">	fi</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启</span></span><br><span class="line">restart()&#123;</span><br><span class="line">	stop</span><br><span class="line">	start</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">根据输入参数，选择执行对应方法，不输入则执行使用说明</span></span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">	&quot;start&quot;)</span><br><span class="line">		start</span><br><span class="line">		;;</span><br><span class="line">	&quot;stop&quot;)</span><br><span class="line">		stop</span><br><span class="line">		;;</span><br><span class="line">	&quot;status&quot;)</span><br><span class="line">		status</span><br><span class="line">		;;</span><br><span class="line">	&quot;restart&quot;)</span><br><span class="line">		restart</span><br><span class="line">		;;</span><br><span class="line">	*)</span><br><span class="line">		usage</span><br><span class="line">		;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>

<h2 id="启动与测试"><a href="#启动与测试" class="headerlink" title="启动与测试"></a>启动与测试</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./thresh.sh restart &amp;&amp; tail -f ../logs/thresh-boot/app.log</span><br><span class="line">curl http://localhost:8094/system/menu/list</span><br></pre></td></tr></table></figure>

<p><img src="/images/2024-09-22-run-spring-boot-with-linux/001.png"></p>
]]></content>
      <categories>
        <category>java</category>
        <category>spring boot</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>spring boot</tag>
      </tags>
  </entry>
  <entry>
    <title>security 基操</title>
    <url>/2024/09/22/security-%E5%9F%BA%E6%93%8D/</url>
    <content><![CDATA[<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><p><a href="https://springdoc.cn/spring-security/">Spring Security 中文文档</a></p>
<p><a href="https://www.bilibili.com/video/BV14b4y1A7Wz">尚硅谷Java项目SpringSecurity+OAuth2权限管理实战教程</a><br><a href="https://www.bilibili.com/video/BV1mm4y1X7Hc">SpringSecurity框架教程-Spring Security+JWT实现项目级前端分离认证授权-挑战黑马&amp;尚硅谷</a></p>
<p><a href="https://blog.csdn.net/qq_44444470/article/details/133089941">SpringSecurity的默认Filter详解</a><br><a href="https://blog.csdn.net/qq_41879343/article/details/106121623">【SpringSecurity】Spring Security过滤器链</a></p>
<p><a href="https://blog.csdn.net/u012702547/article/details/107033269">一文搞定 Spring Security 异常处理机制！</a></p>
<p><a href="https://blog.csdn.net/qiaohao0206/article/details/125571568">SpringSecurity - WebSecurityConfigurerAdapter 过时问题</a><br><a href="https://blog.csdn.net/jhy17340226919/article/details/130299572">SpringSecurity中对接口进行匿名访问自定义@Anonymous注解</a><br><a href="https://blog.csdn.net/qq_28597959/article/details/114094758">【SpringSecurity】使用注解方式实现匿名访问</a><br><a href="https://blog.csdn.net/u011410254/article/details/127586555">Spring Boot 2.6以后版本优雅解决PatternsRequestCondition.getPatterns()“ because “this.condition“ is null问题</a></p>
<p><a href="https://blog.csdn.net/u012562943/category_8019251.html">权限系统设计</a><br><a href="https://blog.csdn.net/qq_37377082/article/details/117459588">多租户saas数据库表的实现</a></p>
<h1 id="git-仓库地址"><a href="#git-仓库地址" class="headerlink" title="git 仓库地址"></a>git 仓库地址</h1><p><a href="https://codeup.aliyun.com/6598525d04dde812d0509abd/virtual-machine/java/auth/security-study">https://codeup.aliyun.com/6598525d04dde812d0509abd/virtual-machine/java/auth/security-study</a></p>
<h1 id="Hello-World-搭建"><a href="#Hello-World-搭建" class="headerlink" title="Hello World 搭建"></a>Hello World 搭建</h1><h2 id="准备一个接口"><a href="#准备一个接口" class="headerlink" title="准备一个接口"></a>准备一个接口</h2><div class="tabs" id="controller"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="controller-1">controller</button><button type="button" class="tab " data-href="controller-2">logic</button></ul><div class="tab-contents"><div class="tab-item-content active" id="controller-1"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.modules.system.dict.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.framework.common.domain.R;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.modules.system.dict.logic.SysDictLogic;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.modules.system.dict.req.SysDictTypeListReq;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.modules.system.dict.rsp.SysDictTypeListRsp;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.tags.Tag;</span><br><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Tag(name = &quot;admin - 字典管理&quot;)</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;admin/system/dict&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysDictController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> SysDictLogic sysDictLogic;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;type/list&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;SysDictTypeListRsp&gt; <span class="title function_">typeList</span><span class="params">(<span class="meta">@RequestBody</span> SysDictTypeListReq req)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok(sysDictLogic.typeList(req));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;type/list2&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;SysDictTypeListRsp&gt; <span class="title function_">typeList</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok(sysDictLogic.typeList(<span class="keyword">new</span> <span class="title class_">SysDictTypeListReq</span>()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="controller-2"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.modules.system.dict.logic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.modules.system.dict.req.SysDictTypeListReq;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.modules.system.dict.rsp.SysDictTypeListRsp;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysDictLogic</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> SysDictTypeListRsp <span class="title function_">typeList</span><span class="params">(SysDictTypeListReq req)</span> &#123;</span><br><span class="line">        <span class="type">SysDictTypeListRsp</span> <span class="variable">rsp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysDictTypeListRsp</span>();</span><br><span class="line">        rsp.setId(<span class="number">1001L</span>);</span><br><span class="line">        rsp.setGroupCode(<span class="string">&quot;system&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> rsp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>

<p><img src="/images/2024-09-22-security-%E5%9F%BA%E6%93%8D/001.png"></p>
<h2 id="添加-Spring-Security-依赖"><a href="#添加-Spring-Security-依赖" class="headerlink" title="添加 Spring Security 依赖"></a>添加 Spring Security 依赖</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 如果使用 log4j2 , 则需要排除此依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="访问时的用户名和密码"><a href="#访问时的用户名和密码" class="headerlink" title="访问时的用户名和密码"></a>访问时的用户名和密码</h2><p>此时访问之前的接口需要输入用户名密码</p>
<p><img src="/images/2024-09-22-security-%E5%9F%BA%E6%93%8D/002.png"></p>
<p>用户名为 <code>user</code>, 密码可以在日志中查看, 搜索 <code>security password</code> 即可</p>
<p><img src="/images/2024-09-22-security-%E5%9F%BA%E6%93%8D/003.png"></p>
<h2 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h2><p>访问 <code>/logout</code> 接口即可退出</p>
<h2 id="流程解析"><a href="#流程解析" class="headerlink" title="流程解析"></a>流程解析</h2><h3 id="过滤器链"><a href="#过滤器链" class="headerlink" title="过滤器链"></a>过滤器链</h3><h4 id="如何查看默认的过滤器链"><a href="#如何查看默认的过滤器链" class="headerlink" title="如何查看默认的过滤器链"></a>如何查看默认的过滤器链</h4><p><code>security</code> 的原理就是一个过滤器链, 在 <code>org.springframework.security.web.FilterChainProxy</code> 的 <code>doFilterInternal</code> 方法中打一个断点, 可以看到默认的过滤器链</p>
<p><img src="/images/2024-09-22-security-%E5%9F%BA%E6%93%8D/004.png"></p>
<h4 id="各个过滤器的作用"><a href="#各个过滤器的作用" class="headerlink" title="各个过滤器的作用"></a>各个过滤器的作用</h4><p>有三个过滤器最为重要</p>
<ol>
<li><code>UsernamePasswordAuthenticationFilter</code> : 认证</li>
<li><code>ExceptionTranslationFilter</code> : 处理异常</li>
<li><code>FilterSecurityInterceptor</code> : 授权</li>
</ol>
<table>
<thead>
<tr>
<th>过滤器</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td><code>DisableEncodeUrlFilter</code></td>
<td>禁用URL重新编码的</td>
</tr>
<tr>
<td><code>WebAsyncManagerIntegrationFilter</code></td>
<td>此过滤器用于集成 <code>SecurityContext</code> 到 <code>Spring</code> 异步执行机制中的 <code>WebAsyncManager</code></td>
</tr>
<tr>
<td><code>SecurityContextPersistenceFilter</code></td>
<td><code>SecurityContextPersistenceFilter</code> 主要是使用 <code>SecurityContextRepository</code> 在 <code>session</code> 中保存或更新一个. <code>SecurityContext</code>，并将 <code>SecurityContext</code> 给以后的过滤器使用，来为后续 <code>filter</code> 建立所需的上下文。<code>SecurityContext</code> 中存储了当前用户的认证以及权限信息。</td>
</tr>
<tr>
<td><code>HeaderWriterFilter</code></td>
<td>向请求的 <code>Header</code> 中添加相应的信息,可在 <code>http</code> 标签内部使用 <code>security:headers</code> 来控制</td>
</tr>
<tr>
<td><code>CsrfFilter</code></td>
<td><code>csrf</code>又称跨域请求伪造，<code>SpringSecurity</code> 会对所有 <code>post</code> 请求验证是否包含系统生成的 <code>csrf</code> 的 <code>token</code> 信息，如果不包含，则报错。起到防止 <code>csrf</code> 攻击的效果。</td>
</tr>
<tr>
<td><code>LogoutFilter</code></td>
<td>匹配URL为 <code>/logout</code> 的请求，实现用户退出,清除认证信息。</td>
</tr>
<tr>
<td><strong><code>UsernamePasswordAuthenticationFilter</code></strong></td>
<td><strong>认证操作全靠这个过滤器，默认匹配URL为 <code>/login</code> 且必须为 <code>POST</code> 请求。</strong></td>
</tr>
<tr>
<td><code>DefaultLoginPageGeneratingFilter</code></td>
<td>如果没有在配置文件中指定认证页面，则由该过滤器生成一个默认认证页面。</td>
</tr>
<tr>
<td><code>DefaultLogoutPageGeneratingFilter</code></td>
<td>由此过滤器可以生产一个默认的退出登录页面</td>
</tr>
<tr>
<td><code>BasicAuthenticationFilter</code></td>
<td>此过滤器会自动解析HTTP请求中头部名字为 <code>Authentication</code>，且以 <code>Basic</code> 开头的头信息。</td>
</tr>
<tr>
<td><code>RequestCacheAwareFilter</code></td>
<td>通过 <code>HttpSessionRequestCache</code> 内部维护了一个 <code>RequestCache</code>，用于缓存 <code>HttpServletRequest</code></td>
</tr>
<tr>
<td><code>SecurityContextHolderAwareRequestFilter</code></td>
<td><code>针对ServletRequest</code> 进行了一次包装，使得 <code>request</code> 具有更加丰富的API</td>
</tr>
<tr>
<td><code>AnonymousAuthenticationFilter</code></td>
<td>当 <code>SecurityContextHolder</code> 中认证信息为空,则会创建一个匿名用户存入到 <code>SecurityContextHolder</code> 中。<code>spring security</code> 为了兼容未登录的访问，也走了一套认证流程，只不过是一个匿名的身份。</td>
</tr>
<tr>
<td><code>SessionManagementFilter</code></td>
<td><code>SecurityContextRepository</code> 限制同一用户开启多个会话的数量</td>
</tr>
<tr>
<td><strong><code>ExceptionTranslationFilter</code></strong></td>
<td><strong>异常转换过滤器位于整个 <code>springSecurityFilterChain</code> 的后方，用来转换整个链路中出现的异常</strong></td>
</tr>
<tr>
<td><strong><code>FilterSecurityInterceptor</code></strong></td>
<td><strong>获取所配置资源访问的授权信息，根据 <code>SecurityContextHolder</code> 中存储的用户信息来决定其是否有权限。</strong></td>
</tr>
</tbody></table>
<h3 id="认证流程"><a href="#认证流程" class="headerlink" title="认证流程"></a>认证流程</h3><h1 id="自定义认证"><a href="#自定义认证" class="headerlink" title="自定义认证"></a>自定义认证</h1><h2 id="UserDetails"><a href="#UserDetails" class="headerlink" title="UserDetails"></a>UserDetails</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.modules.auth.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.GrantedAuthority;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginUser</span> <span class="keyword">implements</span> <span class="title class_">UserDetails</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 权限集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Collection&lt;? <span class="keyword">extends</span> <span class="title class_">GrantedAuthority</span>&gt; getAuthorities() &#123;</span><br><span class="line">        <span class="keyword">return</span> Collections.emptyList();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 密码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否未过期</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isAccountNonExpired</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否未锁定</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isAccountNonLocked</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否过期</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isCredentialsNonExpired</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 账户是否可用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEnabled</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>java</category>
        <category>认证与授权</category>
        <category>spring security</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>认证与授权</tag>
        <tag>spring security</tag>
      </tags>
  </entry>
  <entry>
    <title>spring jdbc template 基本使用</title>
    <url>/2024/09/22/spring-jdbc-template-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="数据库脚本"><a href="#数据库脚本" class="headerlink" title="数据库脚本"></a>数据库脚本</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> sys_dict_type;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `sys_dict_type` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;字典名称&#x27;</span>,</span><br><span class="line">  `type` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;字典类型编码&#x27;</span>,</span><br><span class="line">  `group_code` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;字典分组 (system: 系统字典)&#x27;</span>,</span><br><span class="line">  `status` <span class="type">char</span>(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;状态 (0:正常 1:停用)&#x27;</span>,</span><br><span class="line">  `create_by` <span class="type">varchar</span>(<span class="number">150</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建人&#x27;</span>,</span><br><span class="line">  `create_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `update_by` <span class="type">varchar</span>(<span class="number">150</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新人&#x27;</span>,</span><br><span class="line">  `update_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  `remark` <span class="type">varchar</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;备注&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 COMMENT<span class="operator">=</span><span class="string">&#x27;系统字典类型表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> sys_dict_type_after;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `sys_dict_type_after` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;字典名称&#x27;</span>,</span><br><span class="line">  `type` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;字典类型编码&#x27;</span>,</span><br><span class="line">  `group_code` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;字典分组 (system: 系统字典)&#x27;</span>,</span><br><span class="line">  `status` <span class="type">char</span>(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;状态 (0:正常 1:停用)&#x27;</span>,</span><br><span class="line">  `create_by` <span class="type">varchar</span>(<span class="number">150</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建人&#x27;</span>,</span><br><span class="line">  `create_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `update_by` <span class="type">varchar</span>(<span class="number">150</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新人&#x27;</span>,</span><br><span class="line">  `update_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  `remark` <span class="type">varchar</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;备注&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 COMMENT<span class="operator">=</span><span class="string">&#x27;系统字典类型表&#x27;</span>;</span><br></pre></td></tr></table></figure>


<h2 id="pom"><a href="#pom" class="headerlink" title="pom"></a>pom</h2><figure class="highlight xml"><figcaption><span>linenums</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.laolang.sshschema<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc-hello<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>spring jdbc 使用<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven-compiler-plugin.version</span>&gt;</span>3.11.0<span class="tag">&lt;/<span class="name">maven-compiler-plugin.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven-surefire-plugin.version</span>&gt;</span>3.2.3<span class="tag">&lt;/<span class="name">maven-surefire-plugin.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- spring --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>5.3.31<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 数据库 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mysql-connector-j.version</span>&gt;</span>8.0.33<span class="tag">&lt;/<span class="name">mysql-connector-j.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">druid.version</span>&gt;</span>1.2.4<span class="tag">&lt;/<span class="name">druid.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 日志 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">logback.version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">logback.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 工具类库 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">lombok.version</span>&gt;</span>1.18.30<span class="tag">&lt;/<span class="name">lombok.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hutool.version</span>&gt;</span>5.8.11<span class="tag">&lt;/<span class="name">hutool.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">guava.version</span>&gt;</span>23.0<span class="tag">&lt;/<span class="name">guava.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commons-lang3.version</span>&gt;</span>3.12.0<span class="tag">&lt;/<span class="name">commons-lang3.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 测试相关 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">testng.version</span>&gt;</span>6.14.3<span class="tag">&lt;/<span class="name">testng.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-framework-bom<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- logback --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;logback.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 数据库 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql-connector-j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;druid.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 工具类库 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;lombok.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;hutool.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.guava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guava<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;guava.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-lang3.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- testng --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.testng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>testng<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;testng.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-compiler-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;maven.compiler.source&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;maven.compiler.target&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>$&#123;project.build.sourceEncoding&#125;<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-surefire-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">testFailureIgnore</span>&gt;</span>true<span class="tag">&lt;/<span class="name">testFailureIgnore</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">argLine</span>&gt;</span>-Dfile.encoding=UTF-8<span class="tag">&lt;/<span class="name">argLine</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">suiteXmlFiles</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">suiteXmlFile</span>&gt;</span>testng.xml<span class="tag">&lt;/<span class="name">suiteXmlFile</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">suiteXmlFiles</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="spring-配置"><a href="#spring-配置" class="headerlink" title="spring 配置"></a>spring 配置</h2><p><strong>spring-context.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:c</span>=<span class="string">&quot;http://www.springframework.org/schema/c&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:util</span>=<span class="string">&quot;http://www.springframework.org/schema/util&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.laolang&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;classpath:spring-public.xml&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;classpath:spring-jdbc.xml&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>spring-public.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:c</span>=<span class="string">&quot;http://www.springframework.org/schema/c&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:util</span>=<span class="string">&quot;http://www.springframework.org/schema/util&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 导入配置文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.context.support.PropertySourcesPlaceholderConfigurer&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 忽略没有找到的资源文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;ignoreResourceNotFound&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置资源文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;locations&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>classpath:properties/config.properties<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>classpath:properties/db.properties<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>spring-jdbc.xml</strong></p>
<figure class="highlight xml"><figcaption><span>linenums</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:c</span>=<span class="string">&quot;http://www.springframework.org/schema/c&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:util</span>=<span class="string">&quot;http://www.springframework.org/schema/util&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd&quot;</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="comment">&lt;!-- 配置 druid数据源 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span> <span class="attr">init-method</span>=<span class="string">&quot;init&quot;</span> <span class="attr">destroy-method</span>=<span class="string">&quot;close&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 基本属性 url、user、password --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.jdbcUrl&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.user&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 配置初始化大小、最小、最大 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minIdle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxActive&quot;</span> <span class="attr">value</span>=<span class="string">&quot;20&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 配置获取连接等待超时的时间 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxWait&quot;</span> <span class="attr">value</span>=<span class="string">&quot;60000&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;timeBetweenEvictionRunsMillis&quot;</span> <span class="attr">value</span>=<span class="string">&quot;60000&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minEvictableIdleTimeMillis&quot;</span> <span class="attr">value</span>=<span class="string">&quot;300000&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;validationQuery&quot;</span> <span class="attr">value</span>=<span class="string">&quot;SELECT &#x27;x&#x27;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;testWhileIdle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;testOnBorrow&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;testOnReturn&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 打开PSCache，并且指定每个连接上PSCache的大小 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;poolPreparedStatements&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolPreparedStatementPerConnectionSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;20&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;filters&quot;</span> <span class="attr">value</span>=<span class="string">&quot;stat&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置 jdbcTemplate --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;jdbcTemplate&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.core.JdbcTemplate&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 定义事务管理器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 声明式事务 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h2><figure class="highlight java"><figcaption><span>linenums</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.<span class="keyword">module</span>.system.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysDictType</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String type;</span><br><span class="line">    <span class="keyword">private</span> String groupCode;</span><br><span class="line">    <span class="keyword">private</span> String status;</span><br><span class="line">    <span class="keyword">private</span> String createBy;</span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line">    <span class="keyword">private</span> String updateBy;</span><br><span class="line">    <span class="keyword">private</span> LocalDateTime updateTime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="dao"><a href="#dao" class="headerlink" title="dao"></a>dao</h2><figure class="highlight java"><figcaption><span>linenums</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.<span class="keyword">module</span>.system.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.BeanPropertyRowMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.entity.SysDictType;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysDictTypeDao</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> SysDictType <span class="title function_">getById</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from sys_dict_type where id = ?&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate.queryForObject(sql, <span class="keyword">new</span> <span class="title class_">BeanPropertyRowMapper</span>&lt;&gt;(SysDictType.class), id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updateStatus</span><span class="params">(Long id, String status)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update sys_dict_type set status = ? where id = ?&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate.update(sql, status, id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="测试基类"><a href="#测试基类" class="headerlink" title="测试基类"></a>测试基类</h2><figure class="highlight java"><figcaption><span>linenums</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.test.base;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.testng.Assert.fail;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Predicate;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.ContextConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.testng.AbstractTestNGSpringContextTests;</span><br><span class="line"><span class="keyword">import</span> org.testng.Assert;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.io.FileUtil;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.StrUtil;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;基于 &lt;code&gt;spring-test&lt;/code&gt; 实现的测试基类&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@ContextConfiguration(locations = &#123; &quot;classpath:spring-context.xml&quot; &#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">AbstractSpringTest</span> <span class="keyword">extends</span> <span class="title class_">AbstractTestNGSpringContextTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Predicate&lt;String&gt; sqlPredicate = t -&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (StrUtil.isBlank(t)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StrUtil.startWith(t, <span class="string">&quot;--&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行初始化 sql</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">executeInitSqls</span><span class="params">(String initSqlPath)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            List&lt;String&gt; initSqls = FileUtil.readUtf8Lines(initSqlPath).stream().filter(sqlPredicate)</span><br><span class="line">                    .collect(Collectors.toList());</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; initSqls.size(); i++) &#123;</span><br><span class="line">                jdbcTemplate.execute(initSqls.get(i));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</span><br><span class="line">            throwable.printStackTrace();</span><br><span class="line">            fail(<span class="string">&quot;execute init sql failed&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 对比两个表的数据</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> acture         实际操作的表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> except         对比的表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> compareColumns 对比的字段列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">validTableData</span><span class="params">(String acture, String except, List&lt;String&gt; compareColumns)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">columns</span> <span class="operator">=</span> String.join(<span class="string">&quot;,&quot;</span>, compareColumns);</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        sb.append(<span class="string">&quot;select count(*) from ( select * from ( select &quot;</span>);</span><br><span class="line">        sb.append(columns);</span><br><span class="line">        sb.append(<span class="string">&quot; from sys_dict_type union all select &quot;</span>);</span><br><span class="line">        sb.append(columns);</span><br><span class="line">        sb.append(<span class="string">&quot; from sys_dict_type_after ) tbl group by &quot;</span>);</span><br><span class="line">        sb.append(columns);</span><br><span class="line">        sb.append(<span class="string">&quot; having count(*) = 1 order by id ) t&quot;</span>);</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">count</span> <span class="operator">=</span> jdbcTemplate.queryForObject(sb.toString(), Integer.class);</span><br><span class="line">        Assert.assertEquals(count.intValue(), <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h2><figure class="highlight java"><figcaption><span>linenums</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.<span class="keyword">module</span>.system.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.testng.Assert;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Lists;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.framework.common.util.JsonUtil;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.entity.SysDictType;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.test.base.AbstractSpringTest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysDictTypeDaoTest</span> <span class="keyword">extends</span> <span class="title class_">AbstractSpringTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SysDictTypeDao sysDictTypeDao;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TABLE_NAME</span> <span class="operator">=</span> <span class="string">&quot;sys_dict_type&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TABLE_AFTER_NAME</span> <span class="operator">=</span> <span class="string">&quot;sys_dict_type_after&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 对比字段列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> List&lt;String&gt; COMPARECOLUMNS = Lists.newArrayList(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;name&quot;</span>, <span class="string">&quot;type&quot;</span>, <span class="string">&quot;group_code&quot;</span>, <span class="string">&quot;status&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetById</span><span class="params">()</span> &#123;</span><br><span class="line">        executeInitSqls(<span class="string">&quot;data/sysdict/test_get_by_id.sql&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">SysDictType</span> <span class="variable">dictType</span> <span class="operator">=</span> sysDictTypeDao.getById(<span class="number">1L</span>);</span><br><span class="line">        Assert.assertNotNull(dictType);</span><br><span class="line">        log.info(<span class="string">&quot;dictType:&#123;&#125;&quot;</span>, JsonUtil.toJson(dictType));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdateStatus</span><span class="params">()</span> &#123;</span><br><span class="line">        executeInitSqls(<span class="string">&quot;data/sysdict/test_update_status.sql&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Long</span> <span class="variable">id</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">statusValue</span> <span class="operator">=</span> <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> sysDictTypeDao.updateStatus(id, statusValue);</span><br><span class="line">        Assert.assertEquals(count, <span class="number">1</span>);</span><br><span class="line">        <span class="type">SysDictType</span> <span class="variable">dictType</span> <span class="operator">=</span> sysDictTypeDao.getById(id);</span><br><span class="line">        Assert.assertEquals(dictType.getStatus(), statusValue);</span><br><span class="line"></span><br><span class="line">        validTableData(TABLE_NAME, TABLE_AFTER_NAME, COMPARECOLUMNS);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="测试脚本"><a href="#测试脚本" class="headerlink" title="测试脚本"></a>测试脚本</h2><p><strong>test_get_by_id.sql</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">truncate</span> sys_dict_type ;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> sys_dict_type (id, name, `type`, group_code, status, create_by, create_time, update_by, update_time, remark) <span class="keyword">VALUES</span>(<span class="number">1</span>, <span class="string">&#x27;用户性别&#x27;</span>, <span class="string">&#x27;gender&#x27;</span>, <span class="string">&#x27;system&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;superAdmin&#x27;</span>, <span class="string">&#x27;2023-12-19 02:47:48&#x27;</span>, <span class="string">&#x27;superAdmin&#x27;</span>, <span class="string">&#x27;2023-12-19 02:47:48&#x27;</span>, <span class="keyword">NULL</span>);</span><br></pre></td></tr></table></figure>

<p><strong>test_update_status.sql</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">truncate</span> sys_dict_type ;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> sys_dict_type (id, name, `type`, group_code, status, create_by, create_time, update_by, update_time, remark) <span class="keyword">VALUES</span>(<span class="number">1</span>, <span class="string">&#x27;用户性别&#x27;</span>, <span class="string">&#x27;gender&#x27;</span>, <span class="string">&#x27;system&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;superAdmin&#x27;</span>, <span class="string">&#x27;2023-12-19 02:47:48&#x27;</span>, <span class="string">&#x27;superAdmin&#x27;</span>, <span class="string">&#x27;2023-12-19 02:47:48&#x27;</span>, <span class="keyword">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">truncate</span> sys_dict_type_after ;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> sys_dict_type_after (id, name, `type`, group_code, status, create_by, create_time, update_by, update_time, remark) <span class="keyword">VALUES</span>(<span class="number">1</span>, <span class="string">&#x27;用户性别&#x27;</span>, <span class="string">&#x27;gender&#x27;</span>, <span class="string">&#x27;system&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;superAdmin&#x27;</span>, <span class="string">&#x27;2023-12-19 02:47:48&#x27;</span>, <span class="string">&#x27;superAdmin&#x27;</span>, <span class="string">&#x27;2023-12-19 02:47:48&#x27;</span>, <span class="keyword">NULL</span>);</span><br></pre></td></tr></table></figure>

<h2 id="测试说明"><a href="#测试说明" class="headerlink" title="测试说明"></a>测试说明</h2><p><code>AbstractSpringTest</code> 主要实现了两个功能</p>
<ul>
<li>运行初始化 sql</li>
<li>对比两个表的数据</li>
</ul>
<div class="note info no-icon simple"><p>后续的 <code>jdbc</code> 测试都是以上面的代码为模板修改的<br>只会贴出关键部分的代码和配置</p>
</div>



<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/luyaran/article/details/80928666">mysql使用技巧之比较两个表是否有不同的数据</a></p>
]]></content>
      <categories>
        <category>java</category>
        <category>ssm</category>
        <category>spring</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>spring</tag>
        <tag>ssm</tag>
      </tags>
  </entry>
  <entry>
    <title>shiro 基础</title>
    <url>/2024/09/22/shiro-%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="参考资料汇总"><a href="#参考资料汇总" class="headerlink" title="参考资料汇总"></a>参考资料汇总</h1><p><a href="https://shiro.apache.org/">shiro 官网</a></p>
<p>在这里: <a href="https://shiro.apache.org/release-archive.html">https://shiro.apache.org/release-archive.html</a> 可以下载完整的源码</p>
<p><img src="/images/2024-09-22-shiro-%E5%9F%BA%E7%A1%80/001.png"></p>
<p><a href="https://www.iteye.com/category/305053">跟我学Shiro目录贴</a></p>
<p><a href="https://www.bilibili.com/video/BV1j54y1t7jM">黑马程序员Java高级工程师技术栈-由浅入深掌握Shiro权限框架</a><br><a href="https://www.bilibili.com/video/BV1vE411i7ij">Shiro 入门到实战</a><br><a href="https://www.bilibili.com/video/BV1BN411w7Pd">【专题精讲】最新Shiro安全框架实战，由浅入深掌握Shiro权限框架</a></p>
<p><a href="https://www.cnblogs.com/skyLogin/p/10871347.html">springboot shiro 多realm配置认证、授权</a><br><a href="https://blog.csdn.net/weixin_43897590/article/details/105890842">shiro配置多个realm的方式</a></p>
<p><a href="https://www.cnblogs.com/lgxdev/p/16113935.html">shiro+spring+springmvc 整合</a></p>
<p><a href="https://blog.csdn.net/qq_33268245/article/details/107250380">Shiro 多登录地址</a><br><a href="https://blog.csdn.net/weixin_44273241/article/details/109780822">springboot shiro 多realm多loginUrl设置（动态改变loginUrl）踩坑经历 重定向次数多</a><br><a href="https://blog.csdn.net/qq_42814833/article/details/118897560">SpringBoot使用Shiro实现认证和授权，多端登录实现</a></p>
<p><a href="https://blog.csdn.net/hezhipin610039/article/details/50610547">在SpringMVC中开启Shiro注解授权的正确方法</a></p>
<h1 id="基本概念及入门"><a href="#基本概念及入门" class="headerlink" title="基本概念及入门"></a>基本概念及入门</h1><h2 id="hello-world"><a href="#hello-world" class="headerlink" title="hello world"></a>hello world</h2><h3 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h3><div class="note info no-icon simple"><p><code>commons-logging</code> 依赖必须添加, 否则会报错:<br><strong>java.lang.NoClassDefFoundError: org&#x2F;apache&#x2F;commons&#x2F;logging&#x2F;LogFactory</strong></p>
</div>


<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.laolang.jx<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-hello<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven-compiler-plugin.version</span>&gt;</span>3.11.0<span class="tag">&lt;/<span class="name">maven-compiler-plugin.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven-resources-plugin.version</span>&gt;</span>2.7<span class="tag">&lt;/<span class="name">maven-resources-plugin.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven-surefire-plugin.version</span>&gt;</span>3.2.3<span class="tag">&lt;/<span class="name">maven-surefire-plugin.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- shiro --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">shiro.version</span>&gt;</span>1.13.0<span class="tag">&lt;/<span class="name">shiro.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 日志 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">logback.version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">logback.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commons-logging.version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">commons-logging.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- test --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">testng.version</span>&gt;</span>6.14.3<span class="tag">&lt;/<span class="name">testng.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- tool --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">lombok.version</span>&gt;</span>1.18.30<span class="tag">&lt;/<span class="name">lombok.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hutool.version</span>&gt;</span>5.8.11<span class="tag">&lt;/<span class="name">hutool.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commons-lang3.version</span>&gt;</span>3.12.0<span class="tag">&lt;/<span class="name">commons-lang3.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- shiro --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.13.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 日志 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;logback.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-logging.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- testng --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.testng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>testng<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;testng.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- tool --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;lombok.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;hutool.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-lang3.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">testResources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">testResource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/test/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.ini<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">testResource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">testResources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-compiler-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;maven.compiler.source&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;maven.compiler.target&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>$&#123;project.build.sourceEncoding&#125;<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-resources-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-surefire-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">testFailureIgnore</span>&gt;</span>true<span class="tag">&lt;/<span class="name">testFailureIgnore</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">argLine</span>&gt;</span>-Dfile.encoding=UTF-8<span class="tag">&lt;/<span class="name">argLine</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">suiteXmlFiles</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">suiteXmlFile</span>&gt;</span>testng.xml<span class="tag">&lt;/<span class="name">suiteXmlFile</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">suiteXmlFiles</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="shiro-hello-ini"><a href="#shiro-hello-ini" class="headerlink" title="shiro-hello.ini"></a>shiro-hello.ini</h3><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用户信息</span></span><br><span class="line"><span class="section">[users]</span></span><br><span class="line"><span class="attr">zhang</span>=<span class="number">123</span></span><br><span class="line"><span class="attr">wang</span>=<span class="number">456</span></span><br></pre></td></tr></table></figure>

<h3 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.hello;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.exception.ExceptionUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.config.IniSecurityManagerFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.SecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.Factory;</span><br><span class="line"><span class="keyword">import</span> org.testng.Assert;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorldTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testHelloWorld</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">// 1. 获取SecurityManager工厂，此处使用Ini配置文件初始化SecurityManager</span></span><br><span class="line">        Factory&lt;SecurityManager&gt; factory = <span class="keyword">new</span> <span class="title class_">IniSecurityManagerFactory</span>(<span class="string">&quot;classpath:com/laolang/jx/hello/shiro-hello.ini&quot;</span>);</span><br><span class="line">        <span class="comment">// 2. 得到SecurityManager实例 并绑定给SecurityUtils</span></span><br><span class="line">        <span class="type">SecurityManager</span> <span class="variable">securityManager</span> <span class="operator">=</span> factory.getInstance();</span><br><span class="line">        SecurityUtils.setSecurityManager(securityManager);</span><br><span class="line">        <span class="comment">// 3. 得到Subject及创建用户名/密码身份验证Token（即用户身份/凭证）</span></span><br><span class="line">        <span class="type">Subject</span> <span class="variable">subject</span> <span class="operator">=</span> SecurityUtils.getSubject();</span><br><span class="line">        <span class="type">UsernamePasswordToken</span> <span class="variable">token</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordToken</span>(<span class="string">&quot;zhang&quot;</span>, <span class="string">&quot;123&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="comment">// 4. 登录</span></span><br><span class="line">            subject.login(token);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (AuthenticationException e)&#123;</span><br><span class="line">            <span class="comment">// 5. 身份验证失败</span></span><br><span class="line">            log.error(<span class="string">&quot;身份验证失败 :&#123;&#125;&quot;</span>, ExceptionUtils.getMessage(e));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Assert.assertTrue(subject.isAuthenticated());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6. 退出</span></span><br><span class="line">        subject.logout();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="自定义-Realm"><a href="#自定义-Realm" class="headerlink" title="自定义 Realm"></a>自定义 Realm</h2><h3 id="Realm-介绍"><a href="#Realm-介绍" class="headerlink" title="Realm 介绍"></a>Realm 介绍</h3><p><code>Realm</code>: 域. <code>Shiro</code> 从 <code>Realm</code> 获取安全数据（如用户、角色、权限），就是说 <code>SecurityManager</code> 要验证用户身份，那么它需要从 <code>Realm</code> 获取相应的用户进行比较以确定用户身份是否合法；也需要从 <code>Realm</code> 得到用户相应的角色&#x2F;权限进行验证用户是否能进行操作；可以把 <code>Realm</code> 看成 <code>DataSource</code> ，即安全数据源。如我们之前的ini配置方式将使用 <code>org.apache.shiro.realm.text.IniRealm</code>。</p>
<p><code>Realm</code> 接口如下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Realm</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回一个唯一的 Realm 名字 </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    String <span class="title function_">getName</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断此 Realm 是否支持此 Token</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">supports</span><span class="params">(AuthenticationToken token)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 Token 获取认证信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    AuthenticationInfo <span class="title function_">getAuthenticationInfo</span><span class="params">(AuthenticationToken token)</span> <span class="keyword">throws</span> AuthenticationException;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="shiro-默认提供的-Realm"><a href="#shiro-默认提供的-Realm" class="headerlink" title="shiro 默认提供的 Realm"></a>shiro 默认提供的 Realm</h3><div class="mermaid-wrap"><pre class="mermaid-src" hidden>
  classDiagram
    class Realm
    &lt;&lt;interface&gt;&gt; Realm
    class CachingRealm
    CachingRealm : 带有缓存的 Realm
    class AuthenticatingRealm
    AuthenticatingRealm : 支持认证的 Realm
    class AuthorizingRealm
    AuthorizingRealm : 支持授权的 Realm
    class SimpleAccountRealm
    class TextConfigurationRealm
    class PropertiesRealm
    class IniRealm
    class JdbcRealm
    class JndiLdapRealm
    class AbstractLdapRealm
    class ActiveDirectoryRealm

    Realm &lt;|--  CachingRealm
    CachingRealm &lt;|--  AuthenticatingRealm
    AuthenticatingRealm &lt;|--  AuthorizingRealm
    AuthorizingRealm &lt;|--  SimpleAccountRealm
    SimpleAccountRealm &lt;|--  TextConfigurationRealm
    TextConfigurationRealm &lt;|--  PropertiesRealm
    TextConfigurationRealm &lt;|--  IniRealm
    AuthorizingRealm &lt;|--  JdbcRealm
    AuthorizingRealm &lt;|--  JndiLdapRealm
    AuthorizingRealm &lt;|--  AbstractLdapRealm
    AbstractLdapRealm &lt;|--  ActiveDirectoryRealm
  </pre></div>

<h3 id="shiro-custom-realm-ini"><a href="#shiro-custom-realm-ini" class="headerlink" title="shiro-custom-realm.ini"></a>shiro-custom-realm.ini</h3><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 声明一个 realm</span></span><br><span class="line"><span class="attr">customRealm</span>= com.laolang.jx.customrealm.CustomRealm</span><br><span class="line"><span class="comment"># 指定securityManager的realms实现</span></span><br><span class="line"><span class="attr">securityManager.realms</span>=<span class="variable">$customRealm</span></span><br></pre></td></tr></table></figure>
<h3 id="简单的自定义-Realm"><a href="#简单的自定义-Realm" class="headerlink" title="简单的自定义 Realm"></a>简单的自定义 Realm</h3><h4 id="CustomRealm-java"><a href="#CustomRealm-java" class="headerlink" title="CustomRealm.java"></a>CustomRealm.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.customrealm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.IncorrectCredentialsException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.SimpleAuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UnknownAccountException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.Realm;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义 Realm</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomRealm</span> <span class="keyword">implements</span> <span class="title class_">Realm</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;customRealm&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 仅支持  UsernamePasswordToken</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">supports</span><span class="params">(AuthenticationToken token)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> token <span class="keyword">instanceof</span> UsernamePasswordToken;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> AuthenticationInfo <span class="title function_">getAuthenticationInfo</span><span class="params">(AuthenticationToken token)</span> <span class="keyword">throws</span> AuthenticationException &#123;</span><br><span class="line">        <span class="comment">// 用户名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> (String) token.getPrincipal();</span><br><span class="line">        <span class="comment">// 密码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>((<span class="type">char</span>[]) token.getCredentials());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 用户名错误</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="string">&quot;zhang&quot;</span>.equals(username)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnknownAccountException</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 密码错误</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="string">&quot;123&quot;</span>.equals(password)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IncorrectCredentialsException</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果身份验证成功, 则返回一个 AuthenticationInfo 的实现</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SimpleAuthenticationInfo</span>(username, password, getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.customrealm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.exception.ExceptionUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.config.IniSecurityManagerFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.SecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.Factory;</span><br><span class="line"><span class="keyword">import</span> org.testng.Assert;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomRealmTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testCustomRealm</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 1. 获取SecurityManager工厂，此处使用Ini配置文件初始化SecurityManager</span></span><br><span class="line">        Factory&lt;SecurityManager&gt; factory = </span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">IniSecurityManagerFactory</span>(<span class="string">&quot;classpath:com/laolang/jx/customrealm/shiro-custom-realm.ini&quot;</span>);</span><br><span class="line">        <span class="comment">// 2. 得到SecurityManager实例 并绑定给SecurityUtils</span></span><br><span class="line">        <span class="type">SecurityManager</span> <span class="variable">securityManager</span> <span class="operator">=</span> factory.getInstance();</span><br><span class="line">        SecurityUtils.setSecurityManager(securityManager);</span><br><span class="line">        <span class="comment">// 3. 得到Subject及创建用户名/密码身份验证Token（即用户身份/凭证）</span></span><br><span class="line">        <span class="type">Subject</span> <span class="variable">subject</span> <span class="operator">=</span> SecurityUtils.getSubject();</span><br><span class="line">        <span class="type">UsernamePasswordToken</span> <span class="variable">token</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordToken</span>(<span class="string">&quot;zhang&quot;</span>, <span class="string">&quot;123&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 4. 登录</span></span><br><span class="line">            subject.login(token);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (AuthenticationException e) &#123;</span><br><span class="line">            <span class="comment">// 5. 身份验证失败</span></span><br><span class="line">            log.error(<span class="string">&quot;身份验证失败 :&#123;&#125;&quot;</span>, ExceptionUtils.getMessage(e));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Assert.assertTrue(subject.isAuthenticated());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6. 退出</span></span><br><span class="line">        subject.logout();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="AuthorizingRealm"><a href="#AuthorizingRealm" class="headerlink" title="AuthorizingRealm"></a>AuthorizingRealm</h3><p>一般都是继承 <code>AuthorizingRealm</code>, 带有认证和授权功能, 有两个方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">AuthorizingRealm</span> <span class="keyword">extends</span> <span class="title class_">AuthenticatingRealm</span></span><br><span class="line">        <span class="keyword">implements</span> <span class="title class_">Authorizer</span>, Initializable, PermissionResolverAware, RolePermissionResolverAware &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 认证</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">abstract</span> AuthenticationInfo <span class="title function_">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken token)</span> <span class="keyword">throws</span> AuthenticationException;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 授权</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">abstract</span> AuthorizationInfo <span class="title function_">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principals)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="继承-AuthorizingRealm"><a href="#继承-AuthorizingRealm" class="headerlink" title="继承 AuthorizingRealm"></a>继承 AuthorizingRealm</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.authorizingrealm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.IncorrectCredentialsException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.SimpleAuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UnknownAccountException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.AuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.AuthorizingRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.PrincipalCollection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomAuthorizingRealm</span> <span class="keyword">extends</span> <span class="title class_">AuthorizingRealm</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 认证</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> AuthenticationInfo <span class="title function_">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken token)</span> <span class="keyword">throws</span> AuthenticationException &#123;</span><br><span class="line">        <span class="comment">// 用户名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> (String) token.getPrincipal();</span><br><span class="line">        <span class="comment">// 密码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>((<span class="type">char</span>[]) token.getCredentials());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 用户名错误</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="string">&quot;zhang&quot;</span>.equals(username)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnknownAccountException</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 密码错误</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="string">&quot;123&quot;</span>.equals(password)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IncorrectCredentialsException</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果身份验证成功, 则返回一个 AuthenticationInfo 的实现</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SimpleAuthenticationInfo</span>(username, password, getName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 授权</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> AuthorizationInfo <span class="title function_">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principals)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.customrealm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.exception.ExceptionUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.config.IniSecurityManagerFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.SecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.Factory;</span><br><span class="line"><span class="keyword">import</span> org.testng.Assert;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomRealmTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testCustomRealm</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">iniPath</span> <span class="operator">=</span> <span class="string">&quot;classpath:com/laolang/jx/customrealm/shiro-custom-realm.ini&quot;</span>;</span><br><span class="line">        <span class="comment">// 1. 获取SecurityManager工厂，此处使用Ini配置文件初始化SecurityManager</span></span><br><span class="line">        Factory&lt;SecurityManager&gt; factory = <span class="keyword">new</span> <span class="title class_">IniSecurityManagerFactory</span>(iniPath);</span><br><span class="line">        <span class="comment">// 2. 得到SecurityManager实例 并绑定给SecurityUtils</span></span><br><span class="line">        <span class="type">SecurityManager</span> <span class="variable">securityManager</span> <span class="operator">=</span> factory.getInstance();</span><br><span class="line">        SecurityUtils.setSecurityManager(securityManager);</span><br><span class="line">        <span class="comment">// 3. 得到Subject及创建用户名/密码身份验证Token（即用户身份/凭证）</span></span><br><span class="line">        <span class="type">Subject</span> <span class="variable">subject</span> <span class="operator">=</span> SecurityUtils.getSubject();</span><br><span class="line">        <span class="type">UsernamePasswordToken</span> <span class="variable">token</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordToken</span>(<span class="string">&quot;zhang&quot;</span>, <span class="string">&quot;123&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 4. 登录</span></span><br><span class="line">            subject.login(token);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (AuthenticationException e) &#123;</span><br><span class="line">            <span class="comment">// 5. 身份验证失败</span></span><br><span class="line">            log.error(<span class="string">&quot;身份验证失败 :&#123;&#125;&quot;</span>, ExceptionUtils.getMessage(e));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Assert.assertTrue(subject.isAuthenticated());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6. 退出</span></span><br><span class="line">        subject.logout();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Authenticator及AuthenticationStrategy"><a href="#Authenticator及AuthenticationStrategy" class="headerlink" title="Authenticator及AuthenticationStrategy"></a>Authenticator及AuthenticationStrategy</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p><code>Authenticator</code> 的职责是验证用户帐号，是 <code>Shiro</code> 中身份验证核心的入口点</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> AuthenticationInfo <span class="title function_">authenticate</span><span class="params">(AuthenticationToken authenticationToken)</span>  <span class="keyword">throws</span> AuthenticationException;   </span><br></pre></td></tr></table></figure>
<p>如果验证成功，将返回 <code>AuthenticationInfo</code> 验证信息；此信息中包含了身份及凭证；如果验证失败将抛出相应的 <code>AuthenticationException</code> 实现。</p>
<p><code>SecurityManager</code> 接口继承了 <code>Authenticator</code> ，另外还有一个 <code>ModularRealmAuthenticator</code> 实现，其委托给多个 <code>Realm</code> 进行验证，验证规则通过 <code>AuthenticationStrategy</code> 接口指定，默认提供的实现：</p>
<ul>
<li><code>FirstSuccessfulStrategy</code>：只要有一个 <code>Realm</code> 验证成功即可，只返回第一个 <code>Realm</code> 身份验证成功的认证信息，其他的忽略；</li>
<li><code>AtLeastOneSuccessfulStrategy</code>：只要有一个 <code>Realm</code> 验证成功即可，和 <code>FirstSuccessfulStrategy</code> 不同，返回所有Realm身份验证成功的认证信息；<br>*<code>AllSuccessfulStrategy</code>：所有 <code>Realm</code> 验证成功才算成功，且返回所有 <code>Realm</code> 身份验证成功的认证信息，如果有一个失败就失败了。</li>
</ul>
<p><code>ModularRealmAuthenticator</code> 默认使用 <code>AtLeastOneSuccessfulStrategy</code> 策略。</p>
<h3 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h3><h4 id="PlatformType-java"><a href="#PlatformType-java" class="headerlink" title="PlatformType.java"></a>PlatformType.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.multirealm.enums;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Realm 类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">PlatformType</span> &#123;</span><br><span class="line"></span><br><span class="line">    MyRealm(<span class="string">&quot;myRealm&quot;</span>, <span class="string">&quot;简单 Realm&quot;</span>),</span><br><span class="line">    MyAuthorizingRealm(<span class="string">&quot;myAuthorizingRealm&quot;</span>, <span class="string">&quot;带认证和授权的 Realm&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String realmName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String desc;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="CustomToken-java"><a href="#CustomToken-java" class="headerlink" title="CustomToken.java"></a>CustomToken.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.multirealm.token;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.multirealm.enums.PlatformType;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.EqualsAndHashCode;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EqualsAndHashCode(callSuper = true)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomToken</span> <span class="keyword">extends</span> <span class="title class_">UsernamePasswordToken</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> PlatformType platformType;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CustomToken</span><span class="params">(String username, String password, PlatformType platformType)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(username, password);</span><br><span class="line">        <span class="built_in">this</span>.platformType = platformType;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="MyRealm-java"><a href="#MyRealm-java" class="headerlink" title="MyRealm.java"></a>MyRealm.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.multirealm.realm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.IncorrectCredentialsException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.SimpleAuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UnknownAccountException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.Realm;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRealm</span> <span class="keyword">implements</span> <span class="title class_">Realm</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;myRealm&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 仅支持  UsernamePasswordToken</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">supports</span><span class="params">(AuthenticationToken token)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> token <span class="keyword">instanceof</span> UsernamePasswordToken;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> AuthenticationInfo <span class="title function_">getAuthenticationInfo</span><span class="params">(AuthenticationToken token)</span> <span class="keyword">throws</span> AuthenticationException &#123;</span><br><span class="line">        log.info(<span class="string">&quot;&#123;&#125; getAuthenticationInfo execute&quot;</span>, getName());</span><br><span class="line">        <span class="comment">// 用户名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> (String) token.getPrincipal();</span><br><span class="line">        <span class="comment">// 密码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>((<span class="type">char</span>[]) token.getCredentials());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 用户名错误</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="string">&quot;zhang&quot;</span>.equals(username)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnknownAccountException</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 密码错误</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="string">&quot;123&quot;</span>.equals(password)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IncorrectCredentialsException</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果身份验证成功, 则返回一个 AuthenticationInfo 的实现</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SimpleAuthenticationInfo</span>(username, password, getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="MyAuthorizingRealm-java"><a href="#MyAuthorizingRealm-java" class="headerlink" title="MyAuthorizingRealm.java"></a>MyAuthorizingRealm.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.multirealm.realm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.IncorrectCredentialsException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.SimpleAuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UnknownAccountException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.AuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.AuthorizingRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.PrincipalCollection;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyAuthorizingRealm</span> <span class="keyword">extends</span> <span class="title class_">AuthorizingRealm</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;myAuthorizingRealm&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 认证</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> AuthenticationInfo <span class="title function_">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken token)</span> <span class="keyword">throws</span> AuthenticationException &#123;</span><br><span class="line">        log.info(<span class="string">&quot;&#123;&#125; getAuthenticationInfo execute&quot;</span>, getName());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 用户名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> (String) token.getPrincipal();</span><br><span class="line">        <span class="comment">// 密码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>((<span class="type">char</span>[]) token.getCredentials());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 用户名错误</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="string">&quot;zhang&quot;</span>.equals(username)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnknownAccountException</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 密码错误</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="string">&quot;123&quot;</span>.equals(password)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IncorrectCredentialsException</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果身份验证成功, 则返回一个 AuthenticationInfo 的实现</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SimpleAuthenticationInfo</span>(username, password, getName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 授权</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> AuthorizationInfo <span class="title function_">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principals)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="shiro-multi-realm-ini"><a href="#shiro-multi-realm-ini" class="headerlink" title="shiro-multi-realm.ini"></a>shiro-multi-realm.ini</h4><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[main]</span></span><br><span class="line"><span class="comment"># 指定 securityManager 的 authenticator 实现</span></span><br><span class="line"><span class="attr">customModularRealmAuthenticator</span>=com.laolang.jx.multirealm.authc.CustomModularRealmAuthenticator</span><br><span class="line"><span class="attr">securityManager.authenticator</span>=<span class="variable">$customModularRealmAuthenticator</span></span><br><span class="line"><span class="comment"># 指定 securityManager.authenticator 的 authenticationStrategy</span></span><br><span class="line"><span class="attr">firstSuccessfulStrategy</span>= org.apache.shiro.authc.pam.FirstSuccessfulStrategy</span><br><span class="line"><span class="attr">securityManager.authenticator.authenticationStrategy</span>=<span class="variable">$firstSuccessfulStrategy</span></span><br><span class="line"><span class="comment"># 配置多个 realm</span></span><br><span class="line"><span class="attr">myRealm</span>=com.laolang.jx.multirealm.realm.MyRealm</span><br><span class="line"><span class="attr">myAuthorizingRealm</span>=com.laolang.jx.multirealm.realm.MyAuthorizingRealm</span><br><span class="line"><span class="attr">securityManager.realms</span>=<span class="variable">$myRealm</span>,<span class="variable">$myAuthorizingRealm</span></span><br></pre></td></tr></table></figure>

<h4 id="CustomModularRealmAuthenticator-java"><a href="#CustomModularRealmAuthenticator-java" class="headerlink" title="CustomModularRealmAuthenticator.java"></a>CustomModularRealmAuthenticator.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.multirealm.authc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.StrUtil;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.multirealm.enums.PlatformType;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.multirealm.token.CustomToken;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.pam.ModularRealmAuthenticator;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.Realm;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomModularRealmAuthenticator</span> <span class="keyword">extends</span> <span class="title class_">ModularRealmAuthenticator</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> AuthenticationInfo <span class="title function_">doAuthenticate</span><span class="params">(AuthenticationToken authenticationToken)</span> <span class="keyword">throws</span> AuthenticationException &#123;</span><br><span class="line">        log.info(<span class="string">&quot;CustomModularRealmAuthenticator.doAuthenticate execute&quot;</span>);</span><br><span class="line">        <span class="comment">// 判断 getRealms 是否返回为空</span></span><br><span class="line">        assertRealmsConfigured();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 强转为自定义的 Token</span></span><br><span class="line">        <span class="type">CustomToken</span> <span class="variable">token</span> <span class="operator">=</span> (CustomToken) authenticationToken;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 登录类型</span></span><br><span class="line">        <span class="type">PlatformType</span> <span class="variable">platformType</span> <span class="operator">=</span> token.getPlatformType();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 只处理 token 中的登录类型</span></span><br><span class="line">        Collection&lt;Realm&gt; realms = getRealms();</span><br><span class="line"></span><br><span class="line">        Collection&lt;Realm&gt; customRealms = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Realm realm : realms) &#123;</span><br><span class="line">            <span class="keyword">if</span>(StrUtil.equals(realm.getName(),platformType.getRealmName()))&#123;</span><br><span class="line">                customRealms.add(realm);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 此处使用过滤后的 Realm 集合, 在此案例中, 就是走 doSingleRealmAuthentication</span></span><br><span class="line">        <span class="keyword">if</span> (customRealms.size() == <span class="number">1</span>) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;doSingleRealmAuthentication execute&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> doSingleRealmAuthentication(customRealms.iterator().next(), authenticationToken);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            log.info(<span class="string">&quot;doMultiRealmAuthentication execute&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> doMultiRealmAuthentication(customRealms, authenticationToken);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.multirealm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.multirealm.enums.PlatformType;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.multirealm.token.CustomToken;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.exception.ExceptionUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.config.IniSecurityManagerFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.SecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.Factory;</span><br><span class="line"><span class="keyword">import</span> org.testng.Assert;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.BeforeClass;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MultiRealmTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BeforeClass</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeClass</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 1. 获取SecurityManager工厂，此处使用Ini配置文件初始化SecurityManager</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">iniPath</span> <span class="operator">=</span> <span class="string">&quot;classpath:com/laolang/jx/multirealm/shiro-multi-realm.ini&quot;</span>;</span><br><span class="line">        Factory&lt;SecurityManager&gt; factory = <span class="keyword">new</span> <span class="title class_">IniSecurityManagerFactory</span>(iniPath);</span><br><span class="line">        <span class="comment">// 2. 得到SecurityManager实例 并绑定给SecurityUtils</span></span><br><span class="line">        <span class="type">SecurityManager</span> <span class="variable">securityManager</span> <span class="operator">=</span> factory.getInstance();</span><br><span class="line">        SecurityUtils.setSecurityManager(securityManager);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testMyRealm</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 3. 得到Subject及创建用户名/密码身份验证Token（即用户身份/凭证）</span></span><br><span class="line">        <span class="type">Subject</span> <span class="variable">subject</span> <span class="operator">=</span> SecurityUtils.getSubject();</span><br><span class="line">        <span class="type">UsernamePasswordToken</span> <span class="variable">token</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CustomToken</span>(<span class="string">&quot;zhang&quot;</span>, <span class="string">&quot;123&quot;</span>, PlatformType.MyRealm);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 4. 登录</span></span><br><span class="line">            subject.login(token);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (AuthenticationException e) &#123;</span><br><span class="line">            <span class="comment">// 5. 身份验证失败</span></span><br><span class="line">            log.error(<span class="string">&quot;身份验证失败 :&#123;&#125;&quot;</span>, ExceptionUtils.getMessage(e));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Assert.assertTrue(subject.isAuthenticated());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6. 退出</span></span><br><span class="line">        subject.logout();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testMyAuthorizingRealm</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 3. 得到Subject及创建用户名/密码身份验证Token（即用户身份/凭证）</span></span><br><span class="line">        <span class="type">Subject</span> <span class="variable">subject</span> <span class="operator">=</span> SecurityUtils.getSubject();</span><br><span class="line">        <span class="type">UsernamePasswordToken</span> <span class="variable">token</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CustomToken</span>(<span class="string">&quot;zhang&quot;</span>, <span class="string">&quot;123&quot;</span>, PlatformType.MyAuthorizingRealm);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 4. 登录</span></span><br><span class="line">            subject.login(token);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (AuthenticationException e) &#123;</span><br><span class="line">            <span class="comment">// 5. 身份验证失败</span></span><br><span class="line">            log.error(<span class="string">&quot;身份验证失败 :&#123;&#125;&quot;</span>, ExceptionUtils.getMessage(e));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Assert.assertTrue(subject.isAuthenticated());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6. 退出</span></span><br><span class="line">        subject.logout();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INFO  o.a.s.config.IniSecurityManagerFactory   - Realms have been explicitly set on the SecurityManager instance - auto-setting of realms will not occur.</span><br><span class="line">INFO  .l.j.m.a.CustomModularRealmAuthenticator - CustomModularRealmAuthenticator.doAuthenticate execute</span><br><span class="line">INFO  .l.j.m.a.CustomModularRealmAuthenticator - doSingleRealmAuthentication execute</span><br><span class="line">INFO  c.l.j.m.realm.MyAuthorizingRealm         - myAuthorizingRealm getAuthenticationInfo execute</span><br><span class="line">INFO  a.s.s.m.AbstractValidatingSessionManager - Enabling session validation scheduler...</span><br><span class="line">INFO  .l.j.m.a.CustomModularRealmAuthenticator - CustomModularRealmAuthenticator.doAuthenticate execute</span><br><span class="line">INFO  .l.j.m.a.CustomModularRealmAuthenticator - doSingleRealmAuthentication execute</span><br><span class="line">INFO  com.laolang.jx.multirealm.realm.MyRealm  - myRealm getAuthenticationInfo execute</span><br></pre></td></tr></table></figure>

<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.cnblogs.com/skyLogin/p/10871347.html">springboot shiro 多realm配置认证、授权</a><br><a href="https://blog.csdn.net/weixin_43897590/article/details/105890842">shiro配置多个realm的方式</a></p>
<h2 id="关于密码加密"><a href="#关于密码加密" class="headerlink" title="关于密码加密"></a>关于密码加密</h2><h3 id="加密工具类"><a href="#加密工具类" class="headerlink" title="加密工具类"></a>加密工具类</h3><h4 id="EncryptInfo-java"><a href="#EncryptInfo-java" class="headerlink" title="EncryptInfo.java"></a>EncryptInfo.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.encrypt.encrypt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Builder;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 散列信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EncryptInfo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加密算法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String algorithmName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 明文</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String input;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 随机盐</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String salt;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 密文</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="EncryptUtil-java"><a href="#EncryptUtil-java" class="headerlink" title="EncryptUtil.java"></a>EncryptUtil.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.encrypt.encrypt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.experimental.UtilityClass;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.crypto.SecureRandomNumberGenerator;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.crypto.hash.SimpleHash;</span><br><span class="line"></span><br><span class="line"><span class="meta">@UtilityClass</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EncryptUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SHA1</span> <span class="operator">=</span> <span class="string">&quot;SHA1&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">ITERATIONS</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * sha1 散列</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> input 输入</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> salt  盐</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 散列后的字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">sha1</span><span class="params">(String input, String salt)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SimpleHash</span>(SHA1, input, salt, ITERATIONS).toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成随机盐</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 随机盐</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">generateSalt</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">SecureRandomNumberGenerator</span> <span class="variable">generator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecureRandomNumberGenerator</span>();</span><br><span class="line">        <span class="keyword">return</span> generator.nextBytes().toHex();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据明文密码生成 SHA-1 的散列信息对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> passwordPlain 明文密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 散列后的信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> EncryptInfo</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> EncryptInfo <span class="title function_">entryptSha512Password</span><span class="params">(String passwordPlain)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">salt</span> <span class="operator">=</span> generateSalt();</span><br><span class="line">        <span class="keyword">return</span> EncryptInfo.builder()</span><br><span class="line">                .input(passwordPlain)</span><br><span class="line">                .salt(salt)</span><br><span class="line">                .algorithmName(SHA1)</span><br><span class="line">                .password(sha1(passwordPlain, salt))</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="测试-3"><a href="#测试-3" class="headerlink" title="测试"></a>测试</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.encrypt.encrypt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.experimental.UtilityClass;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.crypto.SecureRandomNumberGenerator;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.crypto.hash.SimpleHash;</span><br><span class="line"></span><br><span class="line"><span class="meta">@UtilityClass</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EncryptUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SHA1</span> <span class="operator">=</span> <span class="string">&quot;SHA1&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">ITERATIONS</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * sha1 散列</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> input 输入</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> salt  盐</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 散列后的字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">sha1</span><span class="params">(String input, String salt)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SimpleHash</span>(SHA1, input, salt, ITERATIONS).toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成随机盐</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 随机盐</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">generateSalt</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">SecureRandomNumberGenerator</span> <span class="variable">generator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecureRandomNumberGenerator</span>();</span><br><span class="line">        <span class="keyword">return</span> generator.nextBytes().toHex();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据明文密码生成 SHA-1 的散列信息对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> passwordPlain 明文密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 散列后的信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> EncryptInfo</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> EncryptInfo <span class="title function_">entryptSha512Password</span><span class="params">(String passwordPlain)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">salt</span> <span class="operator">=</span> generateSalt();</span><br><span class="line">        <span class="keyword">return</span> EncryptInfo.builder()</span><br><span class="line">                .input(passwordPlain)</span><br><span class="line">                .salt(salt)</span><br><span class="line">                .algorithmName(SHA1)</span><br><span class="line">                .password(sha1(passwordPlain, salt))</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fb25c3d608a15157d9d9d1ad8a009e8a</span><br><span class="line">123</span><br><span class="line">07668092e661f3c44125731c136af43ba5d28c4e</span><br></pre></td></tr></table></figure>

<h3 id="Realm-使用密码"><a href="#Realm-使用密码" class="headerlink" title="Realm 使用密码"></a>Realm 使用密码</h3><h4 id="Realm"><a href="#Realm" class="headerlink" title="Realm"></a>Realm</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.encrypt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.encrypt.encrypt.EncryptInfo;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.encrypt.encrypt.EncryptUtil;</span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.SimpleAuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UnknownAccountException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.credential.HashedCredentialsMatcher;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.AuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.AuthorizingRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.PrincipalCollection;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.ByteSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomAuthorizingRealmWithEncrypt</span> <span class="keyword">extends</span> <span class="title class_">AuthorizingRealm</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CustomAuthorizingRealmWithEncrypt</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//指定密码匹配方式为sha1</span></span><br><span class="line">        <span class="type">HashedCredentialsMatcher</span> <span class="variable">matcher</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashedCredentialsMatcher</span>(EncryptUtil.SHA1);</span><br><span class="line">        <span class="comment">//指定密码迭代次数</span></span><br><span class="line">        matcher.setHashIterations(EncryptUtil.ITERATIONS);</span><br><span class="line">        <span class="comment">//使用父类方法使匹配方式生效</span></span><br><span class="line">        setCredentialsMatcher(matcher);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;customAuthorizingRealmWithEncrypt&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 认证</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> AuthenticationInfo <span class="title function_">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken token)</span> <span class="keyword">throws</span> AuthenticationException &#123;</span><br><span class="line">        <span class="comment">// 用户名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> (String) token.getPrincipal();</span><br><span class="line">        <span class="comment">// 密码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>((<span class="type">char</span>[]) token.getCredentials());</span><br><span class="line"></span><br><span class="line">        <span class="type">EncryptInfo</span> <span class="variable">encryptInfo</span> <span class="operator">=</span> queryUserInfo(token);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 用户名错误</span></span><br><span class="line">        <span class="keyword">if</span> (Objects.isNull(encryptInfo)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnknownAccountException</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这里就不需要了</span></span><br><span class="line">        <span class="comment">/* // 密码错误</span></span><br><span class="line"><span class="comment">        if (!&quot;123&quot;.equals(password)) &#123;</span></span><br><span class="line"><span class="comment">            throw new IncorrectCredentialsException();</span></span><br><span class="line"><span class="comment">        &#125; */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果身份验证成功, 则返回一个 AuthenticationInfo 的实现</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SimpleAuthenticationInfo</span>(username, encryptInfo.getPassword(), ByteSource.Util.bytes(encryptInfo.getSalt()), getName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 模拟用户查询</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> EncryptInfo <span class="title function_">queryUserInfo</span><span class="params">(AuthenticationToken token)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> EncryptInfo.builder()</span><br><span class="line">                .salt(<span class="string">&quot;fb25c3d608a15157d9d9d1ad8a009e8a&quot;</span>)</span><br><span class="line">                .algorithmName(EncryptUtil.SHA1)</span><br><span class="line">                .password(<span class="string">&quot;07668092e661f3c44125731c136af43ba5d28c4e&quot;</span>)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 授权</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> AuthorizationInfo <span class="title function_">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principals)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="ini"><a href="#ini" class="headerlink" title="ini"></a>ini</h4><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 声明一个 realm</span></span><br><span class="line"><span class="attr">customAuthorizingRealmWithEncrypt</span>=com.laolang.jx.encrypt.CustomAuthorizingRealmWithEncrypt</span><br><span class="line"><span class="comment"># 指定securityManager的realms实现</span></span><br><span class="line"><span class="attr">securityManager.realms</span>=<span class="variable">$customAuthorizingRealmWithEncrypt</span></span><br></pre></td></tr></table></figure>

<h4 id="测试-4"><a href="#测试-4" class="headerlink" title="测试"></a>测试</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.encrypt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.collection.CollUtil;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.encrypt.encrypt.EncryptUtil;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.exception.ExceptionUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.IncorrectCredentialsException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.config.IniSecurityManagerFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.SecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.Factory;</span><br><span class="line"><span class="keyword">import</span> org.testng.Assert;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.BeforeClass;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"><span class="keyword">import</span> org.testng.collections.Lists;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EncryptTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testEncrypt</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">salt</span> <span class="operator">=</span> EncryptUtil.generateSalt();</span><br><span class="line">        <span class="type">String</span> <span class="variable">input</span> <span class="operator">=</span> <span class="string">&quot;123&quot;</span>;</span><br><span class="line">        System.out.println(salt);</span><br><span class="line">        System.out.println(input);</span><br><span class="line">        System.out.println(EncryptUtil.sha1(input, salt));</span><br><span class="line">        List&lt;String&gt; list = Lists.newArrayList();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            list.add(EncryptUtil.sha1(input, salt));</span><br><span class="line">        &#125;</span><br><span class="line">        HashSet&lt;String&gt; set = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;(list);</span><br><span class="line">        Assert.assertTrue(CollUtil.isNotEmpty(set));</span><br><span class="line">        Assert.assertEquals(set.size(), <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BeforeClass</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeClass</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 1. 获取SecurityManager工厂，此处使用Ini配置文件初始化SecurityManager</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">iniPath</span> <span class="operator">=</span> <span class="string">&quot;classpath:com/laolang/jx/encrypt/shiro-custom-authorizing-realm-with-encrypt.ini&quot;</span>;</span><br><span class="line">        Factory&lt;SecurityManager&gt; factory = <span class="keyword">new</span> <span class="title class_">IniSecurityManagerFactory</span>(iniPath);</span><br><span class="line">        <span class="comment">// 2. 得到SecurityManager实例 并绑定给SecurityUtils</span></span><br><span class="line">        <span class="type">SecurityManager</span> <span class="variable">securityManager</span> <span class="operator">=</span> factory.getInstance();</span><br><span class="line">        SecurityUtils.setSecurityManager(securityManager);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testRealmWithEncrypt</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 3. 得到Subject及创建用户名/密码身份验证Token（即用户身份/凭证）</span></span><br><span class="line">        <span class="type">Subject</span> <span class="variable">subject</span> <span class="operator">=</span> SecurityUtils.getSubject();</span><br><span class="line">        <span class="type">UsernamePasswordToken</span> <span class="variable">token</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordToken</span>(<span class="string">&quot;zhang&quot;</span>, <span class="string">&quot;123&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 4. 登录</span></span><br><span class="line">            subject.login(token);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (AuthenticationException e) &#123;</span><br><span class="line">            <span class="comment">// 5. 身份验证失败</span></span><br><span class="line">            log.error(<span class="string">&quot;身份验证失败 :&#123;&#125;&quot;</span>, ExceptionUtils.getMessage(e));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Assert.assertTrue(subject.isAuthenticated());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6. 退出</span></span><br><span class="line">        subject.logout();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test(expectedExceptions = IncorrectCredentialsException.class)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testRealmWithEncryptErrorPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 3. 得到Subject及创建用户名/密码身份验证Token（即用户身份/凭证）</span></span><br><span class="line">        <span class="type">Subject</span> <span class="variable">subject</span> <span class="operator">=</span> SecurityUtils.getSubject();</span><br><span class="line">        <span class="type">UsernamePasswordToken</span> <span class="variable">token</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordToken</span>(<span class="string">&quot;zhang&quot;</span>, <span class="string">&quot;xxx&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4. 登录</span></span><br><span class="line">        subject.login(token);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h2><h3 id="realm"><a href="#realm" class="headerlink" title="realm"></a>realm</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.auth;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.encrypt.encrypt.EncryptInfo;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.encrypt.encrypt.EncryptUtil;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.SimpleAuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UnknownAccountException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.credential.HashedCredentialsMatcher;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.AuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.SimpleAuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.AuthorizingRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.PrincipalCollection;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.ByteSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRealm</span> <span class="keyword">extends</span> <span class="title class_">AuthorizingRealm</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyRealm</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//指定密码匹配方式为sha1</span></span><br><span class="line">        <span class="type">HashedCredentialsMatcher</span> <span class="variable">matcher</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashedCredentialsMatcher</span>(EncryptUtil.SHA1);</span><br><span class="line">        <span class="comment">//指定密码迭代次数</span></span><br><span class="line">        matcher.setHashIterations(EncryptUtil.ITERATIONS);</span><br><span class="line">        <span class="comment">//使用父类方法使匹配方式生效</span></span><br><span class="line">        setCredentialsMatcher(matcher);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;myRealm&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 认证</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> AuthenticationInfo <span class="title function_">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken token)</span> <span class="keyword">throws</span> AuthenticationException &#123;</span><br><span class="line">        <span class="comment">// 用户名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> (String) token.getPrincipal();</span><br><span class="line">        <span class="comment">// 密码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>((<span class="type">char</span>[]) token.getCredentials());</span><br><span class="line"></span><br><span class="line">        <span class="type">EncryptInfo</span> <span class="variable">encryptInfo</span> <span class="operator">=</span> queryUserInfo(token);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 用户名错误</span></span><br><span class="line">        <span class="keyword">if</span> (Objects.isNull(encryptInfo)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnknownAccountException</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这里就不需要了</span></span><br><span class="line">        <span class="comment">/* // 密码错误</span></span><br><span class="line"><span class="comment">        if (!&quot;123&quot;.equals(password)) &#123;</span></span><br><span class="line"><span class="comment">            throw new IncorrectCredentialsException();</span></span><br><span class="line"><span class="comment">        &#125; */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果身份验证成功, 则返回一个 AuthenticationInfo 的实现</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SimpleAuthenticationInfo</span>(username, encryptInfo.getPassword(), ByteSource.Util.bytes(encryptInfo.getSalt()), getName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 模拟用户查询</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> EncryptInfo <span class="title function_">queryUserInfo</span><span class="params">(AuthenticationToken token)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> EncryptInfo.builder()</span><br><span class="line">                .salt(<span class="string">&quot;fb25c3d608a15157d9d9d1ad8a009e8a&quot;</span>)</span><br><span class="line">                .algorithmName(EncryptUtil.SHA1)</span><br><span class="line">                .password(<span class="string">&quot;07668092e661f3c44125731c136af43ba5d28c4e&quot;</span>)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 授权</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> AuthorizationInfo <span class="title function_">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principals)</span> &#123;</span><br><span class="line">        <span class="comment">// 用户名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> (String) principals.getPrimaryPrincipal();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 模拟查询用户权限</span></span><br><span class="line">        Set&lt;String&gt; roles = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        roles.add(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        roles.add(<span class="string">&quot;seller&quot;</span>);</span><br><span class="line">        Set&lt;String&gt; perms = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        perms.add(<span class="string">&quot;admin:system:dict:typeList&quot;</span>);</span><br><span class="line">        perms.add(<span class="string">&quot;seller:product:getInfo&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构建资源校验</span></span><br><span class="line">        <span class="type">SimpleAuthorizationInfo</span> <span class="variable">info</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleAuthorizationInfo</span>();</span><br><span class="line">        info.addRoles(roles);</span><br><span class="line">        info.addStringPermissions(perms);</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="ini-1"><a href="#ini-1" class="headerlink" title="ini"></a>ini</h3><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 声明一个 realm</span></span><br><span class="line"><span class="attr">myRealm</span>= com.laolang.jx.auth.MyRealm</span><br><span class="line"><span class="comment"># 指定securityManager的realms实现</span></span><br><span class="line"><span class="attr">securityManager.realms</span>=<span class="variable">$myRealm</span></span><br></pre></td></tr></table></figure>

<h3 id="测试-5"><a href="#测试-5" class="headerlink" title="测试"></a>测试</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.auth;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.exception.ExceptionUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.UnauthorizedException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.config.IniSecurityManagerFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.SecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.Factory;</span><br><span class="line"><span class="keyword">import</span> org.testng.Assert;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.AfterClass;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.BeforeClass;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AuthTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Subject subject;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BeforeClass</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beoreClass</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 1. 获取SecurityManager工厂，此处使用Ini配置文件初始化SecurityManager</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">iniPath</span> <span class="operator">=</span> <span class="string">&quot;classpath:com/laolang/jx/auth/shiro-auth.ini&quot;</span>;</span><br><span class="line">        Factory&lt;SecurityManager&gt; factory = <span class="keyword">new</span> <span class="title class_">IniSecurityManagerFactory</span>(iniPath);</span><br><span class="line">        <span class="comment">// 2. 得到SecurityManager实例 并绑定给SecurityUtils</span></span><br><span class="line">        <span class="type">SecurityManager</span> <span class="variable">securityManager</span> <span class="operator">=</span> factory.getInstance();</span><br><span class="line">        SecurityUtils.setSecurityManager(securityManager);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3. 得到Subject及创建用户名/密码身份验证Token（即用户身份/凭证）</span></span><br><span class="line">        subject = SecurityUtils.getSubject();</span><br><span class="line">        <span class="type">UsernamePasswordToken</span> <span class="variable">token</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordToken</span>(<span class="string">&quot;zhang&quot;</span>, <span class="string">&quot;123&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 4. 登录</span></span><br><span class="line">            subject.login(token);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (AuthenticationException e) &#123;</span><br><span class="line">            <span class="comment">// 5. 身份验证失败</span></span><br><span class="line">            log.error(<span class="string">&quot;身份验证失败 :&#123;&#125;&quot;</span>, ExceptionUtils.getMessage(e));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Assert.assertTrue(subject.isAuthenticated());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterClass</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterClass</span><span class="params">()</span>&#123;</span><br><span class="line">        subject.logout();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAuth</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 验证角色</span></span><br><span class="line">        subject.checkRole(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 验证权限</span></span><br><span class="line">        subject.checkPermission(<span class="string">&quot;admin:system:dict:typeList&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test(expectedExceptions = UnauthorizedException.class)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testNoAuth</span><span class="params">()</span>&#123;</span><br><span class="line">        subject.checkRole(<span class="string">&quot;xxx&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test(expectedExceptions = UnauthorizedException.class)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testNoPerm</span><span class="params">()</span>&#123;</span><br><span class="line">        subject.checkPermission(<span class="string">&quot;xxx&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="shiro-ssm"><a href="#shiro-ssm" class="headerlink" title="shiro + ssm"></a>shiro + ssm</h1>]]></content>
      <categories>
        <category>java</category>
        <category>认证与授权</category>
        <category>shiro</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>认证与授权</tag>
        <tag>shiro</tag>
      </tags>
  </entry>
  <entry>
    <title>console.log 的技巧</title>
    <url>/2024/09/22/tricks-of-console-log/</url>
    <content><![CDATA[<h1 id="基本打印"><a href="#基本打印" class="headerlink" title="基本打印"></a>基本打印</h1><h2 id="5-个级别"><a href="#5-个级别" class="headerlink" title="5 个级别"></a>5 个级别</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;log&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&#x27;info&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&#x27;warn&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;error&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">debug</span>(<span class="string">&#x27;debug&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>效果如下</p>
<p><img src="/images/2024-09-22-tricks-of-console-log/001.png"></p>
<p><code>debug</code> 的显示需要设置级别</p>
<p><img src="/images/2024-09-22-tricks-of-console-log/002.png"></p>
<h2 id="占位符"><a href="#占位符" class="headerlink" title="占位符"></a>占位符</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">console.log(&#x27;str:%s,int:%d,float:%f,object:%o&#x27;,&#x27;str&#x27;,1,1.1,&#123;name:&#x27;laolang&#x27;,age:12&#125;)</span><br></pre></td></tr></table></figure>

<p><img src="/images/2024-09-22-tricks-of-console-log/003.png"></p>
<p>占位符还可以输出 <code>CSS</code> 样式, 每一个 <code>%c</code> 后的内容都可以定义一个 <code>CSS</code> 样式</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 使用样式</span></span><br><span class="line"><span class="keyword">let</span> name = <span class="string">&quot;CUGGZ&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;My Name is %cCUGGZ&#x27;</span>, <span class="string">&#x27;color: skyblue; font-size: 30px;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 胶囊</span></span><br><span class="line"><span class="keyword">let</span> a = <span class="string">&#x27;background: #606060; color: #fff; border-radius: 3px 0 0 3px;&#x27;</span></span><br><span class="line"><span class="keyword">let</span> b = <span class="string">&#x27;background: #1475B2; color: #fff; border-radius: 0 3px 3px 0;&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`%c Maven %c 1.2.3`</span>, a, b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印字符图片</span></span><br><span class="line"><span class="keyword">const</span> res = <span class="string">`</span></span><br><span class="line"><span class="string">    __  __     ____         _       __           __    __</span></span><br><span class="line"><span class="string">   / / / /__  / / /___     | |     / /___  _____/ /___/ /</span></span><br><span class="line"><span class="string">  / /_/ / _ \\/ / / __ \\    | | /| / / __ \\/ ___/ / __  / </span></span><br><span class="line"><span class="string"> / __  /  __/ / / /_/ /    | |/ |/ / /_/ / /  / / /_/ /  </span></span><br><span class="line"><span class="string">/_/ /_/\\___/_/_/\\____/     |__/|__/\\____/_/  /_/\\__,_/   </span></span><br><span class="line"><span class="string">`</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br></pre></td></tr></table></figure>
<p><img src="/images/2024-09-22-tricks-of-console-log/004.png"></p>
<h1 id="打印时间"><a href="#打印时间" class="headerlink" title="打印时间"></a>打印时间</h1><h2 id="time-和-timeEnd"><a href="#time-和-timeEnd" class="headerlink" title="time 和 timeEnd"></a>time 和 timeEnd</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">time</span>(<span class="string">&quot;timer1&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">time</span>(<span class="string">&quot;timer2&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">timeEnd</span>(<span class="string">&quot;timer1&quot;</span>);</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">timeEnd</span>(<span class="string">&quot;timer2&quot;</span>);</span><br><span class="line">&#125;, <span class="number">2000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// timer1: 1004.666259765625 ms</span></span><br><span class="line"><span class="comment">// timer2: 2004.654052734375 ms</span></span><br></pre></td></tr></table></figure>

<p><img src="/images/2024-09-22-tricks-of-console-log/005.png"></p>
<h2 id="timeLog"><a href="#timeLog" class="headerlink" title="timeLog"></a>timeLog</h2><p>这里的 <code>console.timeLog()</code> 上面的 <code>console.timeEnd()</code> 类似，但是也有一定的差别。他们都需要使用 <code>console.time()</code> 来启动一个计时器。然后 <code>console.timeLog()</code> 就是打印计时器当前的时间，而<code>console.timeEnd()</code> 是打印计时器，直到结束的时间</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">time</span>(<span class="string">&quot;timer&quot;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">timeLog</span>(<span class="string">&quot;timer&quot;</span>)</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">timeLog</span>(<span class="string">&quot;timer&quot;</span>);</span><br><span class="line">    &#125;, <span class="number">2000</span>);</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// timer: 1002.80224609375 ms</span></span><br><span class="line"><span class="comment">// timer: 3008.044189453125 ms</span></span><br></pre></td></tr></table></figure>
<p>而使用console.timeEnd()时</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">console.time(&quot;timer&quot;);</span><br><span class="line"> </span><br><span class="line">setTimeout(() =&gt; &#123;</span><br><span class="line">  console.timeEnd(&quot;timer&quot;)</span><br><span class="line"> setTimeout(() =&gt; &#123;</span><br><span class="line">     console.timeLog(&quot;timer&quot;);</span><br><span class="line">    &#125;, 2000);</span><br><span class="line">&#125;, 1000);</span><br></pre></td></tr></table></figure>

<p><img src="/images/2024-09-22-tricks-of-console-log/006.png"></p>
<p>可以看到，它会终止当前的计时器，所以里面的timeLog就无法在找到timer计数器了。所以两者的区别就在于，是否会终止当前的计时。</p>
<h1 id="分组打印"><a href="#分组打印" class="headerlink" title="分组打印"></a>分组打印</h1><blockquote>
<p><code>groupCollapsed()</code> 会默认折叠</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">group</span>(<span class="string">&quot;Alphabet&quot;</span>)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">group</span>(<span class="string">&quot;Numbers&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;One&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Two&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">groupEnd</span>(<span class="string">&quot;Numbers&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">groupEnd</span>(<span class="string">&quot;Alphabet&quot;</span>);</span><br></pre></td></tr></table></figure>

<p><img src="/images/2024-09-22-tricks-of-console-log/007.png"></p>
<h1 id="打印次数"><a href="#打印次数" class="headerlink" title="打印次数"></a>打印次数</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">count</span>(<span class="string">&#x27;count&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span>( <span class="number">5</span> === i )&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">countReset</span>(<span class="string">&#x27;count&#x27;</span>) <span class="comment">// 重置</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/images/2024-09-22-tricks-of-console-log/008.png"></p>
<h1 id="打印表格"><a href="#打印表格" class="headerlink" title="打印表格"></a>打印表格</h1><div class="note info no-icon simple"><p><code>console.table()</code> 最多只能处理 <strong>1000</strong> 行</p>
</div>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> users = [ </span><br><span class="line">   &#123; </span><br><span class="line">      <span class="string">&quot;first_name&quot;</span>:<span class="string">&quot;Harcourt&quot;</span>,</span><br><span class="line">      <span class="string">&quot;last_name&quot;</span>:<span class="string">&quot;Huckerbe&quot;</span>,</span><br><span class="line">      <span class="string">&quot;gender&quot;</span>:<span class="string">&quot;Male&quot;</span>,</span><br><span class="line">      <span class="string">&quot;city&quot;</span>:<span class="string">&quot;Linchen&quot;</span>,</span><br><span class="line">      <span class="string">&quot;birth_country&quot;</span>:<span class="string">&quot;China&quot;</span></span><br><span class="line">   &#125;,</span><br><span class="line">   &#123; </span><br><span class="line">      <span class="string">&quot;first_name&quot;</span>:<span class="string">&quot;Allyn&quot;</span>,</span><br><span class="line">      <span class="string">&quot;last_name&quot;</span>:<span class="string">&quot;McEttigen&quot;</span>,</span><br><span class="line">      <span class="string">&quot;gender&quot;</span>:<span class="string">&quot;Male&quot;</span>,</span><br><span class="line">      <span class="string">&quot;city&quot;</span>:<span class="string">&quot;Ambelókipoi&quot;</span>,</span><br><span class="line">      <span class="string">&quot;birth_country&quot;</span>:<span class="string">&quot;Greece&quot;</span></span><br><span class="line">   &#125;,</span><br><span class="line">   &#123; </span><br><span class="line">      <span class="string">&quot;first_name&quot;</span>:<span class="string">&quot;Sandor&quot;</span>,</span><br><span class="line">      <span class="string">&quot;last_name&quot;</span>:<span class="string">&quot;Degg&quot;</span>,</span><br><span class="line">      <span class="string">&quot;gender&quot;</span>:<span class="string">&quot;Male&quot;</span>,</span><br><span class="line">      <span class="string">&quot;city&quot;</span>:<span class="string">&quot;Mthatha&quot;</span>,</span><br><span class="line">      <span class="string">&quot;birth_country&quot;</span>:<span class="string">&quot;South Africa&quot;</span></span><br><span class="line">   &#125;</span><br><span class="line">]</span><br><span class="line"> </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">table</span>(users, [<span class="string">&#x27;first_name&#x27;</span>, <span class="string">&#x27;last_name&#x27;</span>, <span class="string">&#x27;city&#x27;</span>]);</span><br></pre></td></tr></table></figure>

<p><img src="/images/2024-09-22-tricks-of-console-log/009.png"></p>
<h1 id="assert"><a href="#assert" class="headerlink" title="assert"></a>assert</h1><p>console.assert()方法用于语句断言，当断言为 false时，则在信息到控制台输出错误信息。它的语法如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">assert</span>(expression, message)</span><br></pre></td></tr></table></figure>

<p>它有两个参数：</p>
<ul>
<li>expression: 条件语句，语句会被解析成 Boolean，且为 false 的时候会触发message语句输出；</li>
<li>message: 输出语句，可以是任意类型。</li>
</ul>
<p>该方法会在expression条件语句为false时，就会打印message信息。当在特定情况下才输出语句时，就可以使用console.assert()方法。<br>比如，当列表元素的子节点数量大于等于100时，打印错误信息：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">assert</span>(<span class="number">2</span> &lt; <span class="number">1</span>, <span class="string">&quot;2 is &gt; 1&quot;</span>);</span><br></pre></td></tr></table></figure>

<p><img src="/images/2024-09-22-tricks-of-console-log/010.png"></p>
<h1 id="trace"><a href="#trace" class="headerlink" title="trace"></a>trace</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function a() &#123;</span><br><span class="line">  b();</span><br><span class="line">&#125;</span><br><span class="line">function b() &#123;</span><br><span class="line">  console.trace();</span><br><span class="line">&#125;</span><br><span class="line">function c() &#123;</span><br><span class="line">  a();</span><br><span class="line">&#125;</span><br><span class="line">c();</span><br></pre></td></tr></table></figure>

<p><img src="/images/2024-09-22-tricks-of-console-log/011.png"></p>
<h1 id="dir"><a href="#dir" class="headerlink" title="dir"></a>dir</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> user = &#123;</span><br><span class="line">    <span class="attr">username</span>: <span class="string">&#x27;laolang&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">12</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">dir</span>(user)</span><br></pre></td></tr></table></figure>

<p><img src="/images/2024-09-22-tricks-of-console-log/012.png"></p>
<h1 id="dirxml"><a href="#dirxml" class="headerlink" title="dirxml"></a>dirxml</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">dirxml</span>(<span class="variable language_">document</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/images/2024-09-22-tricks-of-console-log/013.png"></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.csdn.net/lsq191690/article/details/141498385">你需要知道的 19 个 console 实用调试技巧！</a><br><a href="https://zhuanlan.zhihu.com/p/54204778">玩转控制台，看看那些你不知道的Console用法</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>xxl-job 基础</title>
    <url>/2024/09/22/xxl-job-base/</url>
    <content><![CDATA[<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>官网文档: <a href="https://www.xuxueli.com/xxl-job/">https://www.xuxueli.com/xxl-job/</a></p>
<p><a href="https://www.bilibili.com/video/BV1824y1G7vT">1小时掌握XXL-JOB分布式调度实战-带你掌握java定时任务框架-面试必问</a></p>
]]></content>
      <categories>
        <category>java</category>
        <category>任务调度</category>
        <category>xxl-job</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>任务调度</tag>
        <tag>xxl-job</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构 C 语言版 动态数组</title>
    <url>/2024/09/22/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-C-%E8%AF%AD%E8%A8%80%E7%89%88-%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>996.icu</category>
        <category>基础</category>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>996.icu</tag>
        <tag>基础</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>emacs</title>
    <url>/2024/09/24/emacs/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>器</category>
        <category>emacs</category>
      </categories>
      <tags>
        <tag>器</tag>
        <tag>emacs</tag>
      </tags>
  </entry>
  <entry>
    <title>dotnet hello world</title>
    <url>/2024/09/25/dotnet-hello-world/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>dotnet</category>
      </categories>
      <tags>
        <tag>dotnet</tag>
      </tags>
  </entry>
  <entry>
    <title>jemeter 基础</title>
    <url>/2024/09/26/jemeter-%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.cnblogs.com/imyalost/p/7062784.html">《jmeter：菜鸟入门到进阶》系列</a></p>
]]></content>
      <categories>
        <category>测试</category>
        <category>jmeter</category>
      </categories>
      <tags>
        <tag>测试</tag>
        <tag>jmeter</tag>
      </tags>
  </entry>
  <entry>
    <title>spring mvc 接收参数</title>
    <url>/2024/09/27/spring-mvc-%E6%8E%A5%E5%8F%97%E5%8F%82%E6%95%B0/</url>
    <content><![CDATA[<h1 id="接收各种参数"><a href="#接收各种参数" class="headerlink" title="接收各种参数"></a>接收各种参数</h1><h1 id="参数校验"><a href="#参数校验" class="headerlink" title="参数校验"></a>参数校验</h1>]]></content>
      <categories>
        <category>java</category>
        <category>ssm</category>
        <category>spring mvc</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>ssm</tag>
        <tag>spring mvc</tag>
      </tags>
  </entry>
  <entry>
    <title>spring boot 整合 elk</title>
    <url>/2024/09/28/spring-boot-%E6%95%B4%E5%90%88-elk/</url>
    <content><![CDATA[<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.cnblogs.com/jiangcong/p/14683318.html">windows下部署ELK详细教程</a><br><a href="https://blog.csdn.net/lewky_liu/category_9280139.html">ELK系列(Elasticsearch+Logstash+Kibana)</a></p>
]]></content>
      <categories>
        <category>java</category>
        <category>ssm</category>
        <category>ssm 整合</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>ssm</tag>
        <tag>ssm 整合</tag>
      </tags>
  </entry>
  <entry>
    <title>spring boot java groovy 混编</title>
    <url>/2024/09/28/spring-boot-java-groovy-%E6%B7%B7%E7%BC%96/</url>
    <content><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://groovy-lang.cn/documentation.html">Groovy 中文文档</a></p>
<p><a href="https://www.cnblogs.com/chenxibobo/p/6402768.html">Groovy脚本基础全攻略</a></p>
<p><a href="https://blog.csdn.net/lly576403061/article/details/131505699">Groovy系列三 Java SpringBoot 整合 Groovy</a><br><a href="https://blog.csdn.net/sleetdream/article/details/88791861">SpringBoot+Groovy运行动态脚本</a><br><a href="https://blog.csdn.net/weixin_46488959/article/details/141107469">Java 调用 Groovy脚本的五种方式</a></p>
<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="pom"><a href="#pom" class="headerlink" title="pom"></a>pom</h2><div class="note info no-icon simple"><p><code>type</code> 必须是 <code>pom</code></p>
</div>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.groovy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>groovy-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="使用-groovy-定义一个-bean"><a href="#使用-groovy-定义一个-bean" class="headerlink" title="使用 groovy 定义一个 bean"></a>使用 groovy 定义一个 bean</h2><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.groovy</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HelloService</span> &#123;</span><br><span class="line"></span><br><span class="line">    String sayHello() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="使用该-bean"><a href="#使用该-bean" class="headerlink" title="使用该 bean"></a>使用该 bean</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.groovy.HelloService;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;admin/system/dict&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysDictController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> HelloService helloService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;typeList&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title function_">typeList</span><span class="params">()</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;say:&#123;&#125;&quot;</span>,helloService.sayHello());</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;group&quot;</span>, <span class="string">&quot;system&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="输出如下"><a href="#输出如下" class="headerlink" title="输出如下"></a>输出如下</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-09-28 09:54:50.752 [http-nio-8092-exec-1] INFO  c.l.j.m.s.d.c.SysDictController - say:hello world</span><br></pre></td></tr></table></figure>

<h1 id="GroovyScriptEngine-方式调用脚本"><a href="#GroovyScriptEngine-方式调用脚本" class="headerlink" title="GroovyScriptEngine 方式调用脚本"></a>GroovyScriptEngine 方式调用脚本</h1><h2 id="groovy-脚本"><a href="#groovy-脚本" class="headerlink" title="groovy 脚本"></a>groovy 脚本</h2><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> groovy</span><br><span class="line"></span><br><span class="line">String hello(String name) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;hello &quot;</span> + name</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.groovy.HelloService;</span><br><span class="line"><span class="keyword">import</span> groovy.lang.Binding;</span><br><span class="line"><span class="keyword">import</span> groovy.lang.Script;</span><br><span class="line"><span class="keyword">import</span> groovy.util.GroovyScriptEngine;</span><br><span class="line"><span class="keyword">import</span> groovy.util.ResourceException;</span><br><span class="line"><span class="keyword">import</span> groovy.util.ScriptException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.exception.ExceptionUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;admin/system/dict&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysDictController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> HelloService helloService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;typeList&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title function_">typeList</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 使用 groovy 定义 bean</span></span><br><span class="line">        log.info(<span class="string">&quot;say:&#123;&#125;&quot;</span>, helloService.sayHello());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 加载 groovy 脚本</span></span><br><span class="line">        <span class="type">GroovyScriptEngine</span> <span class="variable">engine</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            engine = <span class="keyword">new</span> <span class="title class_">GroovyScriptEngine</span>(<span class="string">&quot;E:/github/ghost-hello-project/ssm-study/spring-boot-groovy/src/main/resources/groovy&quot;</span>);</span><br><span class="line">            <span class="type">Script</span> <span class="variable">script</span> <span class="operator">=</span> engine.createScript(<span class="string">&quot;HelloGroovy.groovy&quot;</span>, <span class="keyword">new</span> <span class="title class_">Binding</span>());</span><br><span class="line">            log.info(<span class="string">&quot;groovy result:&#123;&#125;&quot;</span>, script.invokeMethod(<span class="string">&quot;hello&quot;</span>, <span class="string">&quot;laolang&quot;</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException | ResourceException | ScriptException e) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;script error:&#123;&#125;&quot;</span>, ExceptionUtils.getMessage(e));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;group&quot;</span>, <span class="string">&quot;system&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-09-28 10:11:57.306 [http-nio-8092-exec-1] INFO  c.l.j.m.s.d.c.SysDictController - say:hello world</span><br><span class="line">2024-09-28 10:11:57.440 [http-nio-8092-exec-1] INFO  c.l.j.m.s.d.c.SysDictController - groovy result:hello laolang</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>java</category>
        <category>ssm</category>
        <category>spring boot</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>spring boot</tag>
        <tag>ssm</tag>
      </tags>
  </entry>
  <entry>
    <title>spring boot 自动化测试解决方案</title>
    <url>/2024/09/28/spring-boot-%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<h1 id="设计概要"><a href="#设计概要" class="headerlink" title="设计概要"></a>设计概要</h1><ol>
<li>声明式 <code>http</code> 请求</li>
<li>测试报告支持</li>
<li>流程控制支持,类似 <code>flowable</code></li>
<li><code>groovy dsl</code> 脚本化</li>
</ol>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><h2 id="httpclient"><a href="#httpclient" class="headerlink" title="httpclient"></a>httpclient</h2><h3 id="okhttp"><a href="#okhttp" class="headerlink" title="okhttp"></a>okhttp</h3><p><strong>官方文档</strong><br><a href="https://square.github.io/okhttp/">https://square.github.io/okhttp/</a></p>
<p><strong>胡飞洋的Android进阶</strong><br><a href="https://cloud.tencent.com/developer/article/1667338">网络请求框架OkHttp3全解系列（一）：OkHttp的基本使用</a><br><a href="https://cloud.tencent.com/developer/article/1667339">网络请求框架OkHttp3全解系列 - （二）OkHttp的工作流程分析</a><br><a href="https://cloud.tencent.com/developer/article/1667342">网络请求框架OkHttp3全解系列 - （三）拦截器详解1：重试重定向、桥、缓存（重点）</a><br><a href="https://cloud.tencent.com/developer/article/1667344">你想要的系列：网络请求框架OkHttp3全解系列 - （四）拦截器详解2：连接、请求服务（重点）</a></p>
<p><a href="https://www.cnblogs.com/it-tsz/p/11748674.html">基本使用——OkHttp3详细使用教程</a></p>
<p><a href="https://www.baeldung-cn.com/guide-to-okhttp">OkHttp 使用教程</a></p>
<p><strong>OkHttp官方文档 翻译</strong><br><a href="https://www.cnblogs.com/xiaxveliang/p/13406804.html">OKHttp 官方文档【一】</a><br><a href="https://www.cnblogs.com/xiaxveliang/p/13414320.html">OKHttp 官方文档【二】</a></p>
<p><a href="https://blog.csdn.net/jackingzheng/article/details/51778793">OkHttp 官方中文文档</a></p>
<p><a href="https://zthinker.com/archives/okhttp%E5%AE%98%E6%96%B9%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3">OkHttp 官方中文文档</a></p>
<h3 id="Spring-RestTemplate"><a href="#Spring-RestTemplate" class="headerlink" title="Spring RestTemplate"></a>Spring RestTemplate</h3><p><a href="https://docs.springjava.cn/spring-framework/reference/integration/rest-clients.html">spring 中文文档 · REST 客户端</a><br><a href="https://springdoc.cn/spring/integration.html#rest-resttemplate">spring 中文网 · 1.2. RestTemplate</a></p>
<h3 id="Spring-WebClient"><a href="#Spring-WebClient" class="headerlink" title="Spring WebClient"></a>Spring WebClient</h3><h3 id="feign"><a href="#feign" class="headerlink" title="feign"></a>feign</h3><p><a href="https://springdoc.cn/spring-cloud-openfeign/">Spring Cloud OpenFeign 中文文档</a></p>
<p><strong>阿好程序 springbot 专栏</strong><br><a href="https://blog.csdn.net/qq_28754027/article/details/129924437">如何在Spring Boot中使用OpenFeign，这一篇足够了。</a><br><a href="https://blog.csdn.net/qq_28754027/article/details/129927529">OpenFeign修改默认通讯协议Https</a><br><a href="https://blog.csdn.net/qq_28754027/article/details/129927746">OpenFeign默认通讯方式修改成OkHttp，包含FeignConfigruation自定义、OkHttp客户端自定义详细配置介绍</a></p>
<h2 id="liteflow"><a href="#liteflow" class="headerlink" title="liteflow"></a>liteflow</h2><p><a href="https://gitee.com/dromara/liteFlow">https://gitee.com/dromara/liteFlow</a></p>
<h2 id="接口与自动化测试解决方案"><a href="#接口与自动化测试解决方案" class="headerlink" title="接口与自动化测试解决方案"></a>接口与自动化测试解决方案</h2><p><a href="http://blog.eolinker.com/">eolinker</a><br><a href="https://www.fit2cloud.com/metersphere/index.html">MeterSphere </a></p>
<h2 id="jmeter"><a href="#jmeter" class="headerlink" title="jmeter"></a>jmeter</h2><p><a href="https://www.cnblogs.com/liufei96/p/13799669.html">java使用jmeter生成jmx文件并运行</a></p>
<h2 id="postman"><a href="#postman" class="headerlink" title="postman"></a>postman</h2><p><a href="https://postman.xiniushu.com/">Postman 中文文档</a><br><a href="https://www.postman.com/release-notes/postman-app/">postman 各个版本下载</a><br><a href="https://www.filehorse.com/download-postman/old-versions/">postman windows 版本下载</a><br><a href="https://www.filehorse.com/download-postman/75425/download/">postman 9.31.0 下载地址</a></p>
<p><a href="https://blog.csdn.net/iTarget/article/details/132841694">postman archive &#x2F; postman old versions &#x2F; postman 历史版本下载</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Installing earlier versions of Postman:</span><br><span class="line"></span><br><span class="line">    Downloading Postman v9:</span><br><span class="line"></span><br><span class="line">        Download Postman v9 for Windows 64-bit: https://go.pstmn.io/dl-win64-v9-latest</span><br><span class="line"></span><br><span class="line">        Download Postman v9 for Linux 64-bit: https://go.pstmn.io/dl-linux64-v9-latest</span><br><span class="line"></span><br><span class="line">        Download Postman v9 for macOS (Intel chip) 64-bit: https://go.pstmn.io/dl-osx64-v9-latest</span><br><span class="line"></span><br><span class="line">        Download Postman v9 for macOS (Apple silicon) 64-bit: https://go.pstmn.io/dl-osxarm64-v9-latest</span><br><span class="line"></span><br><span class="line">    Downloading Postman v8:</span><br><span class="line"></span><br><span class="line">        Download Postman v8 for Windows 64-bit: https://go.pstmn.io/dl-win64-v8-latest</span><br><span class="line"></span><br><span class="line">        Download Postman v8 for Windows 32-bit: https://go.pstmn.io/dl-win32-v8-latest</span><br><span class="line"></span><br><span class="line">        Download Postman v8 for Linux 64-bit: https://go.pstmn.io/dl-linux64-v8-latest</span><br><span class="line"></span><br><span class="line">        Download Postman v8 for macOS 64-bit: https://go.pstmn.io/dl-macos64-v8-latest</span><br><span class="line"></span><br><span class="line">    Downloading Postman v7:</span><br><span class="line"></span><br><span class="line">        Download Postman v7 for Windows 64-bit: https://go.pstmn.io/dl-win64-v7-latest</span><br><span class="line"></span><br><span class="line">        Download Postman v7 for Windows 32-bit: https://go.pstmn.io/dl-win32-v7-latest</span><br><span class="line"></span><br><span class="line">        Download Postman v7 for Linux 64-bit: https://go.pstmn.io/dl-linux64-v7-latest</span><br><span class="line"></span><br><span class="line">        Download Postman v7 for macOS 64-bit: https://go.pstmn.io/dl-macos64-v7-latest</span><br><span class="line"></span><br><span class="line">     Downloading Postman v6:</span><br><span class="line"></span><br><span class="line">        Download Postman v6 for Windows 64-bit: https://go.pstmn.io/dl-win64-v6-latest</span><br><span class="line"></span><br><span class="line">        Download Postman v6 for Windows 32-bit: https://go.pstmn.io/dl-win32-v6-latest</span><br><span class="line"></span><br><span class="line">        Download Postman v6 for Linux 64-bit: https://go.pstmn.io/dl-linux64-v6-latest</span><br><span class="line"></span><br><span class="line">        Download Postman v6 for macOS 64-bit: https://go.pstmn.io/dl-macos64-v6-latest</span><br></pre></td></tr></table></figure>

<h2 id="junit"><a href="#junit" class="headerlink" title="junit"></a>junit</h2><p><a href="https://blog.csdn.net/ryo1060732496/category_9276134.html">Junit5 入门系列</a><br><a href="https://www.cnblogs.com/one12138/p/11536492.html">Java单元测试之JUnit 5快速上手</a><br><a href="https://blog.csdn.net/qq_15283475/article/details/127328418">《单元测试》Junit5入门教程——非常详细，入门即精通</a><br><a href="https://blog.csdn.net/qq_15283475/article/details/127347968">单元测试-Junit5结合Allure2生成漂亮的测试报告，老板都夸你厉害</a><br><a href="https://zhuanlan.zhihu.com/p/402270321">使用JUnit5，Mockito，Hamcrest进行单元测试</a><br><a href="https://www.cnblogs.com/juno3550/p/15427113.html">Allure + JUnit5</a></p>
]]></content>
      <categories>
        <category>测试</category>
        <category>解决方案</category>
      </categories>
      <tags>
        <tag>测试</tag>
        <tag>解决方案</tag>
      </tags>
  </entry>
  <entry>
    <title>okhttp 笔记</title>
    <url>/2024/09/28/okhttp-%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><strong>官方文档</strong><br><a href="https://square.github.io/okhttp/">https://square.github.io/okhttp/</a></p>
<p><strong>胡飞洋的Android进阶</strong><br><a href="https://cloud.tencent.com/developer/article/1667338">网络请求框架OkHttp3全解系列（一）：OkHttp的基本使用</a><br><a href="https://cloud.tencent.com/developer/article/1667339">网络请求框架OkHttp3全解系列 - （二）OkHttp的工作流程分析</a><br><a href="https://cloud.tencent.com/developer/article/1667342">网络请求框架OkHttp3全解系列 - （三）拦截器详解1：重试重定向、桥、缓存（重点）</a><br><a href="https://cloud.tencent.com/developer/article/1667344">你想要的系列：网络请求框架OkHttp3全解系列 - （四）拦截器详解2：连接、请求服务（重点）</a></p>
<p><a href="https://www.cnblogs.com/it-tsz/p/11748674.html">基本使用——OkHttp3详细使用教程</a></p>
<p><a href="https://www.baeldung-cn.com/guide-to-okhttp">OkHttp 使用教程</a></p>
<h1 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h1><h2 id="接口准备"><a href="#接口准备" class="headerlink" title="接口准备"></a>接口准备</h2><h3 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.framework.common.domain.R;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.logic.SysDictLogic;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.req.SysDictTypeListReq;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.rsp.SysDictTypeListRsp;</span><br><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;admin/system/dict&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SydDictController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> SysDictLogic sysDictLogic;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;getMethod&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;SysDictTypeListRsp&gt; <span class="title function_">getMethod</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok(sysDictLogic.getMethod());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;getMethodWithParam&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;SysDictTypeListRsp&gt; <span class="title function_">getMethodWithParam</span><span class="params">(<span class="meta">@RequestParam(value = &quot;id&quot;)</span> Long id,</span></span><br><span class="line"><span class="params">                                                    <span class="meta">@RequestParam(value = &quot;name&quot;, defaultValue = &quot;laolang&quot;)</span> String name)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok(sysDictLogic.getMethodWithParam(id, name));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;postMethod&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;SysDictTypeListRsp&gt; <span class="title function_">postMethod</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok(sysDictLogic.postMethod());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;postMethodWithFormData&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;SysDictTypeListRsp&gt; <span class="title function_">postMethodWithFormData</span><span class="params">(SysDictTypeListReq req)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok(sysDictLogic.postMethodWithFormData(req));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;postMethodWithRequestBody&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;SysDictTypeListRsp&gt; <span class="title function_">postMethodWithRequestBody</span><span class="params">(<span class="meta">@RequestBody</span> SysDictTypeListReq req)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok(sysDictLogic.postMethodWithRequestBody(req));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="logic"><a href="#logic" class="headerlink" title="logic"></a>logic</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.logic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.framework.common.util.JsonUtil;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.req.SysDictTypeListReq;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.rsp.SysDictTypeListRsp;</span><br><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysDictLogic</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> SysDictTypeListRsp <span class="title function_">getMethod</span><span class="params">()</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;getMethod&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> buildRsp();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> SysDictTypeListRsp <span class="title function_">getMethodWithParam</span><span class="params">(Long id, String name)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;getMethodWithParam&quot;</span>);</span><br><span class="line">        log.info(<span class="string">&quot;id:&#123;&#125;, name:&#123;&#125;&quot;</span>, id, name);</span><br><span class="line">        <span class="keyword">return</span> buildRsp();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> SysDictTypeListRsp <span class="title function_">postMethod</span><span class="params">()</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;postMethod&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> buildRsp();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> SysDictTypeListRsp <span class="title function_">postMethodWithFormData</span><span class="params">(SysDictTypeListReq req)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;postMethodWithFormData. req:&#123;&#125;&quot;</span>, JsonUtil.toJson(req));</span><br><span class="line">        <span class="keyword">return</span> buildRsp();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> SysDictTypeListRsp <span class="title function_">postMethodWithRequestBody</span><span class="params">(SysDictTypeListReq req)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;postMethodWithRequestBody. req:&#123;&#125;&quot;</span>, JsonUtil.toJson(req));</span><br><span class="line">        <span class="keyword">return</span> buildRsp();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> SysDictTypeListRsp <span class="title function_">buildRsp</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">SysDictTypeListRsp</span> <span class="variable">rsp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysDictTypeListRsp</span>();</span><br><span class="line">        rsp.setId(<span class="number">1L</span>);</span><br><span class="line">        rsp.setName(<span class="string">&quot;性别&quot;</span>);</span><br><span class="line">        rsp.setType(<span class="string">&quot;gender&quot;</span>);</span><br><span class="line">        rsp.setTypeDesc(<span class="string">&quot;性别&quot;</span>);</span><br><span class="line">        rsp.setGroupCode(<span class="string">&quot;system&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> rsp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="okhttp-简单使用"><a href="#okhttp-简单使用" class="headerlink" title="okhttp 简单使用"></a>okhttp 简单使用</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.json.JSONObject;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.json.JSONUtil;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> okhttp3.FormBody;</span><br><span class="line"><span class="keyword">import</span> okhttp3.HttpUrl;</span><br><span class="line"><span class="keyword">import</span> okhttp3.MediaType;</span><br><span class="line"><span class="keyword">import</span> okhttp3.OkHttpClient;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Request;</span><br><span class="line"><span class="keyword">import</span> okhttp3.RequestBody;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Response;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.BeforeClass;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OkHttpSimpleTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">MediaType</span> <span class="variable">MEDIA_TYPE_JSON</span> <span class="operator">=</span> MediaType.parse(<span class="string">&quot;application/json; charset=utf-8&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">BASE_URL</span> <span class="operator">=</span> <span class="string">&quot;http://localhost:8092/admin/system/dict&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> OkHttpClient client;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BeforeClass</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeClass</span><span class="params">()</span> &#123;</span><br><span class="line">        client = <span class="keyword">new</span> <span class="title class_">OkHttpClient</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 无参 get 请求</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetMethod</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> BASE_URL + <span class="string">&quot;/getMethod&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">Request</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Request</span>.Builder()</span><br><span class="line">                .url(url)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="keyword">try</span> (<span class="type">Response</span> <span class="variable">response</span> <span class="operator">=</span> client.newCall(request).execute()) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;code:&#123;&#125;&quot;</span>, response.code());</span><br><span class="line">            log.info(<span class="string">&quot;body:&#123;&#125;&quot;</span>, response.body().string());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * get 请求带参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetMethodWithParam</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        HttpUrl.<span class="type">Builder</span> <span class="variable">urlBuilder</span> <span class="operator">=</span> HttpUrl.parse(BASE_URL + <span class="string">&quot;/getMethodWithParam&quot;</span>).newBuilder();</span><br><span class="line">        urlBuilder.addQueryParameter(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;1&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> urlBuilder.build().toString();</span><br><span class="line"></span><br><span class="line">        <span class="type">Request</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Request</span>.Builder()</span><br><span class="line">                .url(url)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="keyword">try</span> (<span class="type">Response</span> <span class="variable">response</span> <span class="operator">=</span> client.newCall(request).execute()) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;code:&#123;&#125;&quot;</span>, response.code());</span><br><span class="line">            log.info(<span class="string">&quot;body:&#123;&#125;&quot;</span>, response.body().string());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 无参 post 请求</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPostMethod</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> BASE_URL + <span class="string">&quot;/postMethod&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">FormBody</span> <span class="variable">formBody</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FormBody</span>.Builder().build();</span><br><span class="line">        <span class="type">Request</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Request</span>.Builder()</span><br><span class="line">                .url(url)</span><br><span class="line">                .post(formBody)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="keyword">try</span> (<span class="type">Response</span> <span class="variable">response</span> <span class="operator">=</span> client.newCall(request).execute()) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;code:&#123;&#125;&quot;</span>, response.code());</span><br><span class="line">            log.info(<span class="string">&quot;body:&#123;&#125;&quot;</span>, response.body().string());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * post form 表单请求</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPostMethodWithFormData</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> BASE_URL + <span class="string">&quot;/postMethodWithFormData&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">FormBody</span> <span class="variable">formBody</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FormBody</span>.Builder()</span><br><span class="line">                .add(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;gender&quot;</span>)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="type">Request</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Request</span>.Builder()</span><br><span class="line">                .url(url)</span><br><span class="line">                .post(formBody)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="keyword">try</span> (<span class="type">Response</span> <span class="variable">response</span> <span class="operator">=</span> client.newCall(request).execute()) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;code:&#123;&#125;&quot;</span>, response.code());</span><br><span class="line">            log.info(<span class="string">&quot;body:&#123;&#125;&quot;</span>, response.body().string());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * post json 请求</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPostMethodWithRequestBody</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> BASE_URL + <span class="string">&quot;/postMethodWithRequestBody&quot;</span>;</span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">json</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">        json.set(<span class="string">&quot;id&quot;</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="type">RequestBody</span> <span class="variable">requestBody</span> <span class="operator">=</span> RequestBody.create(JSONUtil.toJsonStr(json), MEDIA_TYPE_JSON);</span><br><span class="line">        <span class="type">Request</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Request</span>.Builder()</span><br><span class="line">                .url(url)</span><br><span class="line">                .post(requestBody)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="keyword">try</span> (<span class="type">Response</span> <span class="variable">response</span> <span class="operator">=</span> client.newCall(request).execute()) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;code:&#123;&#125;&quot;</span>, response.code());</span><br><span class="line">            log.info(<span class="string">&quot;body:&#123;&#125;&quot;</span>, response.body().string());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h1><h1 id="连接池"><a href="#连接池" class="headerlink" title="连接池"></a>连接池</h1>]]></content>
      <categories>
        <category>java</category>
        <category>request</category>
        <category>okhttp</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>request</tag>
        <tag>okhttp</tag>
      </tags>
  </entry>
  <entry>
    <title>RestTemplate 笔记</title>
    <url>/2024/09/29/RestTemplate-%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://docs.springjava.cn/spring-framework/reference/integration/rest-clients.html">spring 中文文档 · REST 客户端</a><br><a href="https://springdoc.cn/spring/integration.html#rest-resttemplate">spring 中文网 · 1.2. RestTemplate</a></p>
<h1 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h1><h2 id="接口准备"><a href="#接口准备" class="headerlink" title="接口准备"></a>接口准备</h2><h3 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.framework.common.domain.R;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.logic.SysDictLogic;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.req.SysDictTypeListReq;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.rsp.SysDictTypeListRsp;</span><br><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;admin/system/dict&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SydDictController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> SysDictLogic sysDictLogic;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;getMethod&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;SysDictTypeListRsp&gt; <span class="title function_">getMethod</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok(sysDictLogic.getMethod());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;getMethodWithParam&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;SysDictTypeListRsp&gt; <span class="title function_">getMethodWithParam</span><span class="params">(<span class="meta">@RequestParam(value = &quot;id&quot;)</span> Long id,</span></span><br><span class="line"><span class="params">                                                    <span class="meta">@RequestParam(value = &quot;name&quot;, defaultValue = &quot;laolang&quot;)</span> String name)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok(sysDictLogic.getMethodWithParam(id, name));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;postMethod&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;SysDictTypeListRsp&gt; <span class="title function_">postMethod</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok(sysDictLogic.postMethod());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;postMethodWithFormData&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;SysDictTypeListRsp&gt; <span class="title function_">postMethodWithFormData</span><span class="params">(SysDictTypeListReq req)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok(sysDictLogic.postMethodWithFormData(req));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;postMethodWithRequestBody&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;SysDictTypeListRsp&gt; <span class="title function_">postMethodWithRequestBody</span><span class="params">(<span class="meta">@RequestBody</span> SysDictTypeListReq req)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok(sysDictLogic.postMethodWithRequestBody(req));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="logic"><a href="#logic" class="headerlink" title="logic"></a>logic</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.logic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.framework.common.util.JsonUtil;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.req.SysDictTypeListReq;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.rsp.SysDictTypeListRsp;</span><br><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysDictLogic</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> SysDictTypeListRsp <span class="title function_">getMethod</span><span class="params">()</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;getMethod&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> buildRsp();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> SysDictTypeListRsp <span class="title function_">getMethodWithParam</span><span class="params">(Long id, String name)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;getMethodWithParam&quot;</span>);</span><br><span class="line">        log.info(<span class="string">&quot;id:&#123;&#125;, name:&#123;&#125;&quot;</span>, id, name);</span><br><span class="line">        <span class="keyword">return</span> buildRsp();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> SysDictTypeListRsp <span class="title function_">postMethod</span><span class="params">()</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;postMethod&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> buildRsp();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> SysDictTypeListRsp <span class="title function_">postMethodWithFormData</span><span class="params">(SysDictTypeListReq req)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;postMethodWithFormData. req:&#123;&#125;&quot;</span>, JsonUtil.toJson(req));</span><br><span class="line">        <span class="keyword">return</span> buildRsp();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> SysDictTypeListRsp <span class="title function_">postMethodWithRequestBody</span><span class="params">(SysDictTypeListReq req)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;postMethodWithRequestBody. req:&#123;&#125;&quot;</span>, JsonUtil.toJson(req));</span><br><span class="line">        <span class="keyword">return</span> buildRsp();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> SysDictTypeListRsp <span class="title function_">buildRsp</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">SysDictTypeListRsp</span> <span class="variable">rsp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysDictTypeListRsp</span>();</span><br><span class="line">        rsp.setId(<span class="number">1L</span>);</span><br><span class="line">        rsp.setName(<span class="string">&quot;性别&quot;</span>);</span><br><span class="line">        rsp.setType(<span class="string">&quot;gender&quot;</span>);</span><br><span class="line">        rsp.setTypeDesc(<span class="string">&quot;性别&quot;</span>);</span><br><span class="line">        rsp.setGroupCode(<span class="string">&quot;system&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> rsp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="restTemplate-简单使用"><a href="#restTemplate-简单使用" class="headerlink" title="restTemplate 简单使用"></a>restTemplate 简单使用</h2><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RestTemplateConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RestTemplate <span class="title function_">restTemplate</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RestTemplate</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpHeaders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.testng.AbstractTestNGSpringContextTests;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.LinkedMultiValueMap;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.MultiValueMap;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@SpringBootTest(classes = RestTemplateStudyApplication.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RestTemplateSimpleTest</span> <span class="keyword">extends</span> <span class="title class_">AbstractTestNGSpringContextTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">BASE_URL</span> <span class="operator">=</span> <span class="string">&quot;http://localhost:8092/admin/system/dict&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 无参 get 请求</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetMethod</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> BASE_URL + <span class="string">&quot;/getMethod&quot;</span>;</span><br><span class="line">        ResponseEntity&lt;String&gt; response = restTemplate.getForEntity(url, String.class);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;code:&#123;&#125;&quot;</span>, response.getStatusCode().value());</span><br><span class="line">        log.info(<span class="string">&quot;body:&#123;&#125;&quot;</span>, response.getBody());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * get 请求带参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetMethodWithParam</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> BASE_URL + <span class="string">&quot;/getMethodWithParam?id=1&quot;</span>;</span><br><span class="line">        ResponseEntity&lt;String&gt; response = restTemplate.getForEntity(url, String.class);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;code:&#123;&#125;&quot;</span>, response.getStatusCode().value());</span><br><span class="line">        log.info(<span class="string">&quot;body:&#123;&#125;&quot;</span>, response.getBody());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 无参 post 请求</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPostMethod</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> BASE_URL + <span class="string">&quot;/postMethod&quot;</span>;</span><br><span class="line">        MultiValueMap&lt;String, String&gt; param = <span class="keyword">new</span> <span class="title class_">LinkedMultiValueMap</span>&lt;&gt;();</span><br><span class="line">        ResponseEntity&lt;String&gt; response = restTemplate.postForEntity(url, param, String.class);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;code:&#123;&#125;&quot;</span>, response.getStatusCode().value());</span><br><span class="line">        log.info(<span class="string">&quot;body:&#123;&#125;&quot;</span>, response.getBody());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * post form 表单请求</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPostMethodWithFormData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> BASE_URL + <span class="string">&quot;/postMethodWithFormData&quot;</span>;</span><br><span class="line">        MultiValueMap&lt;String, Object&gt; param = <span class="keyword">new</span> <span class="title class_">LinkedMultiValueMap</span>&lt;&gt;();</span><br><span class="line">        param.set(<span class="string">&quot;id&quot;</span>, <span class="number">1</span>);</span><br><span class="line">        ResponseEntity&lt;String&gt; response = restTemplate.postForEntity(url, param, String.class);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;code:&#123;&#125;&quot;</span>, response.getStatusCode().value());</span><br><span class="line">        log.info(<span class="string">&quot;body:&#123;&#125;&quot;</span>, response.getBody());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * post json 请求</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPostMethodWithRequestBody</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> BASE_URL + <span class="string">&quot;/postMethodWithRequestBody&quot;</span>;</span><br><span class="line">        <span class="type">HttpHeaders</span> <span class="variable">headers</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpHeaders</span>();</span><br><span class="line">        headers.setContentType(MediaType.APPLICATION_JSON_UTF8);</span><br><span class="line">        Map&lt;String, Object&gt; param = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        param.put(<span class="string">&quot;id&quot;</span>, <span class="number">1</span>);</span><br><span class="line">        HttpEntity&lt;Map&lt;String, Object&gt;&gt; entity = <span class="keyword">new</span> <span class="title class_">HttpEntity</span>&lt;&gt;(param, headers);</span><br><span class="line">        ResponseEntity&lt;String&gt; response = restTemplate.postForEntity(url, entity, String.class);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;code:&#123;&#125;&quot;</span>, response.getStatusCode().value());</span><br><span class="line">        log.info(<span class="string">&quot;body:&#123;&#125;&quot;</span>, response.getBody());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>java</category>
        <category>request</category>
        <category>RestTemplate</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>request</tag>
        <tag>RestTemplate</tag>
      </tags>
  </entry>
  <entry>
    <title>openfeign 笔记</title>
    <url>/2024/09/30/openfeign-%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://springdoc.cn/spring-cloud-openfeign/">Spring Cloud OpenFeign 中文文档</a></p>
<p><strong>阿好程序 springbot 专栏</strong><br><a href="https://blog.csdn.net/qq_28754027/article/details/129924437">如何在Spring Boot中使用OpenFeign，这一篇足够了。</a><br><a href="https://blog.csdn.net/qq_28754027/article/details/129927529">OpenFeign修改默认通讯协议Https</a><br><a href="https://blog.csdn.net/qq_28754027/article/details/129927746">OpenFeign默认通讯方式修改成OkHttp，包含FeignConfigruation自定义、OkHttp客户端自定义详细配置介绍</a></p>
<h1 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h1><h2 id="接口准备"><a href="#接口准备" class="headerlink" title="接口准备"></a>接口准备</h2><h3 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.framework.common.domain.R;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.logic.SysDictLogic;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.req.SysDictTypeListReq;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.rsp.SysDictTypeListRsp;</span><br><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;admin/system/dict&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SydDictController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> SysDictLogic sysDictLogic;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;getMethod&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;SysDictTypeListRsp&gt; <span class="title function_">getMethod</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok(sysDictLogic.getMethod());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;getMethodWithParam&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;SysDictTypeListRsp&gt; <span class="title function_">getMethodWithParam</span><span class="params">(<span class="meta">@RequestParam(value = &quot;id&quot;)</span> Long id,</span></span><br><span class="line"><span class="params">                                                    <span class="meta">@RequestParam(value = &quot;name&quot;, defaultValue = &quot;laolang&quot;)</span> String name)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok(sysDictLogic.getMethodWithParam(id, name));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;postMethod&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;SysDictTypeListRsp&gt; <span class="title function_">postMethod</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok(sysDictLogic.postMethod());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;postMethodWithFormData&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;SysDictTypeListRsp&gt; <span class="title function_">postMethodWithFormData</span><span class="params">(SysDictTypeListReq req)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok(sysDictLogic.postMethodWithFormData(req));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;postMethodWithRequestBody&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;SysDictTypeListRsp&gt; <span class="title function_">postMethodWithRequestBody</span><span class="params">(<span class="meta">@RequestBody</span> SysDictTypeListReq req)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok(sysDictLogic.postMethodWithRequestBody(req));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="logic"><a href="#logic" class="headerlink" title="logic"></a>logic</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.logic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.framework.common.util.JsonUtil;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.req.SysDictTypeListReq;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.<span class="keyword">module</span>.system.dict.rsp.SysDictTypeListRsp;</span><br><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysDictLogic</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> SysDictTypeListRsp <span class="title function_">getMethod</span><span class="params">()</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;getMethod&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> buildRsp();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> SysDictTypeListRsp <span class="title function_">getMethodWithParam</span><span class="params">(Long id, String name)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;getMethodWithParam&quot;</span>);</span><br><span class="line">        log.info(<span class="string">&quot;id:&#123;&#125;, name:&#123;&#125;&quot;</span>, id, name);</span><br><span class="line">        <span class="keyword">return</span> buildRsp();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> SysDictTypeListRsp <span class="title function_">postMethod</span><span class="params">()</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;postMethod&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> buildRsp();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> SysDictTypeListRsp <span class="title function_">postMethodWithFormData</span><span class="params">(SysDictTypeListReq req)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;postMethodWithFormData. req:&#123;&#125;&quot;</span>, JsonUtil.toJson(req));</span><br><span class="line">        <span class="keyword">return</span> buildRsp();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> SysDictTypeListRsp <span class="title function_">postMethodWithRequestBody</span><span class="params">(SysDictTypeListReq req)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;postMethodWithRequestBody. req:&#123;&#125;&quot;</span>, JsonUtil.toJson(req));</span><br><span class="line">        <span class="keyword">return</span> buildRsp();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> SysDictTypeListRsp <span class="title function_">buildRsp</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">SysDictTypeListRsp</span> <span class="variable">rsp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysDictTypeListRsp</span>();</span><br><span class="line">        rsp.setId(<span class="number">1L</span>);</span><br><span class="line">        rsp.setName(<span class="string">&quot;性别&quot;</span>);</span><br><span class="line">        rsp.setType(<span class="string">&quot;gender&quot;</span>);</span><br><span class="line">        rsp.setTypeDesc(<span class="string">&quot;性别&quot;</span>);</span><br><span class="line">        rsp.setGroupCode(<span class="string">&quot;system&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> rsp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="基本使用-1"><a href="#基本使用-1" class="headerlink" title="基本使用"></a>基本使用</h2><h3 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.laolang.jx<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>openfeign-study<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven-resources-plugin.version</span>&gt;</span>2.7<span class="tag">&lt;/<span class="name">maven-resources-plugin.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven-compiler-plugin.version</span>&gt;</span>3.11.0<span class="tag">&lt;/<span class="name">maven-compiler-plugin.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">springboot.version</span>&gt;</span>2.7.18<span class="tag">&lt;/<span class="name">springboot.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>2021.0.7<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">tlog.version</span>&gt;</span>1.5.0<span class="tag">&lt;/<span class="name">tlog.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- tool --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hutool.version</span>&gt;</span>5.8.11<span class="tag">&lt;/<span class="name">hutool.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">vavr.version</span>&gt;</span>0.10.4<span class="tag">&lt;/<span class="name">vavr.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapstruct.version</span>&gt;</span>1.4.2.Final<span class="tag">&lt;/<span class="name">mapstruct.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">guava.version</span>&gt;</span>23.0<span class="tag">&lt;/<span class="name">guava.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- test --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">testng.version</span>&gt;</span>6.14.3<span class="tag">&lt;/<span class="name">testng.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;springboot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- spring cloud 依赖 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- web 相关 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-json<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 远程服务调用 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- log4j2 日志 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-log4j2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- tool --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;hutool.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.vavr<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>vavr<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;vavr.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mapstruct<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapstruct<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mapstruct.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mapstruct<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapstruct-jdk8<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mapstruct.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mapstruct<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapstruct-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mapstruct.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.guava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guava<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;guava.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 测试相关 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.testng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>testng<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;testng.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources/<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-resources-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-compiler-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;maven.compiler.source&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;maven.compiler.target&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>$&#123;project.build.sourceEncoding&#125;<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;springboot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="启动类"><a href="#启动类" class="headerlink" title="启动类"></a>启动类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.EnableFeignClients;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@EnableFeignClients(basePackages = &#123;&quot;com.laolang.jx.remote&quot;&#125;)</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OpenfeignStudyApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(OpenfeignStudyApplication.class, args);</span><br><span class="line">        log.info(<span class="string">&quot;OpenfeignStudyApplication is running...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="feign-接口"><a href="#feign-接口" class="headerlink" title="feign 接口"></a>feign 接口</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx.remote;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.common.domain.R;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.req.SysDictTypeListReq;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.rsp.SysDictTypeListRsp;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.FeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"></span><br><span class="line"><span class="meta">@FeignClient( name = &quot;sysDict&quot;, url = &quot;http://localhost:8092/admin/system/dict&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">SysDictRemote</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;getMethod&quot;)</span></span><br><span class="line">    R&lt;SysDictTypeListRsp&gt; <span class="title function_">getMethod</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;getMethodWithParam&quot;)</span></span><br><span class="line">    R&lt;SysDictTypeListRsp&gt; <span class="title function_">getMethodWithParam</span><span class="params">(<span class="meta">@RequestParam(value = &quot;id&quot;)</span> Long id,</span></span><br><span class="line"><span class="params">                                             <span class="meta">@RequestParam(value = &quot;name&quot;, defaultValue = &quot;laolang&quot;)</span> String name)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;postMethod&quot;)</span></span><br><span class="line">    R&lt;SysDictTypeListRsp&gt; <span class="title function_">postMethod</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;postMethodWithFormData&quot;)</span></span><br><span class="line">    R&lt;SysDictTypeListRsp&gt; <span class="title function_">postMethodWithFormData</span><span class="params">(SysDictTypeListReq req)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;postMethodWithRequestBody&quot;)</span></span><br><span class="line">    R&lt;SysDictTypeListRsp&gt; <span class="title function_">postMethodWithRequestBody</span><span class="params">(<span class="meta">@RequestBody</span> SysDictTypeListReq req)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.json.JSONUtil;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.common.domain.R;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.remote.SysDictRemote;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.req.SysDictTypeListReq;</span><br><span class="line"><span class="keyword">import</span> com.laolang.jx.rsp.SysDictTypeListRsp;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpHeaders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.testng.AbstractTestNGSpringContextTests;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.LinkedMultiValueMap;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.MultiValueMap;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@SpringBootTest(classes = OpenfeignStudyApplication.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OpenfeignSimpleTest</span> <span class="keyword">extends</span> <span class="title class_">AbstractTestNGSpringContextTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SysDictRemote sysDictRemote;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 无参 get 请求</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetMethod</span><span class="params">()</span> &#123;</span><br><span class="line">        R&lt;SysDictTypeListRsp&gt; r = sysDictRemote.getMethod();</span><br><span class="line">        log.info(JSONUtil.toJsonStr(r));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * get 请求带参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetMethodWithParam</span><span class="params">()</span> &#123;</span><br><span class="line">        R&lt;SysDictTypeListRsp&gt; r = sysDictRemote.getMethodWithParam(<span class="number">1L</span>, <span class="string">&quot;潼关路边的一只野鬼&quot;</span>);</span><br><span class="line">        log.info(JSONUtil.toJsonStr(r));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 无参 post 请求</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPostMethod</span><span class="params">()</span> &#123;</span><br><span class="line">        R&lt;SysDictTypeListRsp&gt; r = sysDictRemote.postMethod();</span><br><span class="line">        log.info(JSONUtil.toJsonStr(r));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * post form 表单请求</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPostMethodWithFormData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">SysDictTypeListReq</span> <span class="variable">req</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysDictTypeListReq</span>();</span><br><span class="line">        req.setName(<span class="string">&quot;gender&quot;</span>);</span><br><span class="line">        R&lt;SysDictTypeListRsp&gt; r = sysDictRemote.postMethodWithFormData(req);</span><br><span class="line">        log.info(JSONUtil.toJsonStr(r));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * post json 请求</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPostMethodWithRequestBody</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">SysDictTypeListReq</span> <span class="variable">req</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysDictTypeListReq</span>();</span><br><span class="line">        req.setName(<span class="string">&quot;gender&quot;</span>);</span><br><span class="line">        R&lt;SysDictTypeListRsp&gt; r = sysDictRemote.postMethodWithRequestBody(req);</span><br><span class="line">        log.info(JSONUtil.toJsonStr(r));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>java</category>
        <category>cloud</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>cloud</tag>
      </tags>
  </entry>
  <entry>
    <title>mfc hello world</title>
    <url>/2024/10/01/mfc-hello-world/</url>
    <content><![CDATA[<h1 id="最小化程序"><a href="#最小化程序" class="headerlink" title="最小化程序"></a>最小化程序</h1><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;afxwin.h&gt;</span>  <span class="comment">// MFC core and standard components</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 应用程序类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CMinimalMFCApp</span> : <span class="keyword">public</span> CWinApp &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> BOOL <span class="title">InitInstance</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主窗口类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CMainFrame</span> : <span class="keyword">public</span> CFrameWnd &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">CMainFrame</span>() &#123;</span><br><span class="line">        <span class="built_in">Create</span>(<span class="literal">NULL</span>, _T(<span class="string">&quot;Minimal MFC Application&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">CMinimalMFCApp::InitInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    m_pMainWnd = <span class="keyword">new</span> CMainFrame;</span><br><span class="line">    m_pMainWnd-&gt;<span class="built_in">ShowWindow</span>(SW_SHOW);</span><br><span class="line">    m_pMainWnd-&gt;<span class="built_in">UpdateWindow</span>();</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 应用程序对象</span></span><br><span class="line">CMinimalMFCApp theApp;</span><br></pre></td></tr></table></figure>

<h2 id="CMakePresets-json"><a href="#CMakePresets-json" class="headerlink" title="CMakePresets.json"></a>CMakePresets.json</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;cmakeMinimumRequired&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;major&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;minor&quot;</span><span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;patch&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurePresets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows-base&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hidden&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;generator&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Ninja&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;binaryDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;sourceDir&#125;/build/$&#123;presetName&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cacheVariables&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_CXX_COMPILER&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cl.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_MAKE_PROGRAM&quot;</span><span class="punctuation">:</span> <span class="string">&quot;D:/PROGRAM/MICROSOFT/VS2022/COMMUNTITY/COMMON7/IDE/COMMONEXTENSIONS/MICROSOFT/CMAKE/Ninja/ninja.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_CXX_FLAGS&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/utf-8 -D_AFXDLL -D_UNICODE -DUNICODE&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;win64-release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;displayName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;win 64 release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;inherits&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows-base&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cacheVariables&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_BUILD_TYPE&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Release&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;win64-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;displayName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;win 64 debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;inherits&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows-base&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cacheVariables&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_BUILD_TYPE&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Debug&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;buildPresets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;win64-release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;configurePreset&quot;</span><span class="punctuation">:</span> <span class="string">&quot;win64-release&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;win64-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;configurePreset&quot;</span><span class="punctuation">:</span> <span class="string">&quot;win64-debug&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="CMakeLists-txt"><a href="#CMakeLists-txt" class="headerlink" title="CMakeLists.txt"></a>CMakeLists.txt</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 指定 cmake 最小版本, 意指 cmake 版本小于指定版本则构建过程终止</span></span><br><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.26</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 语言环境配置 ###########################################################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 语言版本</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">17</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果指定的语言版本不受支持, 则构建过程终止</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD_REQUIRED <span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只弃用 ISO C++ 标准的编译器标志, 而不使用特定编译器的扩展</span></span><br><span class="line"><span class="comment"># set(CMAKE_CXX_EXTENSIONS OFF)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 项目配置 ##############################################################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 项目名称和语言</span></span><br><span class="line"><span class="keyword">project</span>(mfc-hello LANGUAGES CXX VERSION <span class="number">1.0</span>.<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译相关配置 ###########################################################################################################</span></span><br><span class="line"><span class="keyword">SET</span>(CMAKE_MFC_FLAG <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成 compile_commands.json</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_EXPORT_COMPILE_COMMANDS <span class="keyword">ON</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">aux_source_directory</span>(. SRCS_MAIN)</span><br><span class="line"><span class="keyword">add_executable</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span> WIN32 <span class="variable">$&#123;SRCS_MAIN&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">target_link_options</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span> PRIVATE /ENTRY:wWinMainCRTStartup)</span><br></pre></td></tr></table></figure>

<h2 id="build-bat"><a href="#build-bat" class="headerlink" title="build.bat"></a>build.bat</h2><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">call</span> &quot;D:\program\microsoft\vs2022\communtity\VC\Auxiliary\Build\vcvars64.bat&quot;</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">errorlevel</span> <span class="number">1</span> (</span><br><span class="line">    <span class="built_in">echo</span> Warning: Failed to <span class="built_in">set</span> up the environment. Continuing...</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> &quot;%<span class="number">1</span>&quot; == &quot;&quot; (</span><br><span class="line">    cmake --preset=win64-release </span><br><span class="line">    cmake --build --preset=win64-release    </span><br><span class="line">) <span class="keyword">else</span> <span class="keyword">if</span> &quot;%<span class="number">1</span>&quot; == &quot;release&quot; (</span><br><span class="line">    cmake --preset=win64-release </span><br><span class="line">    cmake --build --preset=win64-release</span><br><span class="line">) <span class="keyword">else</span> <span class="keyword">if</span> &quot;%<span class="number">1</span>&quot; == &quot;debug&quot; (</span><br><span class="line">    cmake --preset=win64-debug </span><br><span class="line">    cmake --build --preset=win64-debug</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h2 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h2><p><img src="/images/2024-10-01-mfc-hello-world/001.png"></p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p><strong>关于 <code>CMAKE_MFC_FLAG</code></strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 在用静态库中使用 MFC</span><br><span class="line">SET(CMAKE_MFC_FLAG 1)</span><br><span class="line"># 在用动态库中使用 MFC</span><br><span class="line">SET(CMAKE_MFC_FLAG 2)</span><br></pre></td></tr></table></figure>

<p><strong>关于 <code>/ENTRY:wWinMainCRTStartup</code></strong></p>
<blockquote>
<p>CMake目前没有为Unicode建模Windows应用程序入口点。它在Visual Studio生成器中工作，只是因为此代码和此代码识别_UNICODE定义并相应地修改生成的.vcxproj字段。MSBuild将其转换为&#x2F;entry：wWinMainCRTStartup（或类似的东西）的正确链接标志。<br>现在，为&#x2F;entry：wWinMainCRTStartup显式添加target_link_options是一个很好的解决方法。<br>Ninja（和Makefile）生成器需要学习一个抽象来显式地对此进行建模，以便他们知道添加标志。</p>
</blockquote>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.dennisthink.com/post/2019/01/cmake%E7%AC%94%E8%AE%B02-%E7%BC%96%E8%AF%91mfc/">CMake笔记(2)-编译MFC</a><br><a href="https://blog.csdn.net/alionsss/article/details/135013330">CMake创建MFC桌面应用</a><br><a href="https://gitlab.kitware.com/cmake/cmake/-/issues/21202">Unresolved WinMain error in Unicode MFC application built with CMake using Ninja generator</a></p>
]]></content>
      <categories>
        <category>gui</category>
        <category>win32</category>
      </categories>
      <tags>
        <tag>gui</tag>
        <tag>win32</tag>
      </tags>
  </entry>
  <entry>
    <title>win32 总览</title>
    <url>/2024/10/01/win32-%E6%80%BB%E8%A7%88/</url>
    <content><![CDATA[<h1 id="win32-视频教程汇总"><a href="#win32-视频教程汇总" class="headerlink" title="win32 视频教程汇总"></a>win32 视频教程汇总</h1><p><a href="https://www.bilibili.com/video/BV13x411m7i2">【Win32教程】Windows程序设计（小甲鱼）</a></p>
<p><a href="https://www.bilibili.com/video/BV1Qb4y1o7u9">达内 · 新版Win32高级编程教程（含全套资料）</a></p>
<h1 id="mfc-教程"><a href="#mfc-教程" class="headerlink" title="mfc 教程"></a>mfc 教程</h1><p><a href="https://www.bilibili.com/video/BV13b411e7Zo">孙鑫MFC视频教程</a><br><a href="https://www.bilibili.com/video/BV1LK4y1v7o1">30年 C++开发经验 带你剖析MFC源码</a><br><a href="https://www.bilibili.com/video/BV1QA411g7dX">达内 · 【20W播放】新版MFC编程全套精品视频</a><br><a href="https://www.bilibili.com/video/BV1Rr421M73o">C++线下培训班2019 MFC客户端开发</a></p>
]]></content>
      <categories>
        <category>gui</category>
        <category>win32</category>
      </categories>
      <tags>
        <tag>gui</tag>
        <tag>win32</tag>
      </tags>
  </entry>
  <entry>
    <title>win32 hello world</title>
    <url>/2024/10/01/win32-hello-world/</url>
    <content><![CDATA[<h1 id="最小化-win32-程序"><a href="#最小化-win32-程序" class="headerlink" title="最小化 win32 程序"></a>最小化 win32 程序</h1><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief win32 程序入口</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @param hInstance 应用程序的当前实例的句柄</span></span><br><span class="line"><span class="comment"> * @param hPrevInstance 应用程序的上一个实例的句柄。 此参数始终 NULL</span></span><br><span class="line"><span class="comment"> * @param szCmdLine 应用程序的命令行，不包括程序名称</span></span><br><span class="line"><span class="comment"> * @param iCmdShow 控制窗口的显示方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> WINAPI <span class="title function_">WinMain</span><span class="params">(HINSTANCE hInstance, HINSTANCE hPrevInstance, PSTR szCmdLine, <span class="type">int</span> iCmdShow)</span> &#123;</span><br><span class="line">    MessageBox(<span class="literal">NULL</span>, TEXT(<span class="string">&quot;第一个 win32 程序！&quot;</span>), TEXT(<span class="string">&quot;标题！&quot;</span>), <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="vs"><a href="#vs" class="headerlink" title="vs"></a>vs</h2><p>选择 Windows 桌面向导<br><img src="/images/2024-10-01-win32-hello-world/001.png"></p>
<p>应用程序类型选择: 桌面应用程序(.exe)<br>选中空项目</p>
<p><img src="/images/2024-10-01-win32-hello-world/002.png"></p>
<h2 id="vscode-cmake"><a href="#vscode-cmake" class="headerlink" title="vscode + cmake"></a>vscode + cmake</h2><h3 id="CMakePresets-json"><a href="#CMakePresets-json" class="headerlink" title="CMakePresets.json"></a>CMakePresets.json</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;cmakeMinimumRequired&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;major&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;minor&quot;</span><span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;patch&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurePresets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows-base&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hidden&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;generator&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Ninja&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;binaryDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;sourceDir&#125;/build/$&#123;presetName&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cacheVariables&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_C_COMPILER&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cl.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_MAKE_PROGRAM&quot;</span><span class="punctuation">:</span> <span class="string">&quot;D:/PROGRAM/MICROSOFT/VS2022/COMMUNTITY/COMMON7/IDE/COMMONEXTENSIONS/MICROSOFT/CMAKE/Ninja/ninja.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_C_FLAGS&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/utf-8 -D_AFXDLL -D_UNICODE -DUNICODE&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;win64-release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;displayName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;win 64 release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;inherits&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows-base&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cacheVariables&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_BUILD_TYPE&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Release&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;win64-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;displayName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;win 64 debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;inherits&quot;</span><span class="punctuation">:</span> <span class="string">&quot;windows-base&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cacheVariables&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;CMAKE_BUILD_TYPE&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Debug&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;buildPresets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;win64-release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;configurePreset&quot;</span><span class="punctuation">:</span> <span class="string">&quot;win64-release&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;win64-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;configurePreset&quot;</span><span class="punctuation">:</span> <span class="string">&quot;win64-debug&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="CMakeLists-txt"><a href="#CMakeLists-txt" class="headerlink" title="CMakeLists.txt"></a>CMakeLists.txt</h3><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 指定 cmake 最小版本, 意指 cmake 版本小于指定版本则构建过程终止</span></span><br><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.26</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 语言环境配置 ###########################################################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 语言版本</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_STANDARD <span class="number">17</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果指定的语言版本不受支持, 则构建过程终止</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_STANDARD_REQUIRED <span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只启用 ISO C++ 标准的编译器标志, 而不使用特定编译器的扩展</span></span><br><span class="line"><span class="comment"># set(CMAKE_C_EXTENSIONS OFF)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 项目配置 ##############################################################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 项目名称和语言</span></span><br><span class="line"><span class="keyword">project</span>(win32-mini LANGUAGES C VERSION <span class="number">1.0</span>.<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译相关配置 ###########################################################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成 compile_commands.json</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_EXPORT_COMPILE_COMMANDS <span class="keyword">ON</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">aux_source_directory</span>(. SRCS_MAIN)</span><br><span class="line"><span class="keyword">add_executable</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span> WIN32 <span class="variable">$&#123;SRCS_MAIN&#125;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="编译脚本"><a href="#编译脚本" class="headerlink" title="编译脚本"></a>编译脚本</h3><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">call</span> &quot;D:\program\microsoft\vs2022\communtity\VC\Auxiliary\Build\vcvars64.bat&quot;</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">errorlevel</span> <span class="number">1</span> (</span><br><span class="line">    <span class="built_in">echo</span> Warning: Failed to <span class="built_in">set</span> up the environment. Continuing...</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> &quot;%<span class="number">1</span>&quot; == &quot;&quot; (</span><br><span class="line">    cmake --preset=win64-release </span><br><span class="line">    cmake --build --preset=win64-release    </span><br><span class="line">) <span class="keyword">else</span> <span class="keyword">if</span> &quot;%<span class="number">1</span>&quot; == &quot;release&quot; (</span><br><span class="line">    cmake --preset=win64-release </span><br><span class="line">    cmake --build --preset=win64-release</span><br><span class="line">) <span class="keyword">else</span> <span class="keyword">if</span> &quot;%<span class="number">1</span>&quot; == &quot;debug&quot; (</span><br><span class="line">    cmake --preset=win64-debug </span><br><span class="line">    cmake --build --preset=win64-debug</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h3 id="vscode"><a href="#vscode" class="headerlink" title="vscode"></a>vscode</h3><h4 id="tasks-json"><a href="#tasks-json" class="headerlink" title="tasks.json"></a>tasks.json</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// See https://go.microsoft.com/fwlink/?LinkId=733558</span></span><br><span class="line">    <span class="comment">// for the documentation about the tasks.json format</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tasks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="comment">// debug 构建</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;process&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceRoot&#125;/build.bat&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;debug&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// release 构建</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build-release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;process&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceRoot&#125;/build.bat&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 清理 debug</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;clean-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rm -rf build/win64-debug&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 清理 release</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;clean-release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rm -rf build/win64-release&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 清理 所有</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;clean-all&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rm -rf build&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 重新 debug 构建</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rebuild-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dependsOn&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;clean-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;build-debug&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 重新 release 构建</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rebuild-release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dependsOn&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;clean-release&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;build-release&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 运行 debug</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;run-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cd build/gnu-debug/dist/bin &amp;&amp; ./c-hello&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dependsOn&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;build-debug&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 运行 release</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;run-release&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cd build/win64-release &amp;&amp; ./win32-mini&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dependsOn&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;build-release&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// format</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;format&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./format.sh&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;coverage&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./coverage.sh&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 运行 test common</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;run-test&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cd build/ninja-release/dist/test &amp;&amp; ./c-hello_test&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dependsOn&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;build-release&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;doc&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./doc.sh&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h4 id="setting-json"><a href="#setting-json" class="headerlink" title="setting.json"></a>setting.json</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// 隐藏某些文件</span></span><br><span class="line">    <span class="attr">&quot;files.exclude&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;**/.git&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;**/.svn&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;**/.hg&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;**/CVS&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;**/.DS_Store&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;**/Thumbs.db&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// &quot;**/build&quot;: true,</span></span><br><span class="line">        <span class="comment">// &quot;**/cmake-build-debug&quot;: true,</span></span><br><span class="line">        <span class="comment">// &quot;**/cmake-build-release&quot;: true</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 保存时自动格式化</span></span><br><span class="line">    <span class="attr">&quot;editor.formatOnSave&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;[cmake]&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;editor.defaultFormatter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;josetr.cmake-language-support-vscode&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;[c]&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;editor.defaultFormatter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xaver.clang-format&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;[h]&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;editor.defaultFormatter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xaver.clang-format&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;[cpp]&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;editor.defaultFormatter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xaver.clang-format&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 修改了注释的颜色</span></span><br><span class="line">    <span class="attr">&quot;editor.tokenColorCustomizations&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;comments&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;foreground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#4a524e&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;fontStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 右侧标尺</span></span><br><span class="line">    <span class="attr">&quot;editor.rulers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="number">120</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.inlayHints.enabled&quot;</span><span class="punctuation">:</span> <span class="string">&quot;off&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// clangd 配置</span></span><br><span class="line">    <span class="attr">&quot;clangd.fallbackFlags&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="comment">// 设置clangd代码检查的c++版本，目前默认是c++14</span></span><br><span class="line">        <span class="string">&quot;-std=c17&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 增加项目自身头文件依赖路劲，因为使用vs2019编译不会生成compile_command.json文件，项目自己的头文件就不会找到</span></span><br><span class="line">        <span class="string">&quot;-I$&#123;workspaceFolder&#125;&quot;</span><span class="punctuation">,</span> <span class="comment">// 项目根目录</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// clangd</span></span><br><span class="line">    <span class="attr">&quot;clangd.arguments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="comment">//后台分析并保存索引文件</span></span><br><span class="line">        <span class="string">&quot;--background-index&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">//compile_commands.json目录位置</span></span><br><span class="line">        <span class="string">&quot;--compile-commands-dir=build/win64-release&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">//同时开启的任务数</span></span><br><span class="line">        <span class="string">&quot;-j=12&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// &quot;--folding-ranges&quot;,</span></span><br><span class="line">        <span class="comment">//&quot;--query-driver=/usr/bin/clang++&quot;, //mac上需要配置</span></span><br><span class="line">        <span class="comment">//启用clang-tidy以提供静态检查</span></span><br><span class="line">        <span class="string">&quot;--clang-tidy&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">//当 clangd 准备就绪时，用它来分析建议</span></span><br><span class="line">        <span class="string">&quot;--completion-parse=auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">//建议风格</span></span><br><span class="line">        <span class="string">&quot;--completion-style=detailed&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">//补全函数时，给参数提供占位符，可以使用 Tab 切换下一个占位符，知道函数末尾</span></span><br><span class="line">        <span class="string">&quot;--function-arg-placeholders&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">//默认格式化风格: 可用的有 LLVM, Google, Chromium, Mozilla, Webkit, Microsoft, GNU</span></span><br><span class="line">        <span class="comment">//也可以编写 .clang-format 自定义风格</span></span><br><span class="line">        <span class="string">&quot;--fallback-style=Webkit&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">//pch 优化的位置(Memory 或 Disk,前者会增加内存开销，但会提升性能)</span></span><br><span class="line">        <span class="string">&quot;--pch-storage=disk&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">//让clangd生成更详细的日志</span></span><br><span class="line">        <span class="string">&quot;--log=verbose&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 输出的 JSON 文件更加美观</span></span><br><span class="line">        <span class="string">&quot;--pretty&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">//建议中，已包含头文件的项与还未包含头文件的项会以圆点加以区分</span></span><br><span class="line">        <span class="string">&quot;--header-insertion-decorators&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">//插入建议时自动引入头文件</span></span><br><span class="line">        <span class="string">&quot;--header-insertion=iwyu&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">//全局补全，例如没有#include &lt;iostream&gt;时，也会给出std::cout建议</span></span><br><span class="line">        <span class="comment">//建议配合&quot;--header-insertion=iwyu&quot;使用</span></span><br><span class="line">        <span class="string">&quot;--all-scopes-completion&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 建议的排序方案：hueristics (启发式), decision_forest (决策树)</span></span><br><span class="line">        <span class="string">&quot;--ranking-model=decision_forest&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">//借助网上的信息排序建议</span></span><br><span class="line">    <span class="attr">&quot;clangd.serverCompletionRanking&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">//当其它扩展与 clangd 冲突时警告并建议禁用</span></span><br><span class="line">    <span class="attr">&quot;clangd.detectExtensionConflicts&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 任务栏 task 快捷按钮</span></span><br><span class="line">    <span class="attr">&quot;VsCodeTaskButtons.showCounter&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;VsCodeTaskButtons.tasks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$(notebook-delete-cell) clean-all&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;task&quot;</span><span class="punctuation">:</span> <span class="string">&quot;clean-all&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$(notebook-delete-cell) clean&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;task&quot;</span><span class="punctuation">:</span> <span class="string">&quot;clean-release&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$(debug-configure) rebuild&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;task&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rebuild-release&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$(notebook-execute) run&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;task&quot;</span><span class="punctuation">:</span> <span class="string">&quot;run-release&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h4 id="launch-json"><a href="#launch-json" class="headerlink" title="launch.json"></a>launch.json</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// 使用 IntelliSense 了解相关属性。 </span></span><br><span class="line">    <span class="comment">// 悬停以查看现有属性的描述。</span></span><br><span class="line">    <span class="comment">// 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;app&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lldb&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceRoot&#125;/build/win64-debug/win32-mini.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;/build/win64-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;preLaunchTask&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build-debug&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h3><p><img src="/images/2024-10-01-win32-hello-world/003.png"></p>
<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>在命令行中使用 <code>cmake</code> + <code>msvc</code> 编译项目时, 会有各种报错,此时可以运行 <code>vcvars64.bat</code>, 设置当前的编译环境,文件路径:<code>D:\program\microsoft\vs2022\communtity\VC\Auxiliary\Build</code></p>
<ul>
<li><code>vcvars32.bat</code>: 用于设置 32 位编译器和工具的环境变量</li>
<li><code>vcvars64.bat</code>: 用于设置 64 位编译器和工具的环境变量</li>
<li><code>vcvarsall.bat</code>: 用于设置所有可用架构（32 位、64 位、ARM 等）的编译器和工具的环境变量</li>
<li><code>vcvarsamd64_x86.bat</code>: 用于设置在 64 位 Windows 上编译 32 位程序的环境变量</li>
<li><code>vcvarsx86_amd64.bat</code>: 用于设置在 32 位 Windows 上编译 64 位程序的环境变量</li>
</ul>
<p><img src="/images/2024-10-01-win32-hello-world/004.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/wap1981314/article/details/12653545">CMake Error: your RC compiler: “CMAKE_RC_COMPILER-NOTFOUND” was not found.</a><br><a href="https://www.cnblogs.com/Koomee/p/17158096.html">关于使用vcvars32.bat，vcvarsall.bat配置VS编译环境配置的方法</a><br><a href="https://zhuanlan.zhihu.com/p/627531212?theme=light">记录Windows下开发C&#x2F;C++如何避免乱码</a></p>
<h1 id="一个窗口程序"><a href="#一个窗口程序" class="headerlink" title="一个窗口程序"></a>一个窗口程序</h1><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @param hwnd 窗口的句柄</span></span><br><span class="line"><span class="comment"> * @param message 消息</span></span><br><span class="line"><span class="comment"> * @param wParam 其他消息信息。</span></span><br><span class="line"><span class="comment"> * @param lParam 其他消息信息。</span></span><br><span class="line"><span class="comment"> * @return LRESULT 返回值是消息处理的结果，取决于发送的消息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">LRESULT CALLBACK <span class="title function_">WndProc</span><span class="params">(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief win32 程序入口</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @param hInstance 应用程序的当前实例的句柄</span></span><br><span class="line"><span class="comment"> * @param hPrevInstance 应用程序的上一个实例的句柄。 此参数始终 NULL</span></span><br><span class="line"><span class="comment"> * @param szCmdLine 应用程序的命令行，不包括程序名称</span></span><br><span class="line"><span class="comment"> * @param iCmdShow 控制窗口的显示方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> WINAPI <span class="title function_">WinMain</span><span class="params">(HINSTANCE hInstance, HINSTANCE hPrevInstance, PSTR szCmdLine, <span class="type">int</span> iCmdShow)</span> &#123;</span><br><span class="line">    <span class="type">static</span> TCHAR szAppName[] = TEXT(<span class="string">&quot;MyWindows&quot;</span>);</span><br><span class="line">    HWND         hwnd;</span><br><span class="line">    MSG          msg;</span><br><span class="line">    WNDCLASS     wndclass;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 窗口样式</span></span><br><span class="line">    wndclass.style = CS_HREDRAW | CS_VREDRAW;</span><br><span class="line">    <span class="comment">// 窗口过程的指针,也就是窗口过程处理函数</span></span><br><span class="line">    wndclass.lpfnWndProc = WndProc;</span><br><span class="line">    <span class="comment">// 要根据窗口类结构分配的额外字节数。 系统将字节初始化为零。</span></span><br><span class="line">    wndclass.cbClsExtra = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 在窗口实例之后分配的额外字节数。 系统将字节初始化为零。</span></span><br><span class="line">    wndclass.cbWndExtra = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 实例的句柄，该实例包含类的窗口过程。</span></span><br><span class="line">    wndclass.hInstance = hInstance;</span><br><span class="line">    <span class="comment">// 类图标的句柄。 此成员必须是图标资源的句柄。 如果此成员为 NULL，则系统会提供默认图标。</span></span><br><span class="line">    wndclass.hIcon = LoadIcon(<span class="literal">NULL</span>, IDI_APPLICATION);</span><br><span class="line">    <span class="comment">// 类游标的句柄。 此成员必须是游标资源的句柄。</span></span><br><span class="line">    <span class="comment">// 如果此成员为 NULL，则每当鼠标移动到应用程序的窗口中时，应用程序都必须显式设置光标形状。</span></span><br><span class="line">    wndclass.hCursor = LoadCursor(<span class="literal">NULL</span>, IDC_ARROW);</span><br><span class="line">    <span class="comment">// 类背景画笔的句柄</span></span><br><span class="line">    wndclass.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);</span><br><span class="line">    <span class="comment">// 类菜单的资源名称，该名称显示在资源文件中</span></span><br><span class="line">    wndclass.lpszMenuName = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="comment">// 窗口类名。 类名可以是使用 RegisterClass 或 RegisterClassEx 注册的任何名称，也可以是任何预定义的控件类名称。</span></span><br><span class="line">    wndclass.lpszClassName = szAppName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 注册窗口</span></span><br><span class="line">    <span class="keyword">if</span> (!RegisterClass(&amp;wndclass)) &#123;</span><br><span class="line">        MessageBox(<span class="literal">NULL</span>, TEXT(<span class="string">&quot;这个程序需要在 Windows NT 才能执行！&quot;</span>), szAppName, MB_ICONERROR);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建窗口</span></span><br><span class="line">    hwnd = CreateWindow(szAppName, TEXT(<span class="string">&quot;win32 学习&quot;</span>), WS_OVERLAPPEDWINDOW, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT,</span><br><span class="line">                        <span class="literal">NULL</span>, <span class="literal">NULL</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 显示窗口</span></span><br><span class="line">    ShowWindow(hwnd, iCmdShow);</span><br><span class="line">    <span class="comment">// 更新窗口</span></span><br><span class="line">    UpdateWindow(hwnd);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 消息循环</span></span><br><span class="line">    <span class="keyword">while</span> (GetMessage(&amp;msg, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>)) &#123;</span><br><span class="line">        TranslateMessage(&amp;msg);</span><br><span class="line">        DispatchMessage(&amp;msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> msg.wParam;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LRESULT CALLBACK <span class="title function_">WndProc</span><span class="params">(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)</span> &#123;</span><br><span class="line">    HDC         hdc;</span><br><span class="line">    PAINTSTRUCT ps;</span><br><span class="line">    RECT        rect;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (message) &#123;</span><br><span class="line">        <span class="keyword">case</span> WM_PAINT:</span><br><span class="line">            hdc = BeginPaint(hwnd, &amp;ps);</span><br><span class="line">            GetClientRect(hwnd, &amp;rect);</span><br><span class="line">            DrawText(hdc, TEXT(<span class="string">&quot;大家好，这是我的第一个窗口程序！&quot;</span>), <span class="number">-1</span>, &amp;rect, DT_SINGLELINE | DT_CENTER | DT_VCENTER);</span><br><span class="line">            EndPaint(hwnd, &amp;ps);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> WM_DESTROY:</span><br><span class="line">            PostQuitMessage(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> DefWindowProc(hwnd, message, wParam, lParam);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="运行效果-1"><a href="#运行效果-1" class="headerlink" title="运行效果"></a>运行效果</h2><p><img src="/images/2024-10-01-win32-hello-world/005.png"></p>
<h2 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h2><h3 id="窗口过程处理函数"><a href="#窗口过程处理函数" class="headerlink" title="窗口过程处理函数"></a>窗口过程处理函数</h3><ul>
<li><code>wParam</code>: 通常用于传递消息的辅助信息，较常用于传递标志、标识符或简短的附加数据。</li>
<li><code>lParam</code>: 用于传递更复杂的消息信息，如两个 16 位值的组合、指针、坐标信息等。</li>
</ul>
<p>例如鼠标消息</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">case</span> WM_MOUSEMOVE: &#123;</span><br><span class="line">    <span class="type">int</span> xPos = LOWORD(lParam);  <span class="comment">// 提取鼠标的 X 坐标</span></span><br><span class="line">    <span class="type">int</span> yPos = HIWORD(lParam);  <span class="comment">// 提取鼠标的 Y 坐标</span></span><br><span class="line">    <span class="comment">// 根据 xPos 和 yPos 进行操作</span></span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>或者键盘消息</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">case</span> WM_KEYDOWN: &#123;</span><br><span class="line">    <span class="type">int</span> virtualKeyCode = (<span class="type">int</span>) wParam;  <span class="comment">// 获取虚拟键码</span></span><br><span class="line">    <span class="type">int</span> repeatCount = LOWORD(lParam);   <span class="comment">// 获取重复计数</span></span><br><span class="line">    <span class="type">int</span> scanCode = (HIWORD(lParam) &amp; <span class="number">0xFF</span>); <span class="comment">// 获取扫描码</span></span><br><span class="line">    <span class="comment">// 根据 virtualKeyCode、repeatCount 和 scanCode 进行操作</span></span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="关于定义窗口"><a href="#关于定义窗口" class="headerlink" title="关于定义窗口"></a>关于定义窗口</h3><p>窗口类结构有两个: <code>WNDCLASS</code>（早期版本） 和 <code>WNDCLASSEX</code>（新版本）, <code>WNDCLASSEX</code> 只多了两个参数: <code>cbSize</code> 和 <code>hIconSm</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">tagWNDCLASSEXW</span>  &#123;</span></span><br><span class="line">    UINT        cbSize;                <span class="comment">// 窗口类结构体的内存大小(new)    </span></span><br><span class="line">    UINT        style;                 <span class="comment">// 类风格</span></span><br><span class="line">    WNDPROC     lpfnWndProc;           <span class="comment">// 窗口的处理过程</span></span><br><span class="line">    <span class="type">int</span>         cbClsExtra;            <span class="comment">// 指定紧随在 WNDCLASS 数据结构后分配的字节数</span></span><br><span class="line">    <span class="type">int</span>         cbWndExtra;            <span class="comment">// 指定紧随在窗口实例之后分配的字节数            </span></span><br><span class="line">    HINSTANCE   hInstance;             <span class="comment">// 窗口类所在模块的实例句柄</span></span><br><span class="line">    HICON       hIcon;                 <span class="comment">// 窗口类的图标</span></span><br><span class="line">    HCURSOR     hCursor;               <span class="comment">// 窗口类的光标</span></span><br><span class="line">    HBRUSH      hbrBackground;         <span class="comment">// 窗口类的背景画刷</span></span><br><span class="line">    LPCWSTR     lpszMenuName;          <span class="comment">// 窗口类的菜单资源名</span></span><br><span class="line">    LPCWSTR     lpszClassName;         <span class="comment">// 窗口类的名称</span></span><br><span class="line">    HICON       hIconSm;               <span class="comment">// 窗口类的任务栏图标(new)    </span></span><br><span class="line">&#125; WNDCLASSW</span><br></pre></td></tr></table></figure>

<p>使用新版的 <code>WNDCLASSEX</code> 定义窗口</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 窗口类内存大小</span></span><br><span class="line">wndclass.cbSize = <span class="keyword">sizeof</span>(WNDCLASSEX);</span><br><span class="line"><span class="comment">// 窗口样式</span></span><br><span class="line">wndclass.style = CS_HREDRAW | CS_VREDRAW;</span><br><span class="line"><span class="comment">// 窗口过程的指针,也就是窗口过程处理函数</span></span><br><span class="line">wndclass.lpfnWndProc = WndProc;</span><br><span class="line"><span class="comment">// 要根据窗口类结构分配的额外字节数。 系统将字节初始化为零。</span></span><br><span class="line">wndclass.cbClsExtra = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// 在窗口实例之后分配的额外字节数。 系统将字节初始化为零。</span></span><br><span class="line">wndclass.cbWndExtra = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// 实例的句柄，该实例包含类的窗口过程。</span></span><br><span class="line">wndclass.hInstance = hInstance;</span><br><span class="line"><span class="comment">// 类图标的句柄。 此成员必须是图标资源的句柄。 如果此成员为 NULL，则系统会提供默认图标。</span></span><br><span class="line">wndclass.hIcon = LoadIcon(<span class="literal">NULL</span>, IDI_APPLICATION);</span><br><span class="line"><span class="comment">// 类游标的句柄。 此成员必须是游标资源的句柄。</span></span><br><span class="line"><span class="comment">// 如果此成员为 NULL，则每当鼠标移动到应用程序的窗口中时，应用程序都必须显式设置光标形状。</span></span><br><span class="line">wndclass.hCursor = LoadCursor(<span class="literal">NULL</span>, IDC_ARROW);</span><br><span class="line"><span class="comment">// 类背景画笔的句柄</span></span><br><span class="line">wndclass.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);</span><br><span class="line"><span class="comment">// 类菜单的资源名称，该名称显示在资源文件中</span></span><br><span class="line">wndclass.lpszMenuName = <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">// 窗口类名。 类名可以是使用 RegisterClass 或 RegisterClassEx 注册的任何名称，也可以是任何预定义的控件类名称。</span></span><br><span class="line">wndclass.lpszClassName = szAppName;</span><br><span class="line"><span class="comment">// 窗口菜单栏的图标</span></span><br><span class="line">wndclass.hIconSm = LoadIcon(<span class="literal">NULL</span>, IDI_APPLICATION);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册窗口</span></span><br><span class="line"><span class="keyword">if</span> (!RegisterClassEx(&amp;wndclass)) &#123;</span><br><span class="line">    MessageBox(<span class="literal">NULL</span>, TEXT(<span class="string">&quot;这个程序需要在 Windows NT 才能执行！&quot;</span>), szAppName, MB_ICONERROR);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>gui</category>
        <category>win32</category>
      </categories>
      <tags>
        <tag>gui</tag>
        <tag>win32</tag>
      </tags>
  </entry>
  <entry>
    <title>c++ 基础</title>
    <url>/2024/10/02/cpp-%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://blog.csdn.net/ClaireSy/article/details/120155878">黑马——C++基础入门</a><br><a href="https://blog.csdn.net/ClaireSy/article/details/108423047">《黑马》——C++核心编程</a><br><a href="https://blog.csdn.net/ClaireSy/article/details/108423061">《黑马》——C++提高编程</a></p>
<h1 id="日志库"><a href="#日志库" class="headerlink" title="日志库"></a>日志库</h1><p><a href="https://github.com/gabime/spdlog">https://github.com/gabime/spdlog</a></p>
<h1 id="测试库"><a href="#测试库" class="headerlink" title="测试库"></a>测试库</h1><p><a href="https://github.com/doctest/doctest">https://github.com/doctest/doctest</a></p>
]]></content>
      <categories>
        <category>c++</category>
      </categories>
      <tags>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title>groovy 安装与 Hello World</title>
    <url>/2024/10/03/groovy-%E5%AE%89%E8%A3%85%E4%B8%8E-Hello-World/</url>
    <content><![CDATA[<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p><a href="https://groovy.apache.ac.cn/download.html">https://groovy.apache.ac.cn/download.html</a></p>
<div class="note info no-icon simple"><p><code>java8</code> 最高可用版本为 <code>3.x</code></p>
</div>

<p><img src="/images/2024-10-03-groovy-%E5%AE%89%E8%A3%85%E4%B8%8E-Hello-World/001.png"></p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><a href="https://groovy-lang.cn/install.html#_installation_on_windows">windows 安装指引</a></p>
<p>解压后设置环境变量</p>
<ul>
<li><code>GROOVY_HOEM</code></li>
<li><code>PATH</code> : <code>%GROOVY_HOEM%\bin</code></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\user&gt;groovy -v</span><br><span class="line">Groovy Version: 3.0.22 JVM: 1.8.0_151 Vendor: Oracle Corporation OS: Windows 10</span><br><span class="line"></span><br><span class="line">C:\Users\user&gt;</span><br></pre></td></tr></table></figure>

<h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h1><h2 id="最简单的-Hello-World"><a href="#最简单的-Hello-World" class="headerlink" title="最简单的 Hello World"></a>最简单的 Hello World</h2><p>新建一个 <code>groovy</code> 文件</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">println <span class="string">&quot;Hello World&quot;</span></span><br></pre></td></tr></table></figure>

<p>然后执行 <code>groovy hello.groovy</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\code\groovy-study&gt;groovy hello.groovy</span><br><span class="line">Hello World</span><br><span class="line"></span><br><span class="line">E:\code\groovy-study&gt;</span><br></pre></td></tr></table></figure>

<h2 id="maven-搭建"><a href="#maven-搭建" class="headerlink" title="maven 搭建"></a>maven 搭建</h2><h3 id="pom"><a href="#pom" class="headerlink" title="pom"></a>pom</h3><div class="note info no-icon simple"><p>注意 <code>groovy</code> 的 <code>type</code> 为 <code>pom</code></p>
</div>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.laolang.jx<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>groovy-hello<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- maven 插件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven-resources-plugin.version</span>&gt;</span>2.7<span class="tag">&lt;/<span class="name">maven-resources-plugin.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven-compiler-plugin.version</span>&gt;</span>3.11.0<span class="tag">&lt;/<span class="name">maven-compiler-plugin.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven-surefire-plugin.version</span>&gt;</span>3.2.3<span class="tag">&lt;/<span class="name">maven-surefire-plugin.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">groovy.version</span>&gt;</span>3.0.22<span class="tag">&lt;/<span class="name">groovy.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">log4j.version</span>&gt;</span>2.17.2<span class="tag">&lt;/<span class="name">log4j.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- tool --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hutool.version</span>&gt;</span>5.8.11<span class="tag">&lt;/<span class="name">hutool.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">lombok.version</span>&gt;</span>1.18.30<span class="tag">&lt;/<span class="name">lombok.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commons-lang3.version</span>&gt;</span>3.12.0<span class="tag">&lt;/<span class="name">commons-lang3.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 测试相关 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">testng.version</span>&gt;</span>6.14.3<span class="tag">&lt;/<span class="name">testng.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- groovy --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.groovy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>groovy-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;groovy.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- log4j2 日志 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-slf4j-impl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- tool --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;lombok.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-lang3.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;hutool.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- testng --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.testng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>testng<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;testng.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources/<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-resources-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>$&#123;project.build.sourceEncoding&#125;<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-compiler-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;maven.compiler.source&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;maven.compiler.target&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>$&#123;project.build.sourceEncoding&#125;<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-surefire-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">reuseForks</span>&gt;</span>true<span class="tag">&lt;/<span class="name">reuseForks</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">testFailureIgnore</span>&gt;</span>true<span class="tag">&lt;/<span class="name">testFailureIgnore</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">argLine</span>&gt;</span></span><br><span class="line">                        -Dfile.encoding=UTF-8</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">argLine</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">suiteXmlFiles</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">suiteXmlFile</span>&gt;</span>testng.xml<span class="tag">&lt;/<span class="name">suiteXmlFile</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">suiteXmlFiles</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>maven-central<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>maven central<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repo.maven.apache.org/maven2<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><p><img src="/images/2024-10-03-groovy-%E5%AE%89%E8%A3%85%E4%B8%8E-Hello-World/002.png"></p>
<h3 id="启动类"><a href="#启动类" class="headerlink" title="启动类"></a>启动类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GroovyHelloApplication</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">def</span> <span class="variable">logger</span> <span class="operator">=</span> LoggerFactory.getLogger(GroovyHelloApplication.class)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        logger.info <span class="string">&quot;Hello Groovy&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CommonTest</span> &#123;</span><br><span class="line">    <span class="type">def</span> <span class="variable">logger</span> <span class="operator">=</span> LoggerFactory.getLogger(CommonTest.class)</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">commonTest</span><span class="params">()</span> &#123;</span><br><span class="line">        logger.info <span class="string">&quot;common test&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="关于-lombok"><a href="#关于-lombok" class="headerlink" title="关于 lombok"></a>关于 lombok</h3><p><code>lombok</code> 并不支持 <code>groovy</code> , 具体可参考</p>
<p><a href="https://github.com/projectlombok/lombok/issues/1776">“@Slf4j” annotation ignored in Groovy class [Lombok v1.18.0] #1776</a></p>
<p>一个 <code>lombok</code> 与 <code>groovy</code> 整合的示例</p>
<p><a href="https://github.com/prystasj/lombok-groovy-example">https://github.com/prystasj/lombok-groovy-example</a></p>
]]></content>
      <categories>
        <category>java</category>
        <category>groovy</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>groovy</tag>
      </tags>
  </entry>
  <entry>
    <title>groovy 总览</title>
    <url>/2024/10/03/groovy-%E6%80%BB%E8%A7%88/</url>
    <content><![CDATA[<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.w3ccoo.com/groovy/">w3schools groovy 教程</a><br><a href="https://groovy.apache.ac.cn/index.html">groovy 中文网</a><br><a href="https://www.cnblogs.com/chenxibobo/p/6402768.html">Groovy脚本基础全攻略</a></p>
]]></content>
      <categories>
        <category>java</category>
        <category>groovy</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>groovy</tag>
      </tags>
  </entry>
  <entry>
    <title>groovy 与 java 的异同</title>
    <url>/2024/10/04/groovy-%E4%B8%8E-java-%E7%9A%84%E5%BC%82%E5%90%8C/</url>
    <content><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://groovy-lang.cn/syntax.html">groovy 中文文档 · 语法</a><br><a href="https://groovy-lang.cn/differences.html">groovy 中文文档 · 与 java 的区别</a></p>
<h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><h2 id="单引号字符串"><a href="#单引号字符串" class="headerlink" title="单引号字符串"></a>单引号字符串</h2><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CommonTest</span> &#123;</span><br><span class="line">    <span class="keyword">def</span> logger = LoggerFactory.getLogger(CommonTest.<span class="keyword">class</span>)</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="type">void</span> commonTest() &#123;</span><br><span class="line">        <span class="comment">// 字符串可以使用单引号</span></span><br><span class="line">        <span class="keyword">def</span> str1 = <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line">        logger.info str1</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 字符串可以使用三个单引号</span></span><br><span class="line">        <span class="keyword">def</span> str2 = <span class="string">&#x27;&#x27;&#x27;package com.laolang.jx</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">import org.slf4j.LoggerFactory</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">class GroovyHelloApplication &#123;</span></span><br><span class="line"><span class="string">    static def logger = LoggerFactory.getLogger(GroovyHelloApplication.class)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    static void main(String[] args) &#123;</span></span><br><span class="line"><span class="string">        logger.info &quot;Hello Groovy&quot;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">        logger.info str2</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 单引号的字符串, 其实都是 java.lang.String 的实例</span></span><br><span class="line">        Assert.assertEquals(str1.getClass().toString(),<span class="string">&#x27;class java.lang.String&#x27;</span>)</span><br><span class="line">        Assert.assertEquals(str2.getClass().toString(),<span class="string">&#x27;class java.lang.String&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="双引号"><a href="#双引号" class="headerlink" title="双引号"></a>双引号</h2><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory</span><br><span class="line"><span class="keyword">import</span> org.testng.Assert</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CommonTest</span> &#123;</span><br><span class="line">    <span class="keyword">def</span> logger = LoggerFactory.getLogger(CommonTest.<span class="keyword">class</span>)</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="type">void</span> commonTest() &#123;</span><br><span class="line">        <span class="comment">// 字符串可以使用双引号</span></span><br><span class="line">        <span class="keyword">def</span> msg = <span class="string">&quot;Hello World&quot;</span></span><br><span class="line">        logger.info msg</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 双引号字符串可以插值</span></span><br><span class="line">        <span class="keyword">def</span> str = <span class="string">&quot;I said : $&#123;msg&#125;&quot;</span></span><br><span class="line">        logger.info str</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果没有插值,则是 java.lang.String 的实例</span></span><br><span class="line">        Assert.assertEquals(msg.getClass().toString(),<span class="string">&#x27;class java.lang.String&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果使用了插值, 是 groovy.lang.GString 的实例</span></span><br><span class="line">        Assert.assertEquals(str.getClass().toString(),<span class="string">&#x27;class org.codehaus.groovy.runtime.GStringImpl&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 插值可以使用前缀为点号表达式的单个 $ 符号</span></span><br><span class="line">        <span class="keyword">def</span> person = [<span class="attr">name:</span><span class="string">&#x27;laolang&#x27;</span>,<span class="attr">age:</span><span class="number">23</span>]</span><br><span class="line">        <span class="keyword">def</span> str2 = <span class="string">&quot;My name is $person.name , my age is $person.age&quot;</span></span><br><span class="line">        logger.info str2</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 插值还可以调用方法</span></span><br><span class="line">        <span class="keyword">def</span> p = <span class="keyword">new</span> Person()</span><br><span class="line">        <span class="keyword">def</span> str3 = <span class="string">&quot;msg is : $&#123;p.sayHello()&#125;&quot;</span></span><br><span class="line">        logger.info str3</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">        <span class="keyword">def</span> name = <span class="string">&#x27;xiaodaima&#x27;</span></span><br><span class="line">        <span class="keyword">def</span> age = <span class="number">36</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> sayHello()&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;My name is $name , my age is $age&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="列表和数组"><a href="#列表和数组" class="headerlink" title="列表和数组"></a>列表和数组</h1><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory</span><br><span class="line"><span class="keyword">import</span> org.testng.Assert</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CommonTest</span> &#123;</span><br><span class="line">    <span class="keyword">def</span> logger = LoggerFactory.getLogger(CommonTest.<span class="keyword">class</span>)</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="type">void</span> commonTest() &#123;</span><br><span class="line">        <span class="comment">// 一般的列表是 java.util.ArrayList 的实例</span></span><br><span class="line">        <span class="keyword">def</span> list1 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">        Assert.assertTrue(list1 <span class="keyword">instanceof</span> ArrayList)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 可以指定列表类型</span></span><br><span class="line">        <span class="keyword">def</span> list2 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] <span class="keyword">as</span> LinkedList</span><br><span class="line">        Assert.assertTrue(list2 <span class="keyword">instanceof</span> LinkedList)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CommonTest</span> &#123;</span><br><span class="line">    <span class="keyword">def</span> logger = LoggerFactory.getLogger(CommonTest.<span class="keyword">class</span>)</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="type">void</span> commonTest() &#123;</span><br><span class="line">        <span class="comment">// 可以使用命名参数</span></span><br><span class="line">        <span class="keyword">def</span> person = <span class="keyword">new</span> Person(<span class="attr">name:</span> <span class="string">&#x27;laolang&#x27;</span>, <span class="attr">age:</span> <span class="number">12</span>)</span><br><span class="line">        logger.info person.name</span><br><span class="line">        logger.info person.age <span class="keyword">as</span> String</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 方法也可以使用命名参数</span></span><br><span class="line">        person.sayHello(<span class="attr">name:</span> <span class="string">&#x27;laolang&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 方法参数可以有默认值</span></span><br><span class="line">        person.sayHi(<span class="string">&#x27;laolang&#x27;</span>)</span><br><span class="line">        person.sayHi(<span class="string">&#x27;laolang&#x27;</span>, <span class="number">34</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">        String name</span><br><span class="line">        Integer age</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> sayHello(Map args) &#123;</span><br><span class="line">            logger.info <span class="string">&quot;$&#123;args.name&#125;&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">void</span> sayHi(String name, Integer age = <span class="number">23</span>) &#123;</span><br><span class="line">            logger.info <span class="string">&quot;My name is $&#123;name&#125;, I&#x27;m $&#123;age&#125; years old.&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h1><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laolang.jx</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CommonTest</span> &#123;</span><br><span class="line">    <span class="keyword">def</span> logger = LoggerFactory.getLogger(CommonTest.<span class="keyword">class</span>)</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="type">void</span> commonTest() &#123;</span><br><span class="line">        ajax(<span class="string">&#x27;url&#x27;</span>, <span class="string">&#x27;method&#x27;</span>, str -&gt; &#123;</span><br><span class="line">            logger.info str <span class="keyword">as</span> String</span><br><span class="line">        &#125;, str -&gt; &#123;</span><br><span class="line">            logger.info str <span class="keyword">as</span> String</span><br><span class="line">        &#125;)</span><br><span class="line">        ajax(<span class="string">&#x27;url&#x27;</span>, <span class="string">&#x27;method&#x27;</span>, str -&gt; &#123;</span><br><span class="line">            logger.info str <span class="keyword">as</span> String</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> ajax(String url, String method, Closure&lt;String&gt; onSuccess, Closure&lt;String&gt; onError = <span class="literal">null</span>) &#123;</span><br><span class="line">        logger.info <span class="string">&quot;url:$&#123;url&#125; , method:$&#123;method&#125;&quot;</span></span><br><span class="line">        onSuccess(<span class="string">&#x27;success&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> (Objects.nonNull(onError)) &#123;</span><br><span class="line">            onError(<span class="string">&#x27;error&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="dsl"><a href="#dsl" class="headerlink" title="dsl"></a>dsl</h1><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">DatabaseConfig</span> &#123;</span><br><span class="line">    String url</span><br><span class="line">    String username</span><br><span class="line">    String password</span><br><span class="line">    <span class="type">int</span> maxConnections</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> url(String url) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.url = url</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> username(String username) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.username = username</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> password(String password) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.password = password</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> maxConnections(<span class="type">int</span> maxConnections) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.maxConnections = maxConnections</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    String toString() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;DatabaseConfig(url: $url, username: $username, password: $password, maxConnections: $maxConnections)&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用DSL配置数据库连接</span></span><br><span class="line"><span class="keyword">def</span> config = <span class="keyword">new</span> DatabaseConfig()</span><br><span class="line">config &#123;</span><br><span class="line">    url <span class="string">&quot;jdbc:mysql://localhost:3306/mydb&quot;</span></span><br><span class="line">    username <span class="string">&quot;root&quot;</span></span><br><span class="line">    password <span class="string">&quot;secret&quot;</span></span><br><span class="line">    maxConnections <span class="number">10</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">println config.toString()</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
        <category>groovy</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>groovy</tag>
      </tags>
  </entry>
  <entry>
    <title>doris 基础</title>
    <url>/2024/10/07/doris-%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.bilibili.com/video/BV191421b7A8/">史上最简单的Doris入门课程</a><br><a href="https://www.yuque.com/yxiansheng-njx6f/atzcxl/ppnd54dpqf7m4ppz">Doris数据库</a></p>
<p><a href="https://doris.apache.org/zh-CN/">中文官网</a></p>
]]></content>
      <categories>
        <category>java</category>
        <category>大数据</category>
        <category>droid</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>大数据</tag>
        <tag>droid</tag>
      </tags>
  </entry>
  <entry>
    <title>cmake Hello World</title>
    <url>/2024/10/09/cmake-Hello-World/</url>
    <content><![CDATA[<h1 id="linux-下最小化-cmake-程序"><a href="#linux-下最小化-cmake-程序" class="headerlink" title="linux 下最小化 cmake 程序"></a>linux 下最小化 cmake 程序</h1><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:cmake-cpp-mini$ tree</span><br><span class="line">.</span><br><span class="line">├── CMakeLists.txt</span><br><span class="line">└── main.cpp</span><br><span class="line"></span><br><span class="line">1 directory, 2 files</span><br><span class="line">laolang@laolang-mint:cmake-cpp-mini$ </span><br></pre></td></tr></table></figure>

<h2 id="cpp"><a href="#cpp" class="headerlink" title="cpp"></a>cpp</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Hello World&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="cmake"><a href="#cmake" class="headerlink" title="cmake"></a>cmake</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 该项目所需 cmake 的最小版本, 如果 cmake 版本小于设置的版本,  cmake 将停止处理并报错</span></span><br><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置项目名称和语言</span></span><br><span class="line"><span class="keyword">project</span>(hello_cmake CXX)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_BUILD_TYPE DEBUG)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定 c++ 14</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">14</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD_REQUIRED <span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用指定的源文件向项目添加可执行文件</span></span><br><span class="line"><span class="keyword">add_executable</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span> main.cpp)</span><br></pre></td></tr></table></figure>


<h2 id="基本的编译"><a href="#基本的编译" class="headerlink" title="基本的编译"></a>基本的编译</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建构建目录</span></span><br><span class="line">mkdir build</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入构建目录</span></span><br><span class="line">cd build</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建 unix 的 makefile</span></span><br><span class="line">cmake .. -G &quot;Unix Makefiles&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">生成可执行程序</span></span><br><span class="line">make</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行</span></span><br><span class="line">./hello_cmake</span><br></pre></td></tr></table></figure>

<p>上述命令可以合并为一条命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cmake -S . -G &quot;Unix Makefiles&quot; -B build &amp;&amp; cmake --build build</span><br></pre></td></tr></table></figure>


<h1 id="windows-下-cmake-如何使用"><a href="#windows-下-cmake-如何使用" class="headerlink" title="windows 下 cmake 如何使用"></a>windows 下 cmake 如何使用</h1><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>需要安装 <code>vs2022</code> , 以及安装响应的 <code>c++</code> 组件</p>
<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cmake -S . -G &quot;Visual Studio 17 2022&quot; -B build &amp;&amp; cmake --build build</span><br></pre></td></tr></table></figure>

<h1 id="windows-下使用-mingw"><a href="#windows-下使用-mingw" class="headerlink" title="windows 下使用 mingw"></a>windows 下使用 mingw</h1><h2 id="前提-1"><a href="#前提-1" class="headerlink" title="前提"></a>前提</h2><p>安装 <code>tdmgcc</code> , 并配置环境变量</p>
<h2 id="命令-1"><a href="#命令-1" class="headerlink" title="命令"></a>命令</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cmake -S . -G &quot;MinGW Makefiles&quot; -B build &amp;&amp; cmake --build build</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/u011775793/article/details/134760711">详细教程：如何解决vs 2022 vc++项目 “warning C4819: 该文件包含不能在当前代码页(936)中表示的字符…</a><br><a href="https://blog.csdn.net/weixin_61196167/article/details/120958210">VS中如何编写和使用动态库–C++</a><br><a href="https://blog.csdn.net/wap1981314/article/details/12653545">CMake Error: your RC compiler: “CMAKE_RC_COMPILER-NOTFOUND” was not found.</a><br><a href="https://www.cnblogs.com/Koomee/p/17158096.html">关于使用vcvars32.bat，vcvarsall.bat配置VS编译环境配置的方法</a><br><a href="https://zhuanlan.zhihu.com/p/627531212?theme=light">记录Windows下开发C&#x2F;C++如何避免乱码</a></p>
]]></content>
      <categories>
        <category>c++</category>
        <category>cmake</category>
      </categories>
      <tags>
        <tag>c++</tag>
        <tag>cmake</tag>
      </tags>
  </entry>
  <entry>
    <title>cmake 总览</title>
    <url>/2024/10/09/cmake-%E6%80%BB%E8%A7%88/</url>
    <content><![CDATA[<h1 id="在线文档、博客与点评"><a href="#在线文档、博客与点评" class="headerlink" title="在线文档、博客与点评"></a>在线文档、博客与点评</h1><table>
<thead>
<tr>
<th>文档简述</th>
<th>地址</th>
<th>点评</th>
</tr>
</thead>
<tbody><tr>
<td>官方文档</td>
<td><a href="https://cmake.org/cmake/help/latest/guide/tutorial/index.html">https://cmake.org/cmake/help/latest/guide/tutorial/index.html</a></td>
<td>cmake 的官方文档, 懂的都懂</td>
</tr>
<tr>
<td>readthedoc · cmake 中文文档</td>
<td>[<a href="https://cmake-doc.readthedocs.io/zh-cn/latest/index.html]">https://cmake-doc.readthedocs.io/zh-cn/latest/index.html]</a></td>
<td>目前我可以找到的最好的中文文档, 翻译完整</td>
</tr>
<tr>
<td>runebook.dev · cmake 中文文档</td>
<td><a href="https://runebook.dev/zh/docs/cmake/-index-">https://runebook.dev/zh/docs/cmake/-index-</a></td>
<td>查阅标准函数比较方便</td>
</tr>
<tr>
<td>CMake Tutorial 巡礼</td>
<td><a href="https://blog.csdn.net/horsee/article/details/126047555">https://blog.csdn.net/horsee/article/details/126047555</a></td>
<td>官方 tutorial 翻译,质量不错</td>
</tr>
<tr>
<td>cmake cookbook 中文版</td>
<td><a href="https://www.bookstack.cn/read/CMake-Cookbook/README.md">https://www.bookstack.cn/read/CMake-Cookbook/README.md</a></td>
<td>完整,建议粗略看一遍</td>
</tr>
<tr>
<td>Modern CMake 简体中文版</td>
<td><a href="https://www.bookstack.cn/read/Modern-CMake-CN-Modern-CMake-zh_CN/08ad6f6237beace2.md">https://www.bookstack.cn/read/Modern-CMake-CN-Modern-CMake-zh_CN&#x2F;08ad6f6237beace2.md</a></td>
<td>较完整, 建议粗略看一遍</td>
</tr>
<tr>
<td>An Introduction to Modern CMake</td>
<td><a href="https://cliutils.gitlab.io/modern-cmake/README.html">https://cliutils.gitlab.io/modern-cmake/README.html</a></td>
<td>喜欢英文版可以看这个</td>
</tr>
<tr>
<td>CMake 入门实战</td>
<td><a href="https://www.hahack.com/codes/cmake/">https://www.hahack.com/codes/cmake/</a></td>
<td>可以大略看一遍, 了解一下 <code>cmake</code> 是如何使用的, 源码: <a href="https://github.com/wzpan/cmake-demo">https://github.com/wzpan/cmake-demo</a></td>
</tr>
<tr>
<td>cmake学习</td>
<td><a href="https://blog.csdn.net/jjjstephen/category_11329777.html">https://blog.csdn.net/jjjstephen/category_11329777.html</a></td>
<td>比较有参考价值</td>
</tr>
<tr>
<td>CMake从入门到精通系列链接整理</td>
<td><a href="https://zhuanlan.zhihu.com/p/393316878">https://zhuanlan.zhihu.com/p/393316878</a></td>
<td>吊炸天</td>
</tr>
<tr>
<td>cmake DSL语言</td>
<td><a href="https://blog.csdn.net/wzj_110/category_10357507.html">https://blog.csdn.net/wzj_110&#x2F;category_10357507.html</a></td>
<td>另一个吊炸天</td>
</tr>
<tr>
<td>cmake 语法相关</td>
<td><a href="https://www.cnblogs.com/Braveliu/category/1614009.html">https://www.cnblogs.com/Braveliu/category/1614009.html</a></td>
<td>比较有参考价值</td>
</tr>
</tbody></table>
<h1 id="视频教程与点评"><a href="#视频教程与点评" class="headerlink" title="视频教程与点评"></a>视频教程与点评</h1><table>
<thead>
<tr>
<th>视频名称</th>
<th>地址</th>
<th>点评</th>
</tr>
</thead>
<tbody><tr>
<td>双笙子佯谬 · 【公开课】现代CMake高级教程（持续更新中）</td>
<td><a href="https://www.bilibili.com/video/BV16P4y1g7MH">https://www.bilibili.com/video/BV16P4y1g7MH</a></td>
<td>这个 up 主语速略慢, 就入门来说, 内容极其扎实</td>
</tr>
<tr>
<td>双笙子佯谬 · 【公开课】现代CMake模块化项目管理指南【C&#x2F;C++】</td>
<td><a href="https://www.bilibili.com/video/BV1V84y117YU">https://www.bilibili.com/video/BV1V84y117YU</a></td>
<td>还是上一个 up 主的</td>
</tr>
<tr>
<td>只喝白开水 · 从零开始学cmake</td>
<td><a href="https://space.bilibili.com/2411870/channel/collectiondetail?sid=843628">https://space.bilibili.com/2411870/channel/collectiondetail?sid=843628</a></td>
<td>略零散, 一些较为深入的基操</td>
</tr>
<tr>
<td>原子之音 · 现代C++: CMake简明教程</td>
<td><a href="https://www.bilibili.com/video/BV1xa4y1R7vT">https://www.bilibili.com/video/BV1xa4y1R7vT</a></td>
<td>较完整,可简单入门</td>
</tr>
<tr>
<td>爱编程的大丙 · CMake 保姆级教程【C&#x2F;C++】</td>
<td><a href="https://www.bilibili.com/video/BV14s4y1g7Zj">https://www.bilibili.com/video/BV14s4y1g7Zj</a></td>
<td>卖课的, 这个视频教程可简单入门</td>
</tr>
</tbody></table>
<h1 id="入门参考资料建议"><a href="#入门参考资料建议" class="headerlink" title="入门参考资料建议"></a>入门参考资料建议</h1><p>官方教程可查看如下两个链接<br><a href="https://blog.csdn.net/horsee/article/details/126047555">CMake Tutorial 巡礼</a><br><a href="https://cmake-doc.readthedocs.io/zh-cn/latest/guide/tutorial/index.html">readthedoc · cmake 中文文档</a></p>
<p>喜欢看视频的可查看下面这个教程(提示: 语速略慢, 可以关闭弹幕倍速观看)<br><a href="https://www.bilibili.com/video/BV16P4y1g7MH">双笙子佯谬 · 【公开课】现代CMake高级教程（持续更新中）</a></p>
<h1 id="目前的笔记进度"><a href="#目前的笔记进度" class="headerlink" title="目前的笔记进度"></a>目前的笔记进度</h1><blockquote>
<p>笔记说明</p>
<ol>
<li>软件安装略过</li>
<li>某些软件、工具的基本使用不再赘述</li>
<li><code>cmake</code> 内容杂而乱, 如无特殊情况, 只简单描述某些 <code>cmake</code> 语法的基本使用, 具体而详细的语法详解可参考官方文档</li>
</ol>
</blockquote>
<table>
<thead>
<tr>
<th>地址</th>
<th>内容</th>
<th>托管地址</th>
<th>点评</th>
</tr>
</thead>
<tbody><tr>
<td><a href="/2024/10/09/cmake-Hello-World/">cmake Hello World</a></td>
<td>一个最小化的例子, 包括 <code>linux</code> 环境下使用 <code>cmake</code> 和 <code>gcc</code> 以及如何在 <code>windows</code> 环境下使用 <code>cmake</code> 以及 <code>mingw</code> 和 <code>msvc</code></td>
<td>无</td>
<td>略简,看一眼就行, 也可以复制代码运行一下</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>c++</category>
        <category>cmake</category>
      </categories>
      <tags>
        <tag>c++</tag>
        <tag>cmake</tag>
      </tags>
  </entry>
  <entry>
    <title>若依 环境搭建与启动</title>
    <url>/2024/10/12/%E8%8B%A5%E4%BE%9D-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%90%AF%E5%8A%A8/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>java</category>
        <category>ssm</category>
        <category>ssm 整合</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>ssm</tag>
        <tag>ssm 整合</tag>
      </tags>
  </entry>
  <entry>
    <title>若依源码分析 总览</title>
    <url>/2024/10/12/%E8%8B%A5%E4%BE%9D%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E6%80%BB%E8%A7%88/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>java</category>
        <category>ssm</category>
        <category>ssm 整合</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>ssm</tag>
        <tag>ssm 整合</tag>
      </tags>
  </entry>
  <entry>
    <title>gtk 总览</title>
    <url>/2024/10/15/gtk-%E6%80%BB%E8%A7%88/</url>
    <content><![CDATA[<h1 id="参考资料汇总"><a href="#参考资料汇总" class="headerlink" title="参考资料汇总"></a>参考资料汇总</h1><p><a href="https://gtk.awaysoft.com/">gtk 中文社区</a><br><a href="https://blog.csdn.net/tennysonsky/article/details/42778635">GTK帮助文档的使用</a></p>
<p><a href="https://space.bilibili.com/76048877/channel/collectiondetail?sid=2534379&ctype=0">GTK 包教不包会</a></p>
]]></content>
      <categories>
        <category>桌面端开发</category>
        <category>linux</category>
        <category>gtk</category>
      </categories>
      <tags>
        <tag>桌面端开发</tag>
        <tag>linux</tag>
        <tag>gtk</tag>
      </tags>
  </entry>
  <entry>
    <title>tomcat 总览</title>
    <url>/2024/10/26/tomcat-%E6%80%BB%E8%A7%88/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>996.icu</category>
        <category>tomcat</category>
      </categories>
      <tags>
        <tag>996.icu</tag>
        <tag>tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>java8 函数式编程</title>
    <url>/2024/10/27/java8-%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.bilibili.com/video/BV1fz421C7tj">黑马程序员Java函数式编程全套视频教程，Lambda表达式、Stream流、函数式编程一套全通关</a></p>
<p><a href="https://blog.csdn.net/NarutoConanKing/article/details/86573449">Java8 四大核心函数式接口</a></p>
<p>Java 8函数式编程</p>
<p><img src="/images/2024-10-27-java8-%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/001.png"></p>
<p>Java 8实战</p>
<p><img src="/images/2024-10-27-java8-%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/002.png"></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>spring boot 接收各种参数</title>
    <url>/2024/10/27/spring-boot-%E6%8E%A5%E6%94%B6%E5%90%84%E7%A7%8D%E5%8F%82%E6%95%B0/</url>
    <content><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.csdn.net/qq_44627608/article/details/132425435">SpringBoot接收参数的8种方式</a><br><a href="https://blog.csdn.net/albert_xjf/article/details/131576898">Spring Boot中的请求参数绑定及使用</a></p>
]]></content>
      <categories>
        <category>java</category>
        <category>ssm</category>
        <category>spring boot</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>spring boot</tag>
        <tag>ssm</tag>
      </tags>
  </entry>
  <entry>
    <title>chrome 扩展开发 总览</title>
    <url>/2024/11/03/chrome-%E6%89%A9%E5%B1%95%E5%BC%80%E5%8F%91-%E6%80%BB%E8%A7%88/</url>
    <content><![CDATA[<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://developer.chrome.com/docs/extensions?hl=zh-cn">官方文档</a></p>
<p><a href="https://blog.csdn.net/guoqiankunmiss/article/details/112007833">15000字大章带你一步一步使用Vue3开发chrome浏览器插件</a><br><a href="https://www.cnblogs.com/liuxianan/p/chrome-plugin-develop.html">【干货】Chrome插件(扩展)开发全攻略</a></p>
<p><a href="https://www.cnblogs.com/champagne/p/?page=1">Chrome浏览器扩展开发系列</a></p>
<p><a href="https://segmentfault.com/a/1190000042851130">Chrome Extension v3 开发指南</a></p>
]]></content>
      <categories>
        <category>器</category>
      </categories>
      <tags>
        <tag>器</tag>
      </tags>
  </entry>
  <entry>
    <title>qt 总览</title>
    <url>/2024/11/05/qt-%E6%80%BB%E8%A7%88/</url>
    <content><![CDATA[<h1 id="参考资料汇总"><a href="#参考资料汇总" class="headerlink" title="参考资料汇总"></a>参考资料汇总</h1><h2 id="博客系列"><a href="#博客系列" class="headerlink" title="博客系列"></a>博客系列</h2><p><a href="https://zetcode.apachecn.org/gui/">【布客】ZetCode 图形界面教程 包含 win32 qt swing等</a></p>
<h2 id="视频教程"><a href="#视频教程" class="headerlink" title="视频教程"></a>视频教程</h2><p><a href="https://www.bilibili.com/video/BV1GW42197ff">C++QT2024年最新版</a></p>
<p><a href="https://www.bilibili.com/video/BV1km4y1k7CW">《Qt6 C++开发指南 》2023（上册，完整版）</a></p>
<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><p><a href="/2024/11/05/qt-%E5%AE%89%E8%A3%85%E4%B8%8E-Hello-World/">qt 安装与 Hello World</a></p>
]]></content>
      <categories>
        <category>桌面端开发</category>
        <category>qt</category>
      </categories>
      <tags>
        <tag>桌面端开发</tag>
        <tag>qt</tag>
      </tags>
  </entry>
  <entry>
    <title>qt 安装与 Hello World</title>
    <url>/2024/11/05/qt-%E5%AE%89%E8%A3%85%E4%B8%8E-Hello-World/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>桌面端开发</category>
        <category>qt</category>
      </categories>
      <tags>
        <tag>桌面端开发</tag>
        <tag>qt</tag>
      </tags>
  </entry>
  <entry>
    <title>makefile 总览</title>
    <url>/2024/11/09/makefile-%E6%80%BB%E8%A7%88/</url>
    <content><![CDATA[<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.gnu.org/software/make/">gnu make 官网</a></p>
<p><a href="https://github.com/seisman/how-to-write-makefile">跟我一起写Makefile (PDF重制版)</a></p>
<p><a href="https://www.bilibili.com/video/BV1Bv4y1J7QT">从零开始学Makefile</a><br><a href="https://www.bilibili.com/video/BV1Xt4y1h7rH">makefile从入门到项目编译实战</a></p>
<h1 id="进度"><a href="#进度" class="headerlink" title="进度"></a>进度</h1><p><a href="/2024/11/09/makefile-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/">makefile 基本使用</a></p>
]]></content>
      <categories>
        <category>c++</category>
        <category>makefile</category>
      </categories>
      <tags>
        <tag>c++</tag>
        <tag>makefile</tag>
      </tags>
  </entry>
  <entry>
    <title>makefile 基本使用</title>
    <url>/2024/11/09/makefile-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="一个最简单的-Makefile"><a href="#一个最简单的-Makefile" class="headerlink" title="一个最简单的 Makefile"></a>一个最简单的 Makefile</h1><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:make_cpp_hello$ tree</span><br><span class="line">.</span><br><span class="line">├── hello.cpp</span><br><span class="line">└── Makefile</span><br><span class="line"></span><br><span class="line">1 directory, 2 files</span><br><span class="line">laolang@laolang-mint:make_cpp_hello$ </span><br></pre></td></tr></table></figure>

<h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><h3 id="hello-cpp"><a href="#hello-cpp" class="headerlink" title="hello.cpp"></a>hello.cpp</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Hello World&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Makefile"><a href="#Makefile" class="headerlink" title="Makefile"></a>Makefile</h3><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="section">hello: hello.cpp</span></span><br><span class="line">	g++ -o hello hello.cpp</span><br></pre></td></tr></table></figure>

<h2 id="使用过程"><a href="#使用过程" class="headerlink" title="使用过程"></a>使用过程</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:make_cpp_hello$ ls -l</span><br><span class="line">total 8</span><br><span class="line">-rw-rw-r-- 1 laolang laolang 92 11月  9 18:21 hello.cpp</span><br><span class="line">-rw-rw-r-- 1 laolang laolang 40 11月  9 18:21 Makefile</span><br><span class="line">laolang@laolang-mint:make_cpp_hello$ make</span><br><span class="line">g++ -o hello hello.cpp</span><br><span class="line">laolang@laolang-mint:make_cpp_hello$ ls -l</span><br><span class="line">total 28</span><br><span class="line">-rwxrwxr-x 1 laolang laolang 16496 11月  9 18:32 hello</span><br><span class="line">-rw-rw-r-- 1 laolang laolang    92 11月  9 18:21 hello.cpp</span><br><span class="line">-rw-rw-r-- 1 laolang laolang    40 11月  9 18:21 Makefile</span><br><span class="line">laolang@laolang-mint:make_cpp_hello$ ./hello </span><br><span class="line">Hello World</span><br><span class="line">laolang@laolang-mint:make_cpp_hello$ </span><br></pre></td></tr></table></figure>

<h2 id="分两步编译"><a href="#分两步编译" class="headerlink" title="分两步编译"></a>分两步编译</h2><h3 id="Makefile-1"><a href="#Makefile-1" class="headerlink" title="Makefile"></a>Makefile</h3><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="section">hello: hello.o</span></span><br><span class="line">	g++ hello.o -o hello</span><br><span class="line"><span class="section">hello.o: hello.cpp</span></span><br><span class="line">	g++ -c hello.cpp</span><br></pre></td></tr></table></figure>

<h3 id="使用过程-1"><a href="#使用过程-1" class="headerlink" title="使用过程"></a>使用过程</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:make_cpp_hello$ ls -l</span><br><span class="line">total 8</span><br><span class="line">-rw-rw-r-- 1 laolang laolang 92 11月  9 18:21 hello.cpp</span><br><span class="line">-rw-rw-r-- 1 laolang laolang 73 11月  9 18:33 Makefile</span><br><span class="line">laolang@laolang-mint:make_cpp_hello$ make</span><br><span class="line">g++ -c hello.cpp</span><br><span class="line">g++ hello.o -o hello</span><br><span class="line">laolang@laolang-mint:make_cpp_hello$ ls -l</span><br><span class="line">total 32</span><br><span class="line">-rwxrwxr-x 1 laolang laolang 16496 11月  9 18:33 hello</span><br><span class="line">-rw-rw-r-- 1 laolang laolang    92 11月  9 18:21 hello.cpp</span><br><span class="line">-rw-rw-r-- 1 laolang laolang  2128 11月  9 18:33 hello.o</span><br><span class="line">-rw-rw-r-- 1 laolang laolang    73 11月  9 18:33 Makefile</span><br><span class="line">laolang@laolang-mint:make_cpp_hello$ ./hello </span><br><span class="line">Hello World</span><br><span class="line">laolang@laolang-mint:make_cpp_hello$ </span><br></pre></td></tr></table></figure>

<h1 id="Makefile-文件名的命名与指定"><a href="#Makefile-文件名的命名与指定" class="headerlink" title="Makefile 文件名的命名与指定"></a>Makefile 文件名的命名与指定</h1><h2 id="命名方式"><a href="#命名方式" class="headerlink" title="命名方式"></a>命名方式</h2><p><code>make</code> 会自动查找 <code>Makefile</code> 文件,查找顺序为 <code>GNUmakefile</code> -&gt; <code>makefile</code> -&gt; <code>Makefile</code></p>
<p><strong>GNUmakefile</strong>: 不建议使用,因为只有 <code>GNU make</code> 会识别<br><strong>makefile</strong>: 可以使用, <code>GNU make</code> 和其他版本的 <code>make</code> 可以识别<br><strong>Makefile</strong>: 最常用, 建议使用该命名方式</p>
<h2 id="如何指定-Makefile-文件"><a href="#如何指定-Makefile-文件" class="headerlink" title="如何指定 Makefile 文件"></a>如何指定 Makefile 文件</h2><p>如果 <code>Makefile</code> 文件名比较特殊, 可在命令行指定</p>
<ol>
<li><code>make -f &lt;filename&gt;</code></li>
<li><code>make --file=&lt;filename&gt;</code></li>
</ol>
<h1 id="一个略复杂的-Makefile"><a href="#一个略复杂的-Makefile" class="headerlink" title="一个略复杂的 Makefile"></a>一个略复杂的 Makefile</h1><h2 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h2><p><a href="https://github.com/mayerui/sudoku">https://github.com/mayerui/sudoku</a></p>
<h2 id="目录结构-1"><a href="#目录结构-1" class="headerlink" title="目录结构"></a>目录结构</h2><blockquote>
<p>此目录中的文件来自与 <code>sudoku/src</code> ,然后添加了一个 <code>Makefile</code> 文件</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:sudoku_make$ l</span><br><span class="line">total 76K</span><br><span class="line">-rw-rw-r-- 1 laolang laolang 2.4K 2024-11-09 23:09:12 block.cpp</span><br><span class="line">-rw-rw-r-- 1 laolang laolang  390 2024-11-09 23:09:17 block.h</span><br><span class="line">-rw-rw-r-- 1 laolang laolang 1.3K 2024-11-09 23:09:17 color.h</span><br><span class="line">-rw-rw-r-- 1 laolang laolang  752 2024-11-09 23:09:12 command.cpp</span><br><span class="line">-rw-rw-r-- 1 laolang laolang  809 2024-11-09 23:09:17 command.h</span><br><span class="line">-rw-rw-r-- 1 laolang laolang 1.2K 2024-11-09 23:09:17 common.h</span><br><span class="line">-rw-rw-r-- 1 laolang laolang  148 2024-11-09 23:09:17 display_symbol.h</span><br><span class="line">-rw-rw-r-- 1 laolang laolang 2.0K 2024-11-09 23:09:12 i18n.cpp</span><br><span class="line">-rw-rw-r-- 1 laolang laolang  566 2024-11-09 23:09:17 i18n.h</span><br><span class="line">-rw-rw-r-- 1 laolang laolang 1.8K 2024-11-09 23:09:12 input.cpp</span><br><span class="line">-rw-rw-r-- 1 laolang laolang  157 2024-11-09 23:09:17 input.h</span><br><span class="line">-rw-rw-r-- 1 laolang laolang 1.2K 2024-11-09 23:09:12 main.cpp</span><br><span class="line">-rw-rw-r-- 1 laolang laolang  782 2024-11-09 23:17:54 Makefile</span><br><span class="line">-rw-rw-r-- 1 laolang laolang 9.5K 2024-11-09 23:09:12 scene.cpp</span><br><span class="line">-rw-rw-r-- 1 laolang laolang 1.1K 2024-11-09 23:09:17 scene.h</span><br><span class="line">-rw-rw-r-- 1 laolang laolang  184 2024-11-09 23:13:45 system_env.hpp</span><br><span class="line">-rw-rw-r-- 1 laolang laolang 2.7K 2024-11-09 23:09:27 utility.inl</span><br><span class="line">laolang@laolang-mint:sudoku_make$ </span><br></pre></td></tr></table></figure>

<h2 id="一个简略的-Makefile"><a href="#一个简略的-Makefile" class="headerlink" title="一个简略的 Makefile"></a>一个简略的 Makefile</h2><h3 id="确定文件依赖关系的方法"><a href="#确定文件依赖关系的方法" class="headerlink" title="确定文件依赖关系的方法"></a>确定文件依赖关系的方法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:sudoku_make$ g++ -MM main.cpp</span><br><span class="line">main.o: main.cpp i18n.h input.h common.h scene.h block.h command.h \</span><br><span class="line"> system_env.hpp utility.inl</span><br><span class="line">laolang@laolang-mint:sudoku_make$ </span><br></pre></td></tr></table></figure>

<h3 id="Makefile-内容"><a href="#Makefile-内容" class="headerlink" title="Makefile 内容"></a>Makefile 内容</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudoku: block.o  command.o  i18n.o  input.o  main.o  scene.o</span><br><span class="line">	g++ -o sudoku block.o  command.o  i18n.o  input.o  main.o  scene.o</span><br><span class="line"></span><br><span class="line">block.o: block.cpp block.h common.h color.h display_symbol.h</span><br><span class="line">	g++ -c block.cpp -o block.o</span><br><span class="line"></span><br><span class="line">command.o: command.cpp scene.h common.h block.h command.h</span><br><span class="line">	g++ -c command.cpp -o command.o</span><br><span class="line"></span><br><span class="line">i18n.o: i18n.cpp i18n.h</span><br><span class="line">	g++ -c i18n.cpp -o i18n.o</span><br><span class="line"></span><br><span class="line">input.o: input.cpp common.h i18n.h utility.inl</span><br><span class="line">	g++ -c input.cpp -o input.o</span><br><span class="line"></span><br><span class="line">main.o: main.cpp i18n.h input.h common.h scene.h block.h command.h system_env.hpp utility.inl</span><br><span class="line">	g++ -c main.cpp -o main.o</span><br><span class="line"></span><br><span class="line">scene.o: scene.cpp scene.h common.h block.h command.h display_symbol.h i18n.h utility.inl color.h</span><br><span class="line">	g++ -c scene.cpp -o scene.o</span><br><span class="line"></span><br><span class="line">clean:</span><br><span class="line">	rm -rf sudoku</span><br><span class="line">	rm -rf block.o  command.o  i18n.o  input.o  main.o  scene.o</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="编译过程"><a href="#编译过程" class="headerlink" title="编译过程"></a>编译过程</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:sudoku_make$ make</span><br><span class="line">g++ -c block.cpp -o block.o</span><br><span class="line">g++ -c command.cpp -o command.o</span><br><span class="line">g++ -c i18n.cpp -o i18n.o</span><br><span class="line">g++ -c input.cpp -o input.o</span><br><span class="line">g++ -c main.cpp -o main.o</span><br><span class="line">g++ -c scene.cpp -o scene.o</span><br><span class="line">g++ -o sudoku block.o  command.o  i18n.o  input.o  main.o  scene.o</span><br><span class="line">laolang@laolang-mint:sudoku_make$ make</span><br><span class="line">make: &#x27;sudoku&#x27; is up to date.</span><br><span class="line">laolang@laolang-mint:sudoku_make$ make clean</span><br><span class="line">rm -rf sudoku</span><br><span class="line">rm -rf block.o  command.o  i18n.o  input.o  main.o  scene.o</span><br><span class="line">laolang@laolang-mint:sudoku_make$ </span><br></pre></td></tr></table></figure>

<h1 id="目标与伪目标"><a href="#目标与伪目标" class="headerlink" title="目标与伪目标"></a>目标与伪目标</h1><p><code>.DEFAULT_GOAL</code>: 指定默认的目标. 如果没有显示的指定, 则 <code>Makefile</code> 的第一个目标就是默认的目标<br><code>.PHONY</code>: 指定伪目标. <code>clean</code> 只是一个标签,不是一个需要生成的文件,使用 <code>.PHONY</code> 可以显示的指明 <code>clean</code> 是一个伪目标, 可避免文件名和伪目标重名. <code>main.o</code> 即是一个伪目标又是一个需要生成的文件, 此时每次执行都会生成 <code>main.o</code> , 也就会重新生成依赖 <code>main.o</code> 的目标<br><code>-rm -rf sudoku</code>: 意指无论文件是否存在,都不会报错</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.DEFAULT_GOAL = sudoku</span><br><span class="line"></span><br><span class="line">sudoku: block.o  command.o  i18n.o  input.o  main.o  scene.o</span><br><span class="line">	g++ -o sudoku block.o  command.o  i18n.o  input.o  main.o  scene.o</span><br><span class="line"></span><br><span class="line">block.o: block.cpp block.h common.h color.h display_symbol.h</span><br><span class="line">	g++ -c block.cpp -o block.o</span><br><span class="line"></span><br><span class="line">command.o: command.cpp scene.h common.h block.h command.h</span><br><span class="line">	g++ -c command.cpp -o command.o</span><br><span class="line"></span><br><span class="line">i18n.o: i18n.cpp i18n.h</span><br><span class="line">	g++ -c i18n.cpp -o i18n.o</span><br><span class="line"></span><br><span class="line">input.o: input.cpp common.h i18n.h utility.inl</span><br><span class="line">	g++ -c input.cpp -o input.o</span><br><span class="line"></span><br><span class="line">main.o: main.cpp i18n.h input.h common.h scene.h block.h command.h system_env.hpp utility.inl</span><br><span class="line">	g++ -c main.cpp -o main.o</span><br><span class="line"></span><br><span class="line">scene.o: scene.cpp scene.h common.h block.h command.h display_symbol.h i18n.h utility.inl color.h</span><br><span class="line">	g++ -c scene.cpp -o scene.o</span><br><span class="line"></span><br><span class="line">.PHONY : clean main.o</span><br><span class="line">clean:</span><br><span class="line">	- rm -rf sudoku</span><br><span class="line">	- rm -rf block.o  command.o  i18n.o  input.o  main.o  scene.o</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h1><h2 id="依赖类型"><a href="#依赖类型" class="headerlink" title="依赖类型"></a>依赖类型</h2><p>之前的依赖形式都是普通依赖, 直接列在目标后面, 其有两个特点</p>
<ol>
<li>如果这一依赖是由其他规则生成的文件, 那么执行到这一目标前会先执行生成依赖的那一规则</li>
<li>如果任何一个依赖文件修改时间比目标晚, 那么就重新生成目标文件</li>
</ol>
<h2 id="order-only-依赖"><a href="#order-only-依赖" class="headerlink" title="order-only 依赖"></a>order-only 依赖</h2><p>依赖文件不存在时, 会执行对应的方法生成, 但依赖文件更新并不会导致目标文件的更新.<br>如果目标文件已存在, <code>order-only</code> 依赖中的文件即使修改时间比目标文件晚, 目标文件也不会更新.</p>
<p>定义方法如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">targets: normal-prerequisites | order-only-prerequisites</span><br></pre></td></tr></table></figure>
<p><code>normal-prerequisites</code> 可以为空</p>
<h1 id="关于方法的一些问题"><a href="#关于方法的一些问题" class="headerlink" title="关于方法的一些问题"></a>关于方法的一些问题</h1><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.PHONY : clean</span><br><span class="line">clean:</span><br><span class="line">	rm sudoku</span><br></pre></td></tr></table></figure>

<p>如上命令,当文件不存在时,会报错, 并且会退出 <code>make</code> 进程</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:sudoku_make$ make clean</span><br><span class="line">rm sudoku</span><br><span class="line">rm: cannot remove &#x27;sudoku&#x27;: No such file or directory</span><br><span class="line">make: *** [Makefile:27: clean] Error 1</span><br><span class="line">laolang@laolang-mint:sudoku_make$ </span><br></pre></td></tr></table></figure>

<p>解决方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.PHONY : clean</span><br><span class="line">clean:</span><br><span class="line">	- rm sudoku</span><br></pre></td></tr></table></figure>

<p>命令前加 <code>-</code> 虽然还是会报错,但是不会退出 <code>make</code> 进程</p>
<h2 id="禁止回显"><a href="#禁止回显" class="headerlink" title="禁止回显"></a>禁止回显</h2><h3 id="添加"><a href="#添加" class="headerlink" title="添加 @"></a>添加 @</h3><p>每一条命令都会回显, 可在命令前加 <code>@</code> 取消回显</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.PHONY : clean</span><br><span class="line">clean:</span><br><span class="line">	-@ rm -rf sudoku</span><br><span class="line">	-@ rm -rf block.o  command.o  i18n.o  input.o  main.o  scene.o</span><br></pre></td></tr></table></figure>

<h3 id="SILENT"><a href="#SILENT" class="headerlink" title=".SILENT"></a>.SILENT</h3><p>另一种方式是使用 <code>.SILENT</code> 显示指定不需要回显命令的目标</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.SILENT: hello</span><br><span class="line">hello:</span><br><span class="line">	@str=hello</span><br><span class="line">	echo $$str</span><br></pre></td></tr></table></figure>
<p>此时 <code>hello</code> 不会再输出命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:sudoku_make$ make hello</span><br><span class="line">hello</span><br><span class="line">laolang@laolang-mint:sudoku_make$ </span><br></pre></td></tr></table></figure>

<h3 id="s-选项"><a href="#s-选项" class="headerlink" title="-s 选项"></a>-s 选项</h3><p>也可以使用 <code>-s</code> 选项</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:sudoku_make$ make</span><br><span class="line">g++ -c block.cpp -o block.o</span><br><span class="line">g++ -c command.cpp -o command.o</span><br><span class="line">g++ -c i18n.cpp -o i18n.o</span><br><span class="line">g++ -c input.cpp -o input.o</span><br><span class="line">g++ -c main.cpp -o main.o</span><br><span class="line">g++ -c scene.cpp -o scene.o</span><br><span class="line">g++ -o sudoku block.o  command.o  i18n.o  input.o  main.o  scene.o</span><br><span class="line">laolang@laolang-mint:sudoku_make$ make clean</span><br><span class="line">laolang@laolang-mint:sudoku_make$ make -s</span><br><span class="line">laolang@laolang-mint:sudoku_make$ </span><br></pre></td></tr></table></figure>

<h2 id="显示要执行的命令"><a href="#显示要执行的命令" class="headerlink" title="显示要执行的命令"></a>显示要执行的命令</h2><p><code>make -n &lt;target&gt;</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:sudoku_make$ make clean</span><br><span class="line">laolang@laolang-mint:sudoku_make$ make clean -n</span><br><span class="line">rm -rf sudoku</span><br><span class="line">rm -rf block.o  command.o  i18n.o  input.o  main.o  scene.o</span><br><span class="line">laolang@laolang-mint:sudoku_make$ </span><br></pre></td></tr></table></figure>

<h2 id="共享-shell-进程"><a href="#共享-shell-进程" class="headerlink" title="共享 shell 进程"></a>共享 shell 进程</h2><p><code>make</code> 中每条命令都会开启一个独立的进程, 如果要在同一个进程中使用 <code>shell</code> 命令, 可使用 <code>.ONESHELL</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hello:</span><br><span class="line">	@str=hello</span><br><span class="line">	@echo $$str</span><br></pre></td></tr></table></figure>

<p>此时输出空白</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:sudoku_make$ make hello</span><br><span class="line"></span><br><span class="line">laolang@laolang-mint:sudoku_make$ </span><br></pre></td></tr></table></figure>

<p>添加 <code>.ONESHELL</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.ONESHELL:</span><br><span class="line">hello:</span><br><span class="line">	@str=hello</span><br><span class="line">	@echo $$str</span><br></pre></td></tr></table></figure>

<p>可以看到输出</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:sudoku_make$ make hello</span><br><span class="line">hello</span><br><span class="line">laolang@laolang-mint:sudoku_make$ </span><br></pre></td></tr></table></figure>


<h1 id="使用变量简化-Makefile"><a href="#使用变量简化-Makefile" class="headerlink" title="使用变量简化 Makefile"></a>使用变量简化 Makefile</h1><h2 id="Makefile-变量简述"><a href="#Makefile-变量简述" class="headerlink" title="Makefile 变量简述"></a>Makefile 变量简述</h2><p>在 <code>Makefile</code> 中定义变量, 就像是在 <code>C/C++</code> 中定义宏一样, 即用一个名称代表一串文本. 但是 <code>Makefile</code> 的变量值是可以改变的, 定义后可以在目标、方法、依赖等 <code>Makefile</code> 中任意地方进行引用</p>
<p><strong>注意:</strong></p>
<blockquote>
<p><code>Makefile</code> 中的变量值只有一种类型: 字符串</p>
</blockquote>
<h2 id="定义变量"><a href="#定义变量" class="headerlink" title="定义变量"></a>定义变量</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># &lt;变量名&gt; = &lt;变量值&gt; &lt;变量名&gt; := &lt;变量值&gt; &lt;变量名&gt; ?= &lt;变量值&gt; &lt;变量名&gt; += &lt;变量值&gt;</span><br></pre></td></tr></table></figure>

<p>变量名区分大小写,且不能包含 <code>:</code> 、 <code>,</code> 、 <code>#</code> 、 <code>=</code></p>
<p>使用方式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># $(&lt;变量名&gt;) 或者 $&#123;&lt;变量名&gt;&#125;</span><br></pre></td></tr></table></figure>

<p>例如如下简化</p>
<blockquote>
<p>使用变量 <code>objs</code> 复用 <code>.o</code> 文件列表</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.DEFAULT_GOAL = sudoku</span><br><span class="line"></span><br><span class="line">.SILENT: hello</span><br><span class="line"></span><br><span class="line">.ONESHELL:</span><br><span class="line"></span><br><span class="line">objs = block.o command.o i18n.o input.o main.o scene.o</span><br><span class="line"></span><br><span class="line">sudoku: $(objs)</span><br><span class="line">	g++ -o sudoku $(objs)</span><br><span class="line"></span><br><span class="line">block.o: block.cpp block.h common.h color.h display_symbol.h</span><br><span class="line">	g++ -c block.cpp -o block.o</span><br><span class="line"></span><br><span class="line">command.o: command.cpp scene.h common.h block.h command.h</span><br><span class="line">	g++ -c command.cpp -o command.o</span><br><span class="line"></span><br><span class="line">i18n.o: i18n.cpp i18n.h</span><br><span class="line">	g++ -c i18n.cpp -o i18n.o</span><br><span class="line"></span><br><span class="line">input.o: input.cpp common.h i18n.h utility.inl</span><br><span class="line">	g++ -c input.cpp -o input.o</span><br><span class="line"></span><br><span class="line">main.o: main.cpp i18n.h input.h common.h scene.h block.h command.h system_env.hpp utility.inl</span><br><span class="line">	g++ -c main.cpp -o main.o</span><br><span class="line"></span><br><span class="line">scene.o: scene.cpp scene.h common.h block.h command.h display_symbol.h i18n.h utility.inl color.h</span><br><span class="line">	g++ -c scene.cpp -o scene.o</span><br><span class="line"></span><br><span class="line">.PHONY : clean</span><br><span class="line">clean:</span><br><span class="line">	-@ rm -rf sudoku</span><br><span class="line">	-@ rm -rf $(objs)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Makefile-读取过程"><a href="#Makefile-读取过程" class="headerlink" title="Makefile 读取过程"></a>Makefile 读取过程</h2><p><code>GNU make</code> 分两个阶段来执行 <code>Makefile</code></p>
<p>第一阶段(读取阶段):</p>
<ul>
<li>读取 <code>Makefile</code> 文件的所有内容</li>
<li>根据 <code>Makefile</code> 的内容在程序内建立起变量</li>
<li>在程序内建起显示规则、隐式规则</li>
<li>建立目标和依赖之间的依赖图</li>
</ul>
<p>第二阶段(目标更新阶段):</p>
<ul>
<li>用第一阶段构建起来的数据确定哪个目标需要更新,然后执行对应的更新方法</li>
</ul>
<p>变量和函数的展开如果发生在第一节点, 就称作 <em>立即展开</em> , 否则称作 <em>延迟展开</em> . 立即展开的变量或函数都在第一阶段, 也就是 <code>Makefile</code> 呗读取解析的时候就进行展开. 延迟展开的变量或函数将会到用到的时候才会进行展开, 有一下两种情况:</p>
<ol>
<li>在一个立即展开的表达式中用到</li>
<li>在第二个阶段中用到</li>
</ol>
<p><strong>显示规则中, 目标和依赖部分是立即展开, 在更新方法中延迟展开</strong></p>
<h2 id="各种变量赋值方式"><a href="#各种变量赋值方式" class="headerlink" title="各种变量赋值方式"></a>各种变量赋值方式</h2><h3 id="递归展开赋值-延迟展开"><a href="#递归展开赋值-延迟展开" class="headerlink" title="&#x3D; 递归展开赋值(延迟展开)"></a>&#x3D; 递归展开赋值(延迟展开)</h3><p>第一中方式就是直接使用 <code>=</code>, 这种方式如果赋值的时候右边是其他变量或其他变量引用或函数调用之类的, 将不会做处理, 在使用到该变量的时候再进行处理得到变量值( <code>Makefile</code> 执行的第二个阶段再进行变量展开得到变量值)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">objs = a.cpp b.cpp</span><br><span class="line"></span><br><span class="line">files = $(objs)</span><br><span class="line"></span><br><span class="line">all:</span><br><span class="line">	echo $(files)</span><br><span class="line"></span><br><span class="line">objs = a.o b.o</span><br></pre></td></tr></table></figure>

<p>运行效果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:tmp$ make -s</span><br><span class="line">a.o b.o</span><br><span class="line">laolang@laolang-mint:tmp$ </span><br></pre></td></tr></table></figure>

<h3 id="简单赋值-立即展开"><a href="#简单赋值-立即展开" class="headerlink" title=":&#x3D; 简单赋值(立即展开)"></a>:&#x3D; 简单赋值(立即展开)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">objs = a.cpp b.cpp</span><br><span class="line"></span><br><span class="line">files := $(objs)</span><br><span class="line"></span><br><span class="line">all:</span><br><span class="line">	echo $(files)</span><br><span class="line"></span><br><span class="line">objs = a.o b.o</span><br></pre></td></tr></table></figure>

<p>运行效果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:tmp$ make -s</span><br><span class="line">a.cpp b.cpp</span><br><span class="line">laolang@laolang-mint:tmp$ </span><br></pre></td></tr></table></figure>

<h3 id="条件赋值-延迟展开"><a href="#条件赋值-延迟展开" class="headerlink" title="?&#x3D; 条件赋值(延迟展开)"></a>?&#x3D; 条件赋值(延迟展开)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = hello</span><br><span class="line">a ?= world</span><br><span class="line">b ?= world</span><br><span class="line">b ?= hello</span><br><span class="line"></span><br><span class="line">all:</span><br><span class="line">	echo $(a) $(b)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>运行效果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:tmp$ make -s</span><br><span class="line">hello world</span><br><span class="line">laolang@laolang-mint:tmp$ </span><br></pre></td></tr></table></figure>

<h3 id="追加赋值-立即展开"><a href="#追加赋值-立即展开" class="headerlink" title="+&#x3D; 追加赋值(立即展开)"></a>+&#x3D; 追加赋值(立即展开)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CC = gcc</span><br><span class="line">CFLAGS += -Wall</span><br><span class="line">CFLAGS += -O3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">hello: hello.o</span><br><span class="line">	gcc -o hello hello.o</span><br><span class="line"></span><br><span class="line">hello.o: main.c</span><br><span class="line">	$(CC) $(CFLAGS) -c main.c -o hello.o</span><br></pre></td></tr></table></figure>

<p>运行效果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:tmp$ make</span><br><span class="line">gcc -Wall -O3 -c main.c -o hello.o</span><br><span class="line">gcc -o hello hello.o</span><br><span class="line">laolang@laolang-mint:tmp$ </span><br></pre></td></tr></table></figure>

<h3 id="shell-运行赋值"><a href="#shell-运行赋值" class="headerlink" title="shell 运行赋值"></a>shell 运行赋值</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">work_dir != pwd</span><br><span class="line"></span><br><span class="line">all:</span><br><span class="line">	echo $(work_dir)</span><br></pre></td></tr></table></figure>

<p>运行效果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:tmp$ make -s</span><br><span class="line">/home/laolang/code/make_study/tmp</span><br><span class="line">laolang@laolang-mint:tmp$ </span><br></pre></td></tr></table></figure>

<h2 id="定义多行变量"><a href="#定义多行变量" class="headerlink" title="定义多行变量"></a>定义多行变量</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">define msg</span><br><span class="line">echo hello</span><br><span class="line">echo world</span><br><span class="line">endef</span><br><span class="line"></span><br><span class="line">all:</span><br><span class="line">	$(msg)</span><br></pre></td></tr></table></figure>

<p>运行效果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:tmp$ make -s</span><br><span class="line">hello</span><br><span class="line">world</span><br><span class="line">laolang@laolang-mint:tmp$ </span><br></pre></td></tr></table></figure>

<h2 id="取消变量"><a href="#取消变量" class="headerlink" title="取消变量"></a>取消变量</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">undefine &lt;变量名&gt;</span><br></pre></td></tr></table></figure>

<h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><p>直接使用即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">all:</span><br><span class="line">	echo $(PATH)</span><br></pre></td></tr></table></figure>

<p>运行效果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:tmp$ make -s</span><br><span class="line">/home/laolang/program/ninja/bin:/home/laolang/program/cmake/bin:/home/laolang/.local/bin:/home/laolang/program/ninja/bin:/home/laolang/program/cmake/bin:/home/laolang/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/laolang/.dotnet/tools</span><br><span class="line">laolang@laolang-mint:tmp$ </span><br></pre></td></tr></table></figure>

<h2 id="变量替换引用"><a href="#变量替换引用" class="headerlink" title="变量替换引用"></a>变量替换引用</h2><p>语法：$(var:a&#x3D;b)，意思是将变量var的值当中每一项结尾的a替换为b，直接上例子</p>
<p>也可以: <code>objs := $(files:%.cpp=%.o)</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">srcs = main.c</span><br><span class="line">objs := $(srcs:.c=.o)</span><br><span class="line"></span><br><span class="line">hello: $(objs)</span><br><span class="line">	gcc -o hello $(objs)</span><br><span class="line"></span><br><span class="line">$(objs): $(srcs)</span><br><span class="line">	gcc -c $(srcs) -o $(objs)</span><br></pre></td></tr></table></figure>

<p>运行效果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:tmp$ ls -l</span><br><span class="line">total 8</span><br><span class="line">-rw-rw-r-- 1 laolang laolang  77 11月 11 01:05 main.c</span><br><span class="line">-rw-rw-r-- 1 laolang laolang 118 11月 11 01:27 Makefile</span><br><span class="line">laolang@laolang-mint:tmp$ make</span><br><span class="line">gcc -c main.c -o main.o</span><br><span class="line">gcc -o hello main.o</span><br><span class="line">laolang@laolang-mint:tmp$ l</span><br><span class="line">total 28K</span><br><span class="line">-rwxrwxr-x 1 laolang laolang  16K 2024-11-11 01:27:33 hello*</span><br><span class="line">-rw-rw-r-- 1 laolang laolang   77 2024-11-11 01:05:25 main.c</span><br><span class="line">-rw-rw-r-- 1 laolang laolang 1.5K 2024-11-11 01:27:33 main.o</span><br><span class="line">-rw-rw-r-- 1 laolang laolang  118 2024-11-11 01:27:27 Makefile</span><br><span class="line">laolang@laolang-mint:tmp$ ./hello </span><br><span class="line"></span><br><span class="line">Hello World</span><br><span class="line">laolang@laolang-mint:tmp$ </span><br></pre></td></tr></table></figure>

<h2 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BUILD_TYPE := DEBUG</span><br><span class="line">all:</span><br><span class="line">	echo $(BUILD_TYPE)</span><br><span class="line">	</span><br></pre></td></tr></table></figure>

<p>运行效果</p>
<blockquote>
<p>注意: &#x3D; 两边不能有空格</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:tmp$ make -s</span><br><span class="line">DEBUG</span><br><span class="line">laolang@laolang-mint:tmp$ make BUILD_TYPE=RELEASE -s</span><br><span class="line">RELEASE</span><br><span class="line">laolang@laolang-mint:tmp$ </span><br></pre></td></tr></table></figure>

<h2 id="自动变量"><a href="#自动变量" class="headerlink" title="自动变量"></a>自动变量</h2><table>
    <thead>
        <tr>
            <td width="100" align="center">变量名</td>
            <td>含义</td>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td align="center">$@</td>
            <td>①本条规则的目标名；<br />②如果目标是归档文件的成员，则为归档文件名；<br />③在多目标的模式规则中, 为导致本条规则方法执行的那个目标名；</td>
        </tr>
        <tr>
            <td align="center">@<</td>
            <td>本条规则的第一个依赖名称</td>
        </tr>
        <tr>
            <td align="center">$?</td>
            <td>依赖中修改时间晚于目标文件修改时间的所有文件名，以空格隔开</td>
        </tr>
        <tr>
            <td align="center">$^</td>
            <td>所有依赖文件名，文件名不会重复，不包含order-only依赖</td>
        </tr>
        <tr>
            <td align="center">$+</td>
            <td>类似上一个， 表示所有依赖文件名，包括重复的文件名，不包含order-only依赖</td>
        </tr>
        <tr>
            <td align="center">$|</td>
            <td>所有order-only依赖文件名</td>
        </tr>
        <tr>
            <td align="center">$*</td>
            <td>：(简单理解)目标文件名的主干部分(即不包括后缀名)</td>
        </tr>
        <tr>
            <td align="center">$%</td>
            <td>如果目标不是归档文件，则为空；如果目标是归档文件成员，则为对应的成员文件名</td>
        </tr>
    </tbody>
</table>


<p>以下变量对应上述变量，D为对应变量所在的目录，结尾不带&#x2F;，F为对应变量除去目录部分的文件名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$(@D)</span><br><span class="line"></span><br><span class="line">$(@F)</span><br><span class="line"></span><br><span class="line">$(*D)</span><br><span class="line"></span><br><span class="line">$(*F)</span><br><span class="line"></span><br><span class="line">$(%D)</span><br><span class="line"></span><br><span class="line">$(%F)</span><br><span class="line"></span><br><span class="line">$(&lt;D)</span><br><span class="line"></span><br><span class="line">$(&lt;F)</span><br><span class="line"></span><br><span class="line">$(^D)</span><br><span class="line"></span><br><span class="line">$(^F)</span><br><span class="line"></span><br><span class="line">$(+D)</span><br><span class="line"></span><br><span class="line">$(+F)</span><br><span class="line"></span><br><span class="line">$(?D)</span><br><span class="line"></span><br><span class="line">$(?F)</span><br></pre></td></tr></table></figure>

<p>例如修改 <code>sudoku</code> 的 <code>Makefile</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">CXX = g++</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.DEFAULT_GOAL = sudoku</span><br><span class="line"></span><br><span class="line">.SILENT: hello</span><br><span class="line"></span><br><span class="line">.ONESHELL:</span><br><span class="line"></span><br><span class="line">objs = block.o command.o i18n.o input.o main.o scene.o</span><br><span class="line"></span><br><span class="line">sudoku: $(objs)</span><br><span class="line">	$(CXX) -o $@ $^</span><br><span class="line"></span><br><span class="line">block.o: block.cpp block.h common.h color.h display_symbol.h</span><br><span class="line">	$(CXX) -c $&lt; -o $@</span><br><span class="line"></span><br><span class="line">command.o: command.cpp scene.h common.h block.h command.h</span><br><span class="line">	$(CXX) -c $&lt; -o $@</span><br><span class="line"></span><br><span class="line">i18n.o: i18n.cpp i18n.h</span><br><span class="line">	$(CXX) -c $&lt; -o $@</span><br><span class="line"></span><br><span class="line">input.o: input.cpp common.h i18n.h utility.inl</span><br><span class="line">	$(CXX) -c $&lt; -o $@</span><br><span class="line"></span><br><span class="line">main.o: main.cpp i18n.h input.h common.h scene.h block.h command.h system_env.hpp utility.inl</span><br><span class="line">	$(CXX) -c $&lt; -o $@</span><br><span class="line"></span><br><span class="line">scene.o: scene.cpp scene.h common.h block.h command.h display_symbol.h i18n.h utility.inl color.h</span><br><span class="line">	$(CXX) -c $&lt; -o $@</span><br><span class="line"></span><br><span class="line">.PHONY : clean</span><br><span class="line">clean:</span><br><span class="line">	-@ rm -rf sudoku</span><br><span class="line">	-@ rm -rf $(objs)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>运行效果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:sudoku_make$ make</span><br><span class="line">g++ -c block.cpp -o block.o</span><br><span class="line">g++ -c command.cpp -o command.o</span><br><span class="line">g++ -c i18n.cpp -o i18n.o</span><br><span class="line">g++ -c input.cpp -o input.o</span><br><span class="line">g++ -c main.cpp -o main.o</span><br><span class="line">g++ -c scene.cpp -o scene.o</span><br><span class="line">g++ -o sudoku block.o command.o i18n.o input.o main.o scene.o</span><br><span class="line">laolang@laolang-mint:sudoku_make$ </span><br></pre></td></tr></table></figure>

<h2 id="绑定目标的变量"><a href="#绑定目标的变量" class="headerlink" title="绑定目标的变量"></a>绑定目标的变量</h2><p>Makefile中的变量一般是全局变量。也就是说定义之后在Makefile的任意位置都可以使用。但也可以将变量指定在某个目标的范围内，这样这个变量就只能在这个目标对应的规则里面保用</p>
<p>语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">target … : variable-assignment</span><br><span class="line">target … : prerequisites</span><br><span class="line">    recipes</span><br><span class="line">    …</span><br></pre></td></tr></table></figure>


<p>例一</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var1 = Global Var</span><br><span class="line"></span><br><span class="line">first: all t2</span><br><span class="line"></span><br><span class="line">all: var2 = Target All Var</span><br><span class="line">all:</span><br><span class="line">	@echo $(var1)</span><br><span class="line">	@echo $(var2)</span><br><span class="line"></span><br><span class="line">t2:</span><br><span class="line">	@echo $(var1)</span><br><span class="line">	@echo $(var2) # 空白输出</span><br></pre></td></tr></table></figure>

<p>运行效果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:tmp$ make </span><br><span class="line">Global Var</span><br><span class="line">Target All Var</span><br><span class="line">Global Var</span><br><span class="line"></span><br><span class="line">laolang@laolang-mint:tmp$ </span><br></pre></td></tr></table></figure>

<p>这种定义变量的方式，目标也可以使用模式匹配，这样所有能匹配上的目标范围内都可以使用这些变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var1 = Global Var</span><br><span class="line"></span><br><span class="line">first: all.v t2.v t3</span><br><span class="line"></span><br><span class="line">%.v: var2 = Target %.v Var</span><br><span class="line">all.v:</span><br><span class="line">	@echo $@ -- $(var1)</span><br><span class="line">	@echo $@ -- $(var2) # 模式匹配</span><br><span class="line"></span><br><span class="line">t2.v:</span><br><span class="line">	@echo $@ -- $(var1)</span><br><span class="line">	@echo $@ -- $(var2) # 模式匹配</span><br><span class="line">t3:</span><br><span class="line">	@echo $@ -- $(var1)</span><br><span class="line">	@echo $@ -- $(var2) # 空白输出</span><br></pre></td></tr></table></figure>

<p>运行效果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:tmp$ make </span><br><span class="line">all.v -- Global Var</span><br><span class="line">all.v -- Target %.v Var</span><br><span class="line">t2.v -- Global Var</span><br><span class="line">t2.v -- Target %.v Var</span><br><span class="line">t3 -- Global Var</span><br><span class="line">t3 --</span><br><span class="line">laolang@laolang-mint:tmp$ </span><br></pre></td></tr></table></figure>

<h2 id="二次展开"><a href="#二次展开" class="headerlink" title="二次展开"></a>二次展开</h2><p>前面说过依赖中的变量都是在Makefile读取阶段立即展开的。如果想让依赖的的变量延迟展开，可以使用.SECONDEXPANSION:，添加之后，在依赖中使用变量时用$$，可以让变量在第二阶段进行二次展开，从而达到延迟展开的效果。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">VAR1 = hello.c</span><br><span class="line">.SECONDEXPANSION:</span><br><span class="line">all: $$(VAR1)</span><br><span class="line">	@echo $^</span><br><span class="line"></span><br><span class="line">VAR1 = main.c</span><br></pre></td></tr></table></figure>

<p>运行效果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:tmp$ make</span><br><span class="line">main.c</span><br><span class="line">laolang@laolang-mint:tmp$ </span><br></pre></td></tr></table></figure>

<h1 id="自动推到与隐式规则"><a href="#自动推到与隐式规则" class="headerlink" title="自动推到与隐式规则"></a>自动推到与隐式规则</h1><p>Makefile中有一些生成目标文件的规则使用频率非常高，比如由.c或.cpp文件编译成.o文件，这样的规则在make中可以自动推导，所以可以不用明确写出来，这样的规则称为隐式规则。</p>
<h2 id="一些-make-预定义的规则"><a href="#一些-make-预定义的规则" class="headerlink" title="一些 make 预定义的规则"></a>一些 make 预定义的规则</h2><h3 id="C-语言编译"><a href="#C-语言编译" class="headerlink" title="C 语言编译"></a>C 语言编译</h3><p>从 <code>.c</code> 到 <code>.o</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$(CC) $(CPPFLAGS) $(CFLAGS) -c</span><br></pre></td></tr></table></figure>

<h3 id="C-编译"><a href="#C-编译" class="headerlink" title="C++ 编译"></a>C++ 编译</h3><p>从 <code>.cpp</code> 到 <code>.o</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c</span><br></pre></td></tr></table></figure>

<h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>由 .o 文件链接到可执行文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$(CC) $(LDFLAGS) *.o $(LOADLIBES) $(LDLIBS)</span><br></pre></td></tr></table></figure>

<h2 id="隐式规则中常用的一些变量"><a href="#隐式规则中常用的一些变量" class="headerlink" title="隐式规则中常用的一些变量"></a>隐式规则中常用的一些变量</h2><table>
    <thead>
        <tr>
            <td width="100" align="center">变量名</td>
            <td>含义</td>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td align="center">CC</td>
            <td>编译 C 语言的程序, 默认为: `cc`</td>
        </tr>
        <tr>
            <td align="center">CXX</td>
            <td>编译 C++ 的程序, 默认为: `g++`</td>
        </tr>
        <tr>
            <td align="center">AR</td>
            <td>归档程序, 默认为: `ar`</td>
        </tr>
        <tr>
            <td align="center">CFLAGS</td>
            <td>传递给 C 编译器的一些选项, 例如: `-O2 -linclude`</td>
        </tr>
        <tr>
            <td align="center">CXXFLAGS</td>
            <td>传递给 C 编译器的一些选项, 例如: `-std=c++ 11 -fexec-charset=GBK`</td>
        </tr>
        <tr>
            <td align="center">CPPFLAGS</td>
            <td>预处理的一些选项</td>
        </tr>
        <tr>
            <td align="center">LDFLAGS</td>
            <td>链接选项，如 `-L`</td>
        </tr>
        <tr>
            <td align="center">LDLIBS</td>
            <td>链接需要用到的库，如 `-lkernel32 -luser32 -lgdi32`</td>
        </tr>
    </tbody>
</table>

<h2 id="多目标与多规则"><a href="#多目标与多规则" class="headerlink" title="多目标与多规则"></a>多目标与多规则</h2><p>显式规则中一条规则可以有多个目标，多个目标可以是相互独立的目标，也可以是组合目标，用写法来区分</p>
<h3 id="独立多目标"><a href="#独立多目标" class="headerlink" title="独立多目标"></a>独立多目标</h3><p>相互独立的多个目标与依赖之间直接用 <code>:</code> ，常用这种方式的有以下两种情况</p>
<ol>
<li><p>只需要写目标和依赖，不需要写方法的时候</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">block.o input.o scene.o : common.h</span><br></pre></td></tr></table></figure>
<p>这种写法等价于</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">block.o : common.h</span><br><span class="line">input.o : common.h</span><br><span class="line">scene.o : common.h</span><br></pre></td></tr></table></figure>
</li>
<li><p>生成(更新)目标的方法写法一样的，只是依赖与目标不一样时。之前写的Makfile中，有如下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">block.o: block.cpp common.h block.h color.h</span><br><span class="line">    g++ -c block.cpp</span><br><span class="line">command.o: command.cpp command.h scene.h</span><br><span class="line">    g++ -c command.cpp</span><br><span class="line">input.o: input.cpp common.h utility.inl</span><br><span class="line">    g++ -c input.cpp</span><br><span class="line">main.o: main.cpp scene.h input.h test.h</span><br><span class="line">    g++ -c main.cpp</span><br><span class="line">scene.o: scene.cpp common.h scene.h utility.inl</span><br><span class="line">    g++ -c scene.cpp</span><br><span class="line">test.o: test.cpp test.h</span><br><span class="line">    g++ -c test.cpp</span><br></pre></td></tr></table></figure>
<p>所有.o文件的生成都用的同一方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">g++ -c &lt;文件名&gt;</span><br></pre></td></tr></table></figure>
<p>如果不考虑依赖源文件进行更新时，可以进行简写如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">block.o command.o input.o main.o scene.o test.o : common.h block.h command.h ...</span><br><span class="line">    g++ -c $(@:%.o=%.cpp)</span><br></pre></td></tr></table></figure>
<p>这种写法实际上等价于</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">block.o : common.h block.h command.h ...</span><br><span class="line">    g++ -c $(subst .o,.cpp,$@)</span><br><span class="line">command.o : common.h block.h command.h ...</span><br><span class="line">    g++ -c $(subst .o,.cpp,$@)</span><br><span class="line">input.o : common.h block.h command.h ...</span><br><span class="line">    g++ -c $(subst .o,.cpp,$@)</span><br><span class="line">main.o : common.h block.h command.h ...</span><br><span class="line">    g++ -c $(subst .o,.cpp,$@)</span><br><span class="line">scene.o : common.h block.h command.h ...</span><br><span class="line">    g++ -c $(subst .o,.cpp,$@)</span><br><span class="line">test.o : common.h block.h command.h ...</span><br><span class="line">    g++ -c $(subst .o,.cpp,$@)</span><br></pre></td></tr></table></figure>
<p>其中，@表示的是目标名称。subst是一个字符串替换函数，<code>(subst .o,.cpp,$@)</code> 表示将目标名称中的 <code>.o</code> 替换为 <code>.cpp</code> 。<br>这样的简写可以减少内容的书写量，但是不利于将每个目标与依赖分别对应。</p>
</li>
</ol>
<p>例如更新 sudoku Makefile</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CXX = g++</span><br><span class="line">CXXFLAGS = -Wall</span><br><span class="line">.DEFAULT_GOAL = sudoku</span><br><span class="line"></span><br><span class="line">.SILENT: hello</span><br><span class="line"></span><br><span class="line">.ONESHELL:</span><br><span class="line"></span><br><span class="line">objs = block.o command.o i18n.o input.o main.o scene.o</span><br><span class="line"></span><br><span class="line">sudoku: $(objs)</span><br><span class="line">	$(CXX) -o $@ $^</span><br><span class="line"></span><br><span class="line">$(objs):</span><br><span class="line">	$(CXX) $(CXXFLAGS) -c $(@:%.o=%.cpp)</span><br><span class="line"></span><br><span class="line">.PHONY : clean</span><br><span class="line">clean:</span><br><span class="line">	-@ rm -rf sudoku</span><br><span class="line">	-@ rm -rf $(objs)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>运行效果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:sudoku_make$ make</span><br><span class="line">g++ -Wall -c block.cpp</span><br><span class="line">g++ -Wall -c command.cpp</span><br><span class="line">g++ -Wall -c i18n.cpp</span><br><span class="line">g++ -Wall -c input.cpp</span><br><span class="line">g++ -Wall -c main.cpp</span><br><span class="line">g++ -Wall -c scene.cpp</span><br><span class="line">g++ -o sudoku block.o command.o i18n.o input.o main.o scene.o</span><br><span class="line">laolang@laolang-mint:sudoku_make$ </span><br></pre></td></tr></table></figure>

<h3 id="组合多目标"><a href="#组合多目标" class="headerlink" title="组合多目标"></a>组合多目标</h3><p>多目标与依赖之前用 <code>&amp;:</code>，这样的多个目标称为组合目标。与独立多目标的区别在于，独立多目标每个目标的更新需要单独调用一次更新方法。而组合多目标调用一次方法将更新所有目标</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">block.o input.o scene.o &amp;: block.cpp input.cpp scene.cpp common.h</span><br><span class="line">    g++ -c block.cpp</span><br><span class="line">    g++ -c input.cpp</span><br><span class="line">    g++ -c scene.cpp</span><br></pre></td></tr></table></figure>

<p>所有目标的更新方法都写到其中，每次更新只会调用一次。</p>
<h3 id="同一目标多条规则"><a href="#同一目标多条规则" class="headerlink" title="同一目标多条规则"></a>同一目标多条规则</h3><p>同一目标可以对应多条规则。同一目标的所有规则中的依赖会被合并。但如果同一目标对应的多条规则都写了更新方法，则会使用最新的一条更新方法，并且会输出警告信息。</p>
<p>同一目标多规则通常用来给多个目标添加依赖而不用改动已写好的部分。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">input.o: input.cpp utility.inl</span><br><span class="line">    g++ -c input.cpp</span><br><span class="line">main.o: main.cpp scene.h input.h test.h</span><br><span class="line">    g++ -c main.cpp</span><br><span class="line">scene.o: scene.cpp scene.h utility.inl</span><br><span class="line">    g++ -c scene.cpp</span><br><span class="line"></span><br><span class="line">input.o main.o scene.o : common.h</span><br></pre></td></tr></table></figure>

<p>同时给三个目标添加了一个依赖common.h，但是不用修改上面已写好的部分。</p>
<h2 id="静态模式"><a href="#静态模式" class="headerlink" title="静态模式"></a>静态模式</h2><p>独立多目标可以简化Makefile的书写，但是不利于将各个目标的依赖分开，让目标文件根据各自的依赖进行更新。静态模式可以在一定程度上改进依赖分开问题。</p>
<p>静态模式就是用 <code>%</code> 进行文件匹配来推导出对应的依赖。</p>
<p>语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">targets …: target-pattern(目标模式): prereq-patterns(依赖模式) …</span><br><span class="line">        recipe</span><br><span class="line">        …</span><br></pre></td></tr></table></figure>

<p>先看一个例子</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">block.o : %.o : %.cpp %.h</span><br><span class="line">    g++ -c $&lt;</span><br></pre></td></tr></table></figure>

<p>block.o为目标，%.o为目标模式，%.cpp，%.h为依赖模式，对于这一条规则，%.o代表的是目标文件block.o，所以这里的%匹配的是block，因此，%.cpp表示block.cpp，%.h代表block.h，所以block.o : %.o : %.cpp %.h表示的意思同下面这种写法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">block.o : block.cpp block.h</span><br></pre></td></tr></table></figure>
<p>自动推导出block.o依赖block.cpp和block.h。</p>
<p>另外，&lt;表示目标的第一个依赖，在这条规则中，<br>&lt;表示block.cpp</p>
<p>对应的Makefile可以做如下改进</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">block.o command.o input.o scene.o test.o: %.o : %.cpp %.h</span><br><span class="line">    g++ -c $&lt;</span><br><span class="line">main.o: main.cpp scene.h input.h test.h</span><br><span class="line">    g++ -c main.cpp</span><br></pre></td></tr></table></figure>

<p>用这种方式可以在简写的同时一定程度上解决各个目标对应的依赖问题。</p>
<p>(不属于静态模式的内容，隐式规则的内容)利用模式匹配可以直接将所有.cpp到.o文件的编译简写为如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">%.o : %.cpp %.h</span><br><span class="line">    g++ -c $&lt;</span><br></pre></td></tr></table></figure>

<p>修正 sudoku Makefile 如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CXX = g++</span><br><span class="line">CXXFLAGS = -Wall</span><br><span class="line">.DEFAULT_GOAL = sudoku</span><br><span class="line"></span><br><span class="line">.SILENT: hello</span><br><span class="line"></span><br><span class="line">.ONESHELL:</span><br><span class="line"></span><br><span class="line">objs = block.o command.o i18n.o input.o scene.o</span><br><span class="line"></span><br><span class="line">sudoku: $(objs) main.o</span><br><span class="line">	$(CXX) -o $@ $^</span><br><span class="line"></span><br><span class="line">main.o: %.o : %.cpp</span><br><span class="line">	$(CXX) $(CXXFLAGS) -c $&lt;</span><br><span class="line"></span><br><span class="line">$(objs): %.o : %.cpp %.h</span><br><span class="line">	$(CXX) $(CXXFLAGS) -c $&lt;</span><br><span class="line"></span><br><span class="line">.PHONY : clean</span><br><span class="line">clean:</span><br><span class="line">	-@ rm -rf sudoku</span><br><span class="line">	-@ rm -rf $(objs)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>运行如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:sudoku_make$ make</span><br><span class="line">g++ -Wall -c block.cpp</span><br><span class="line">g++ -Wall -c command.cpp</span><br><span class="line">g++ -Wall -c i18n.cpp</span><br><span class="line">g++ -Wall -c input.cpp</span><br><span class="line">g++ -Wall -c scene.cpp</span><br><span class="line">g++ -o sudoku block.o command.o i18n.o input.o scene.o main.o</span><br><span class="line">laolang@laolang-mint:sudoku_make$</span><br></pre></td></tr></table></figure>

<p>修改 block.h 之后</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">laolang@laolang-mint:sudoku_make$ make</span><br><span class="line">g++ -Wall -c block.cpp</span><br><span class="line">g++ -o sudoku block.o command.o i18n.o input.o scene.o main.o</span><br><span class="line">laolang@laolang-mint:sudoku_make$ </span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>c++</category>
        <category>makefile</category>
      </categories>
      <tags>
        <tag>c++</tag>
        <tag>makefile</tag>
      </tags>
  </entry>
</search>
